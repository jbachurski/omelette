<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="518" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="501.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="501.00"> </text><svg id="frames" x="10" width="1180" total_samples="7161"><g><title>libdyld.dylib`dyld4::LibSystemHelpers::getenv (3 samples, 0.04%)</title><rect x="0.0000%" y="437" width="0.0419%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3"/><text x="0.2500%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__exit (3 samples, 0.04%)</title><rect x="0.0000%" y="421" width="0.0419%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="3"/><text x="0.2500%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="0.0419%" y="357" width="0.0140%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="1"/><text x="0.2919%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="0.0419%" y="341" width="0.0140%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="1"/><text x="0.2919%" y="351.50"></text></g><g><title>omelette`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="0.0559%" y="197" width="0.0140%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="1"/><text x="0.3059%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="0.0559%" y="181" width="0.0140%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="1"/><text x="0.3059%" y="191.50"></text></g><g><title>omelette`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="0.0698%" y="149" width="0.0140%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="1"/><text x="0.3198%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="0.0698%" y="133" width="0.0140%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="1"/><text x="0.3198%" y="143.50"></text></g><g><title>omelette`core::fmt::Formatter::pad_integral (1 samples, 0.01%)</title><rect x="0.0838%" y="133" width="0.0140%" height="15" fill="rgb(218,30,26)" fg:x="6" fg:w="1"/><text x="0.3338%" y="143.50"></text></g><g><title>omelette`&lt;&amp;T as core::fmt::Debug&gt;::fmt (3 samples, 0.04%)</title><rect x="0.0698%" y="181" width="0.0419%" height="15" fill="rgb(220,122,19)" fg:x="5" fg:w="3"/><text x="0.3198%" y="191.50"></text></g><g><title>omelette`core::fmt::Formatter::debug_tuple_field1_finish (3 samples, 0.04%)</title><rect x="0.0698%" y="165" width="0.0419%" height="15" fill="rgb(250,228,42)" fg:x="5" fg:w="3"/><text x="0.3198%" y="175.50"></text></g><g><title>omelette`core::fmt::builders::DebugTuple::field (2 samples, 0.03%)</title><rect x="0.0838%" y="149" width="0.0279%" height="15" fill="rgb(240,193,28)" fg:x="6" fg:w="2"/><text x="0.3338%" y="159.50"></text></g><g><title>omelette`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.01%)</title><rect x="0.0978%" y="133" width="0.0140%" height="15" fill="rgb(216,20,37)" fg:x="7" fg:w="1"/><text x="0.3478%" y="143.50"></text></g><g><title>omelette`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="0.0978%" y="117" width="0.0140%" height="15" fill="rgb(206,188,39)" fg:x="7" fg:w="1"/><text x="0.3478%" y="127.50"></text></g><g><title>omelette`&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="0.0978%" y="101" width="0.0140%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="1"/><text x="0.3478%" y="111.50"></text></g><g><title>omelette`core::slice::memchr::memrchr (1 samples, 0.01%)</title><rect x="0.0978%" y="85" width="0.0140%" height="15" fill="rgb(231,73,38)" fg:x="7" fg:w="1"/><text x="0.3478%" y="95.50"></text></g><g><title>omelette`&lt;omelette::Class as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="0.1117%" y="181" width="0.0140%" height="15" fill="rgb(225,20,46)" fg:x="8" fg:w="1"/><text x="0.3617%" y="191.50"></text></g><g><title>omelette`core::fmt::Formatter::debug_tuple_field1_finish (1 samples, 0.01%)</title><rect x="0.1117%" y="165" width="0.0140%" height="15" fill="rgb(210,31,41)" fg:x="8" fg:w="1"/><text x="0.3617%" y="175.50"></text></g><g><title>omelette`&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="0.1117%" y="149" width="0.0140%" height="15" fill="rgb(221,200,47)" fg:x="8" fg:w="1"/><text x="0.3617%" y="159.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::fmt::Debug&gt;::fmt (6 samples, 0.08%)</title><rect x="0.0559%" y="229" width="0.0838%" height="15" fill="rgb(226,26,5)" fg:x="4" fg:w="6"/><text x="0.3059%" y="239.50"></text></g><g><title>omelette`core::fmt::Formatter::debug_tuple_field2_finish (6 samples, 0.08%)</title><rect x="0.0559%" y="213" width="0.0838%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="6"/><text x="0.3059%" y="223.50"></text></g><g><title>omelette`core::fmt::builders::DebugTuple::field (5 samples, 0.07%)</title><rect x="0.0698%" y="197" width="0.0698%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="5"/><text x="0.3198%" y="207.50"></text></g><g><title>omelette`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="0.1257%" y="181" width="0.0140%" height="15" fill="rgb(221,5,38)" fg:x="9" fg:w="1"/><text x="0.3757%" y="191.50"></text></g><g><title>omelette`&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="0.1257%" y="165" width="0.0140%" height="15" fill="rgb(247,18,42)" fg:x="9" fg:w="1"/><text x="0.3757%" y="175.50"></text></g><g><title>omelette`core::slice::memchr::memrchr (1 samples, 0.01%)</title><rect x="0.1257%" y="149" width="0.0140%" height="15" fill="rgb(241,131,45)" fg:x="9" fg:w="1"/><text x="0.3757%" y="159.50"></text></g><g><title>omelette`&lt;omelette::Node as core::fmt::Debug&gt;::fmt (7 samples, 0.10%)</title><rect x="0.0559%" y="277" width="0.0978%" height="15" fill="rgb(249,31,29)" fg:x="4" fg:w="7"/><text x="0.3059%" y="287.50"></text></g><g><title>omelette`core::fmt::Formatter::debug_struct_field2_finish (7 samples, 0.10%)</title><rect x="0.0559%" y="261" width="0.0978%" height="15" fill="rgb(225,111,53)" fg:x="4" fg:w="7"/><text x="0.3059%" y="271.50"></text></g><g><title>omelette`core::fmt::builders::DebugStruct::field (7 samples, 0.10%)</title><rect x="0.0559%" y="245" width="0.0978%" height="15" fill="rgb(238,160,17)" fg:x="4" fg:w="7"/><text x="0.3059%" y="255.50"></text></g><g><title>omelette`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="0.1396%" y="229" width="0.0140%" height="15" fill="rgb(214,148,48)" fg:x="10" fg:w="1"/><text x="0.3896%" y="239.50"></text></g><g><title>dyld`start (21 samples, 0.29%)</title><rect x="0.0000%" y="453" width="0.2933%" height="15" fill="rgb(232,36,49)" fg:x="0" fg:w="21"/><text x="0.2500%" y="463.50"></text></g><g><title>omelette`main (18 samples, 0.25%)</title><rect x="0.0419%" y="437" width="0.2514%" height="15" fill="rgb(209,103,24)" fg:x="3" fg:w="18"/><text x="0.2919%" y="447.50"></text></g><g><title>omelette`std::rt::lang_start_internal (18 samples, 0.25%)</title><rect x="0.0419%" y="421" width="0.2514%" height="15" fill="rgb(229,88,8)" fg:x="3" fg:w="18"/><text x="0.2919%" y="431.50"></text></g><g><title>omelette`std::rt::lang_start::_{{closure}} (18 samples, 0.25%)</title><rect x="0.0419%" y="405" width="0.2514%" height="15" fill="rgb(213,181,19)" fg:x="3" fg:w="18"/><text x="0.2919%" y="415.50"></text></g><g><title>omelette`std::sys::backtrace::__rust_begin_short_backtrace (18 samples, 0.25%)</title><rect x="0.0419%" y="389" width="0.2514%" height="15" fill="rgb(254,191,54)" fg:x="3" fg:w="18"/><text x="0.2919%" y="399.50"></text></g><g><title>omelette`omelette::main (18 samples, 0.25%)</title><rect x="0.0419%" y="373" width="0.2514%" height="15" fill="rgb(241,83,37)" fg:x="3" fg:w="18"/><text x="0.2919%" y="383.50"></text></g><g><title>omelette`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 0.24%)</title><rect x="0.0559%" y="357" width="0.2374%" height="15" fill="rgb(233,36,39)" fg:x="4" fg:w="17"/><text x="0.3059%" y="367.50"></text></g><g><title>omelette`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.24%)</title><rect x="0.0559%" y="341" width="0.2374%" height="15" fill="rgb(226,3,54)" fg:x="4" fg:w="17"/><text x="0.3059%" y="351.50"></text></g><g><title>omelette`std::io::stdio::_print (17 samples, 0.24%)</title><rect x="0.0559%" y="325" width="0.2374%" height="15" fill="rgb(245,192,40)" fg:x="4" fg:w="17"/><text x="0.3059%" y="335.50"></text></g><g><title>omelette`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (17 samples, 0.24%)</title><rect x="0.0559%" y="309" width="0.2374%" height="15" fill="rgb(238,167,29)" fg:x="4" fg:w="17"/><text x="0.3059%" y="319.50"></text></g><g><title>omelette`core::fmt::write (17 samples, 0.24%)</title><rect x="0.0559%" y="293" width="0.2374%" height="15" fill="rgb(232,182,51)" fg:x="4" fg:w="17"/><text x="0.3059%" y="303.50"></text></g><g><title>omelette`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (10 samples, 0.14%)</title><rect x="0.1536%" y="277" width="0.1396%" height="15" fill="rgb(231,60,39)" fg:x="11" fg:w="10"/><text x="0.4036%" y="287.50"></text></g><g><title>omelette`&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (10 samples, 0.14%)</title><rect x="0.1536%" y="261" width="0.1396%" height="15" fill="rgb(208,69,12)" fg:x="11" fg:w="10"/><text x="0.4036%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`write (10 samples, 0.14%)</title><rect x="0.1536%" y="245" width="0.1396%" height="15" fill="rgb(235,93,37)" fg:x="11" fg:w="10"/><text x="0.4036%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__exit (11 samples, 0.15%)</title><rect x="0.2933%" y="453" width="0.1536%" height="15" fill="rgb(213,116,39)" fg:x="21" fg:w="11"/><text x="0.5433%" y="463.50"></text></g><g><title>omelette`&lt;differential_dataflow::collection::Collection&lt;G,D,R&gt; as differential_dataflow::operators::iterate::Iterate&lt;G,D,R&gt;&gt;::iterate (1 samples, 0.01%)</title><rect x="0.4469%" y="357" width="0.0140%" height="15" fill="rgb(222,207,29)" fg:x="32" fg:w="1"/><text x="0.6969%" y="367.50"></text></g><g><title>omelette`&lt;timely::dataflow::scopes::child::Child&lt;G,T&gt; as timely::dataflow::scopes::Scope&gt;::scoped (1 samples, 0.01%)</title><rect x="0.4469%" y="341" width="0.0140%" height="15" fill="rgb(206,96,30)" fg:x="32" fg:w="1"/><text x="0.6969%" y="351.50"></text></g><g><title>omelette`omelette::main::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.01%)</title><rect x="0.4469%" y="325" width="0.0140%" height="15" fill="rgb(218,138,4)" fg:x="32" fg:w="1"/><text x="0.6969%" y="335.50"></text></g><g><title>omelette`differential_dataflow::operators::arrange::arrangement::arrange_core (1 samples, 0.01%)</title><rect x="0.4469%" y="309" width="0.0140%" height="15" fill="rgb(250,191,14)" fg:x="32" fg:w="1"/><text x="0.6969%" y="319.50"></text></g><g><title>omelette`timely::dataflow::operators::generic::builder_rc::OperatorBuilder&lt;G&gt;::build_reschedule (1 samples, 0.01%)</title><rect x="0.4469%" y="293" width="0.0140%" height="15" fill="rgb(239,60,40)" fg:x="32" fg:w="1"/><text x="0.6969%" y="303.50"></text></g><g><title>omelette`differential_dataflow::trace::wrappers::rc::TraceBox&lt;Tr&gt;::new (1 samples, 0.01%)</title><rect x="0.4469%" y="277" width="0.0140%" height="15" fill="rgb(206,27,48)" fg:x="32" fg:w="1"/><text x="0.6969%" y="287.50"></text></g><g><title>omelette`timely::worker::Worker&lt;A&gt;::dataflow (2 samples, 0.03%)</title><rect x="0.4469%" y="373" width="0.0279%" height="15" fill="rgb(225,35,8)" fg:x="32" fg:w="2"/><text x="0.6969%" y="383.50"></text></g><g><title>omelette`&lt;timely::dataflow::operators::generic::builder_raw::OperatorCore&lt;T,L&gt; as timely::scheduling::Schedule&gt;::schedule (1 samples, 0.01%)</title><rect x="0.4608%" y="357" width="0.0140%" height="15" fill="rgb(250,213,24)" fg:x="33" fg:w="1"/><text x="0.7108%" y="367.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (2 samples, 0.03%)</title><rect x="0.4888%" y="357" width="0.0279%" height="15" fill="rgb(247,123,22)" fg:x="35" fg:w="2"/><text x="0.7388%" y="367.50"></text></g><g><title>omelette`&lt;alloc::vec::Vec&lt;T&gt; as timely_container::SizableContainer&gt;::ensure_capacity (1 samples, 0.01%)</title><rect x="0.5446%" y="309" width="0.0140%" height="15" fill="rgb(231,138,38)" fg:x="39" fg:w="1"/><text x="0.7946%" y="319.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.03%)</title><rect x="0.5865%" y="277" width="0.0279%" height="15" fill="rgb(231,145,46)" fg:x="42" fg:w="2"/><text x="0.8365%" y="287.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (5 samples, 0.07%)</title><rect x="0.6144%" y="261" width="0.0698%" height="15" fill="rgb(251,118,11)" fg:x="44" fg:w="5"/><text x="0.8644%" y="271.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (1 samples, 0.01%)</title><rect x="0.6843%" y="261" width="0.0140%" height="15" fill="rgb(217,147,25)" fg:x="49" fg:w="1"/><text x="0.9343%" y="271.50"></text></g><g><title>omelette`core::slice::sort::unstable::ipnsort (1 samples, 0.01%)</title><rect x="0.6982%" y="261" width="0.0140%" height="15" fill="rgb(247,81,37)" fg:x="50" fg:w="1"/><text x="0.9482%" y="271.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (2 samples, 0.03%)</title><rect x="0.7262%" y="245" width="0.0279%" height="15" fill="rgb(209,12,38)" fg:x="52" fg:w="2"/><text x="0.9762%" y="255.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (3 samples, 0.04%)</title><rect x="0.7541%" y="245" width="0.0419%" height="15" fill="rgb(227,1,9)" fg:x="54" fg:w="3"/><text x="1.0041%" y="255.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="0.8239%" y="229" width="0.0140%" height="15" fill="rgb(248,47,43)" fg:x="59" fg:w="1"/><text x="1.0739%" y="239.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::choose_pivot (1 samples, 0.01%)</title><rect x="0.8379%" y="229" width="0.0140%" height="15" fill="rgb(221,10,30)" fg:x="60" fg:w="1"/><text x="1.0879%" y="239.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="0.8379%" y="213" width="0.0140%" height="15" fill="rgb(210,229,1)" fg:x="60" fg:w="1"/><text x="1.0879%" y="223.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (2 samples, 0.03%)</title><rect x="0.8518%" y="229" width="0.0279%" height="15" fill="rgb(222,148,37)" fg:x="61" fg:w="2"/><text x="1.1018%" y="239.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::sort4_stable (1 samples, 0.01%)</title><rect x="0.8658%" y="213" width="0.0140%" height="15" fill="rgb(234,67,33)" fg:x="62" fg:w="1"/><text x="1.1158%" y="223.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::chunker::VecChunker&lt;((K,V),T,R)&gt; as timely_container::PushInto&lt;&amp;mut alloc::vec::Vec&lt;((K,V),T,R)&gt;&gt;&gt;::push_into (27 samples, 0.38%)</title><rect x="0.5586%" y="293" width="0.3770%" height="15" fill="rgb(247,98,35)" fg:x="40" fg:w="27"/><text x="0.8086%" y="303.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_updates_from (23 samples, 0.32%)</title><rect x="0.6144%" y="277" width="0.3212%" height="15" fill="rgb(247,138,52)" fg:x="44" fg:w="23"/><text x="0.8644%" y="287.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (16 samples, 0.22%)</title><rect x="0.7122%" y="261" width="0.2234%" height="15" fill="rgb(213,79,30)" fg:x="51" fg:w="16"/><text x="0.9622%" y="271.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (10 samples, 0.14%)</title><rect x="0.7960%" y="245" width="0.1396%" height="15" fill="rgb(246,177,23)" fg:x="57" fg:w="10"/><text x="1.0460%" y="255.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (4 samples, 0.06%)</title><rect x="0.8798%" y="229" width="0.0559%" height="15" fill="rgb(230,62,27)" fg:x="63" fg:w="4"/><text x="1.1298%" y="239.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (2 samples, 0.03%)</title><rect x="0.9077%" y="213" width="0.0279%" height="15" fill="rgb(216,154,8)" fg:x="65" fg:w="2"/><text x="1.1577%" y="223.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::merge_batcher::container::ContainerMerger&lt;MC,CQ&gt; as differential_dataflow::trace::implementations::merge_batcher::Merger&gt;::merge (9 samples, 0.13%)</title><rect x="0.9356%" y="261" width="0.1257%" height="15" fill="rgb(244,35,45)" fg:x="67" fg:w="9"/><text x="1.1856%" y="271.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::merge_batcher::MergeBatcher&lt;Input,C,M&gt; as differential_dataflow::trace::Batcher&gt;::push_container (41 samples, 0.57%)</title><rect x="0.5586%" y="309" width="0.5725%" height="15" fill="rgb(251,115,12)" fg:x="40" fg:w="41"/><text x="0.8086%" y="319.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::MergeBatcher&lt;Input,C,M&gt;::insert_chain (14 samples, 0.20%)</title><rect x="0.9356%" y="293" width="0.1955%" height="15" fill="rgb(240,54,50)" fg:x="67" fg:w="14"/><text x="1.1856%" y="303.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::MergeBatcher&lt;Input,C,M&gt;::merge_by (14 samples, 0.20%)</title><rect x="0.9356%" y="277" width="0.1955%" height="15" fill="rgb(233,84,52)" fg:x="67" fg:w="14"/><text x="1.1856%" y="287.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (5 samples, 0.07%)</title><rect x="1.0613%" y="261" width="0.0698%" height="15" fill="rgb(207,117,47)" fg:x="76" fg:w="5"/><text x="1.3113%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.01%)</title><rect x="1.1311%" y="293" width="0.0140%" height="15" fill="rgb(249,43,39)" fg:x="81" fg:w="1"/><text x="1.3811%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (1 samples, 0.01%)</title><rect x="1.1311%" y="277" width="0.0140%" height="15" fill="rgb(209,38,44)" fg:x="81" fg:w="1"/><text x="1.3811%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="1.1311%" y="261" width="0.0140%" height="15" fill="rgb(236,212,23)" fg:x="81" fg:w="1"/><text x="1.3811%" y="271.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::merge_batcher::MergeBatcher&lt;Input,C,M&gt; as differential_dataflow::trace::Batcher&gt;::seal (2 samples, 0.03%)</title><rect x="1.1311%" y="309" width="0.0279%" height="15" fill="rgb(242,79,21)" fg:x="81" fg:w="2"/><text x="1.3811%" y="319.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::rc_blanket_impls::RcBuilder&lt;B&gt; as differential_dataflow::trace::Builder&gt;::seal (1 samples, 0.01%)</title><rect x="1.1451%" y="293" width="0.0140%" height="15" fill="rgb(211,96,35)" fg:x="82" fg:w="1"/><text x="1.3951%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_plat (1 samples, 0.01%)</title><rect x="1.1451%" y="277" width="0.0140%" height="15" fill="rgb(253,215,40)" fg:x="82" fg:w="1"/><text x="1.3951%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (1 samples, 0.01%)</title><rect x="1.1451%" y="261" width="0.0140%" height="15" fill="rgb(211,81,21)" fg:x="82" fg:w="1"/><text x="1.3951%" y="271.50"></text></g><g><title>omelette`&lt;timely::dataflow::operators::generic::builder_raw::OperatorCore&lt;T,L&gt; as timely::scheduling::Schedule&gt;::schedule (49 samples, 0.68%)</title><rect x="0.5167%" y="325" width="0.6843%" height="15" fill="rgb(208,190,38)" fg:x="37" fg:w="49"/><text x="0.7667%" y="335.50"></text></g><g><title>omelette`&lt;timely_container::CapacityContainerBuilder&lt;C&gt; as timely_container::PushInto&lt;T&gt;&gt;::push_into (3 samples, 0.04%)</title><rect x="1.1591%" y="309" width="0.0419%" height="15" fill="rgb(235,213,38)" fg:x="83" fg:w="3"/><text x="1.4091%" y="319.50"></text></g><g><title>omelette`&lt;alloc::vec::Vec&lt;T&gt; as timely_container::SizableContainer&gt;::ensure_capacity (1 samples, 0.01%)</title><rect x="1.1870%" y="293" width="0.0140%" height="15" fill="rgb(237,122,38)" fg:x="85" fg:w="1"/><text x="1.4370%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="1.2009%" y="309" width="0.0140%" height="15" fill="rgb(244,218,35)" fg:x="86" fg:w="1"/><text x="1.4509%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="1.2149%" y="309" width="0.0140%" height="15" fill="rgb(240,68,47)" fg:x="87" fg:w="1"/><text x="1.4649%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="1.2289%" y="309" width="0.0140%" height="15" fill="rgb(210,16,53)" fg:x="88" fg:w="1"/><text x="1.4789%" y="319.50"></text></g><g><title>omelette`&lt;alloc::vec::Vec&lt;T&gt; as timely_container::SizableContainer&gt;::ensure_capacity (7 samples, 0.10%)</title><rect x="1.2428%" y="309" width="0.0978%" height="15" fill="rgb(235,124,12)" fg:x="89" fg:w="7"/><text x="1.4928%" y="319.50"></text></g><g><title>omelette`&lt;differential_dataflow::operators::reduce::history_replay::HistoryReplayer&lt;C1,C2,C3,V&gt; as differential_dataflow::operators::reduce::PerKeyCompute&lt;C1,C2,C3,V&gt;&gt;::compute (1 samples, 0.01%)</title><rect x="1.3406%" y="309" width="0.0140%" height="15" fill="rgb(224,169,11)" fg:x="96" fg:w="1"/><text x="1.5906%" y="319.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBuilder&lt;L,CI&gt; as differential_dataflow::trace::Builder&gt;::push (1 samples, 0.01%)</title><rect x="1.3546%" y="309" width="0.0140%" height="15" fill="rgb(250,166,2)" fg:x="97" fg:w="1"/><text x="1.6046%" y="319.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.04%)</title><rect x="1.3685%" y="309" width="0.0419%" height="15" fill="rgb(242,216,29)" fg:x="98" fg:w="3"/><text x="1.6185%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.11%)</title><rect x="1.8992%" y="293" width="0.1117%" height="15" fill="rgb(230,116,27)" fg:x="136" fg:w="8"/><text x="2.1492%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (16 samples, 0.22%)</title><rect x="2.0109%" y="293" width="0.2234%" height="15" fill="rgb(228,99,48)" fg:x="144" fg:w="16"/><text x="2.2609%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (16 samples, 0.22%)</title><rect x="2.0109%" y="277" width="0.2234%" height="15" fill="rgb(253,11,6)" fg:x="144" fg:w="16"/><text x="2.2609%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`madvise (16 samples, 0.22%)</title><rect x="2.0109%" y="261" width="0.2234%" height="15" fill="rgb(247,143,39)" fg:x="144" fg:w="16"/><text x="2.2609%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="2.2343%" y="293" width="0.0140%" height="15" fill="rgb(236,97,10)" fg:x="160" fg:w="1"/><text x="2.4843%" y="303.50"></text></g><g><title>omelette`&lt;alloc::vec::Vec&lt;T&gt; as timely_container::SizableContainer&gt;::ensure_capacity (9 samples, 0.13%)</title><rect x="2.2483%" y="293" width="0.1257%" height="15" fill="rgb(233,208,19)" fg:x="161" fg:w="9"/><text x="2.4983%" y="303.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (2 samples, 0.03%)</title><rect x="2.3740%" y="197" width="0.0279%" height="15" fill="rgb(216,164,2)" fg:x="170" fg:w="2"/><text x="2.6240%" y="207.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::consolidate_updates (1 samples, 0.01%)</title><rect x="2.4019%" y="181" width="0.0140%" height="15" fill="rgb(220,129,5)" fg:x="172" fg:w="1"/><text x="2.6519%" y="191.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (1 samples, 0.01%)</title><rect x="2.4159%" y="165" width="0.0140%" height="15" fill="rgb(242,17,10)" fg:x="173" fg:w="1"/><text x="2.6659%" y="175.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt; as differential_dataflow::trace::Merger&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;L&gt;&gt;&gt;::work (3 samples, 0.04%)</title><rect x="2.4019%" y="197" width="0.0419%" height="15" fill="rgb(242,107,0)" fg:x="172" fg:w="3"/><text x="2.6519%" y="207.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::copy_key (2 samples, 0.03%)</title><rect x="2.4159%" y="181" width="0.0279%" height="15" fill="rgb(251,28,31)" fg:x="173" fg:w="2"/><text x="2.6659%" y="191.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::consolidate_updates (1 samples, 0.01%)</title><rect x="2.4298%" y="165" width="0.0140%" height="15" fill="rgb(233,223,10)" fg:x="174" fg:w="1"/><text x="2.6798%" y="175.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (2 samples, 0.03%)</title><rect x="2.4857%" y="181" width="0.0279%" height="15" fill="rgb(215,21,27)" fg:x="178" fg:w="2"/><text x="2.7357%" y="191.50"></text></g><g><title>omelette`core::cmp::impls::_&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (3 samples, 0.04%)</title><rect x="2.5136%" y="181" width="0.0419%" height="15" fill="rgb(232,23,21)" fg:x="180" fg:w="3"/><text x="2.7636%" y="191.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (1 samples, 0.01%)</title><rect x="2.5555%" y="181" width="0.0140%" height="15" fill="rgb(244,5,23)" fg:x="183" fg:w="1"/><text x="2.8055%" y="191.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::containers::BatchContainer::push (2 samples, 0.03%)</title><rect x="2.5695%" y="181" width="0.0279%" height="15" fill="rgb(226,81,46)" fg:x="184" fg:w="2"/><text x="2.8195%" y="191.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyMerger&lt;L&gt;::consolidate_updates (2 samples, 0.03%)</title><rect x="2.5974%" y="181" width="0.0279%" height="15" fill="rgb(247,70,30)" fg:x="186" fg:w="2"/><text x="2.8474%" y="191.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (1 samples, 0.01%)</title><rect x="2.6114%" y="165" width="0.0140%" height="15" fill="rgb(212,68,19)" fg:x="187" fg:w="1"/><text x="2.8614%" y="175.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::rc_blanket_impls::RcMerger&lt;B&gt; as differential_dataflow::trace::Merger&lt;alloc::rc::Rc&lt;B&gt;&gt;&gt;::work (14 samples, 0.20%)</title><rect x="2.4438%" y="197" width="0.1955%" height="15" fill="rgb(240,187,13)" fg:x="175" fg:w="14"/><text x="2.6938%" y="207.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyMerger&lt;L&gt;::stash_updates_for_key (1 samples, 0.01%)</title><rect x="2.6253%" y="181" width="0.0140%" height="15" fill="rgb(223,113,26)" fg:x="188" fg:w="1"/><text x="2.8753%" y="191.50"></text></g><g><title>omelette`core::cmp::impls::_&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (1 samples, 0.01%)</title><rect x="2.6393%" y="197" width="0.0140%" height="15" fill="rgb(206,192,2)" fg:x="189" fg:w="1"/><text x="2.8893%" y="207.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::MergeVariant&lt;B&gt;::work (22 samples, 0.31%)</title><rect x="2.3740%" y="213" width="0.3072%" height="15" fill="rgb(241,108,4)" fg:x="170" fg:w="22"/><text x="2.6240%" y="223.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyMerger&lt;L&gt;::consolidate_updates (2 samples, 0.03%)</title><rect x="2.6533%" y="197" width="0.0279%" height="15" fill="rgb(247,173,49)" fg:x="190" fg:w="2"/><text x="2.9033%" y="207.50"></text></g><g><title>omelette`&lt;differential_dataflow::operators::arrange::agent::TraceAgent&lt;Tr&gt; as differential_dataflow::trace::TraceReader&gt;::set_physical_compaction (23 samples, 0.32%)</title><rect x="2.3740%" y="293" width="0.3212%" height="15" fill="rgb(224,114,35)" fg:x="170" fg:w="23"/><text x="2.6240%" y="303.50"></text></g><g><title>omelette`differential_dataflow::trace::wrappers::rc::TraceBox&lt;Tr&gt;::adjust_physical_compaction (23 samples, 0.32%)</title><rect x="2.3740%" y="277" width="0.3212%" height="15" fill="rgb(245,159,27)" fg:x="170" fg:w="23"/><text x="2.6240%" y="287.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::Spine&lt;B&gt;::consider_merges (23 samples, 0.32%)</title><rect x="2.3740%" y="261" width="0.3212%" height="15" fill="rgb(245,172,44)" fg:x="170" fg:w="23"/><text x="2.6240%" y="271.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::Spine&lt;B&gt;::introduce_batch (23 samples, 0.32%)</title><rect x="2.3740%" y="245" width="0.3212%" height="15" fill="rgb(236,23,11)" fg:x="170" fg:w="23"/><text x="2.6240%" y="255.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::Spine&lt;B&gt;::apply_fuel (23 samples, 0.32%)</title><rect x="2.3740%" y="229" width="0.3212%" height="15" fill="rgb(205,117,38)" fg:x="170" fg:w="23"/><text x="2.6240%" y="239.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::Spine&lt;B&gt;::complete_at (1 samples, 0.01%)</title><rect x="2.6812%" y="213" width="0.0140%" height="15" fill="rgb(237,72,25)" fg:x="192" fg:w="1"/><text x="2.9312%" y="223.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,()),timely::order::product::Product&lt;i32,u64&gt;,isize)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="2.6812%" y="197" width="0.0140%" height="15" fill="rgb(244,70,9)" fg:x="192" fg:w="1"/><text x="2.9312%" y="207.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (2 samples, 0.03%)</title><rect x="2.9744%" y="277" width="0.0279%" height="15" fill="rgb(217,125,39)" fg:x="213" fg:w="2"/><text x="3.2244%" y="287.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.03%)</title><rect x="3.0024%" y="277" width="0.0279%" height="15" fill="rgb(235,36,10)" fg:x="215" fg:w="2"/><text x="3.2524%" y="287.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (7 samples, 0.10%)</title><rect x="3.0303%" y="277" width="0.0978%" height="15" fill="rgb(251,123,47)" fg:x="217" fg:w="7"/><text x="3.2803%" y="287.50"></text></g><g><title>omelette`differential_dataflow::operators::HistoryReplay&lt;C&gt;::step_while_time_is (1 samples, 0.01%)</title><rect x="3.1281%" y="277" width="0.0140%" height="15" fill="rgb(221,13,13)" fg:x="224" fg:w="1"/><text x="3.3781%" y="287.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.04%)</title><rect x="3.2258%" y="261" width="0.0419%" height="15" fill="rgb(238,131,9)" fg:x="231" fg:w="3"/><text x="3.4758%" y="271.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialOrd&gt;::partial_cmp (38 samples, 0.53%)</title><rect x="3.2677%" y="261" width="0.5307%" height="15" fill="rgb(211,50,8)" fg:x="234" fg:w="38"/><text x="3.5177%" y="271.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (1 samples, 0.01%)</title><rect x="3.7984%" y="261" width="0.0140%" height="15" fill="rgb(245,182,24)" fg:x="272" fg:w="1"/><text x="4.0484%" y="271.50"></text></g><g><title>omelette`differential_dataflow::operators::ValueHistory&lt;C&gt;::replay (2 samples, 0.03%)</title><rect x="3.8123%" y="261" width="0.0279%" height="15" fill="rgb(242,14,37)" fg:x="273" fg:w="2"/><text x="4.0623%" y="271.50"></text></g><g><title>omelette`differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt;::minimize_keys (7 samples, 0.10%)</title><rect x="3.8402%" y="261" width="0.0978%" height="15" fill="rgb(246,228,12)" fg:x="275" fg:w="7"/><text x="4.0902%" y="271.50"></text></g><g><title>omelette`differential_dataflow::operators::ValueHistory&lt;C&gt;::replay_key (73 samples, 1.02%)</title><rect x="3.1420%" y="277" width="1.0194%" height="15" fill="rgb(213,55,15)" fg:x="225" fg:w="73"/><text x="3.3920%" y="287.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::containers::BatchContainer::advance (16 samples, 0.22%)</title><rect x="3.9380%" y="261" width="0.2234%" height="15" fill="rgb(209,9,3)" fg:x="282" fg:w="16"/><text x="4.1880%" y="271.50"></text></g><g><title>omelette`differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt;::minimize_keys (1 samples, 0.01%)</title><rect x="4.1614%" y="277" width="0.0140%" height="15" fill="rgb(230,59,30)" fg:x="298" fg:w="1"/><text x="4.4114%" y="287.50"></text></g><g><title>omelette`&lt;differential_dataflow::operators::reduce::history_replay::HistoryReplayer&lt;C1,C2,C3,V&gt; as differential_dataflow::operators::reduce::PerKeyCompute&lt;C1,C2,C3,V&gt;&gt;::compute (109 samples, 1.52%)</title><rect x="2.6952%" y="293" width="1.5221%" height="15" fill="rgb(209,121,21)" fg:x="193" fg:w="109"/><text x="2.9452%" y="303.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::containers::BatchContainer::advance (3 samples, 0.04%)</title><rect x="4.1754%" y="277" width="0.0419%" height="15" fill="rgb(220,109,13)" fg:x="299" fg:w="3"/><text x="4.4254%" y="287.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (4 samples, 0.06%)</title><rect x="4.2173%" y="293" width="0.0559%" height="15" fill="rgb(232,18,1)" fg:x="302" fg:w="4"/><text x="4.4673%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.03%)</title><rect x="4.2731%" y="277" width="0.0279%" height="15" fill="rgb(215,41,42)" fg:x="306" fg:w="2"/><text x="4.5231%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="4.3430%" y="261" width="0.0140%" height="15" fill="rgb(224,123,36)" fg:x="311" fg:w="1"/><text x="4.5930%" y="271.50"></text></g><g><title>omelette`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.10%)</title><rect x="4.3569%" y="261" width="0.0978%" height="15" fill="rgb(240,125,3)" fg:x="312" fg:w="7"/><text x="4.6069%" y="271.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.13%)</title><rect x="4.4547%" y="261" width="0.1257%" height="15" fill="rgb(205,98,50)" fg:x="319" fg:w="9"/><text x="4.7047%" y="271.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (21 samples, 0.29%)</title><rect x="4.8178%" y="245" width="0.2933%" height="15" fill="rgb(205,185,37)" fg:x="345" fg:w="21"/><text x="5.0678%" y="255.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (4 samples, 0.06%)</title><rect x="5.1110%" y="245" width="0.0559%" height="15" fill="rgb(238,207,15)" fg:x="366" fg:w="4"/><text x="5.3610%" y="255.50"></text></g><g><title>omelette`core::slice::sort::unstable::ipnsort (7 samples, 0.10%)</title><rect x="5.1669%" y="245" width="0.0978%" height="15" fill="rgb(213,199,42)" fg:x="370" fg:w="7"/><text x="5.4169%" y="255.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (16 samples, 0.22%)</title><rect x="5.4462%" y="229" width="0.2234%" height="15" fill="rgb(235,201,11)" fg:x="390" fg:w="16"/><text x="5.6962%" y="239.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::choose_pivot (2 samples, 0.03%)</title><rect x="5.6696%" y="229" width="0.0279%" height="15" fill="rgb(207,46,11)" fg:x="406" fg:w="2"/><text x="5.9196%" y="239.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::median3_rec (2 samples, 0.03%)</title><rect x="5.6696%" y="213" width="0.0279%" height="15" fill="rgb(241,35,35)" fg:x="406" fg:w="2"/><text x="5.9196%" y="223.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="5.6836%" y="197" width="0.0140%" height="15" fill="rgb(243,32,47)" fg:x="407" fg:w="1"/><text x="5.9336%" y="207.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (13 samples, 0.18%)</title><rect x="5.6975%" y="229" width="0.1815%" height="15" fill="rgb(247,202,23)" fg:x="408" fg:w="13"/><text x="5.9475%" y="239.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::sort4_stable (2 samples, 0.03%)</title><rect x="5.8511%" y="213" width="0.0279%" height="15" fill="rgb(219,102,11)" fg:x="419" fg:w="2"/><text x="6.1011%" y="223.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (8 samples, 0.11%)</title><rect x="6.0327%" y="213" width="0.1117%" height="15" fill="rgb(243,110,44)" fg:x="432" fg:w="8"/><text x="6.2827%" y="223.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (21 samples, 0.29%)</title><rect x="6.1444%" y="213" width="0.2933%" height="15" fill="rgb(222,74,54)" fg:x="440" fg:w="21"/><text x="6.3944%" y="223.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (7 samples, 0.10%)</title><rect x="6.5354%" y="197" width="0.0978%" height="15" fill="rgb(216,99,12)" fg:x="468" fg:w="7"/><text x="6.7854%" y="207.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (19 samples, 0.27%)</title><rect x="6.6332%" y="197" width="0.2653%" height="15" fill="rgb(226,22,26)" fg:x="475" fg:w="19"/><text x="6.8832%" y="207.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (2 samples, 0.03%)</title><rect x="6.8705%" y="181" width="0.0279%" height="15" fill="rgb(217,163,10)" fg:x="492" fg:w="2"/><text x="7.1205%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::sort4_stable (1 samples, 0.01%)</title><rect x="6.8985%" y="197" width="0.0140%" height="15" fill="rgb(213,25,53)" fg:x="494" fg:w="1"/><text x="7.1485%" y="207.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="6.9823%" y="165" width="0.0140%" height="15" fill="rgb(252,105,26)" fg:x="500" fg:w="1"/><text x="7.2323%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (6 samples, 0.08%)</title><rect x="6.9264%" y="181" width="0.0838%" height="15" fill="rgb(220,39,43)" fg:x="496" fg:w="6"/><text x="7.1764%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::sort4_stable (1 samples, 0.01%)</title><rect x="6.9962%" y="165" width="0.0140%" height="15" fill="rgb(229,68,48)" fg:x="501" fg:w="1"/><text x="7.2462%" y="175.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::chunker::VecChunker&lt;((K,V),T,R)&gt; as timely_container::PushInto&lt;&amp;mut alloc::vec::Vec&lt;((K,V),T,R)&gt;&gt;&gt;::push_into (195 samples, 2.72%)</title><rect x="4.3011%" y="277" width="2.7231%" height="15" fill="rgb(252,8,32)" fg:x="308" fg:w="195"/><text x="4.5511%" y="287.50">om..</text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_updates_from (175 samples, 2.44%)</title><rect x="4.5804%" y="261" width="2.4438%" height="15" fill="rgb(223,20,43)" fg:x="328" fg:w="175"/><text x="4.8304%" y="271.50">om..</text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (126 samples, 1.76%)</title><rect x="5.2646%" y="245" width="1.7595%" height="15" fill="rgb(229,81,49)" fg:x="377" fg:w="126"/><text x="5.5146%" y="255.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (82 samples, 1.15%)</title><rect x="5.8791%" y="229" width="1.1451%" height="15" fill="rgb(236,28,36)" fg:x="421" fg:w="82"/><text x="6.1291%" y="239.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (42 samples, 0.59%)</title><rect x="6.4376%" y="213" width="0.5865%" height="15" fill="rgb(249,185,26)" fg:x="461" fg:w="42"/><text x="6.6876%" y="223.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (8 samples, 0.11%)</title><rect x="6.9124%" y="197" width="0.1117%" height="15" fill="rgb(249,174,33)" fg:x="495" fg:w="8"/><text x="7.1624%" y="207.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (1 samples, 0.01%)</title><rect x="7.0102%" y="181" width="0.0140%" height="15" fill="rgb(233,201,37)" fg:x="502" fg:w="1"/><text x="7.2602%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (1 samples, 0.01%)</title><rect x="7.0102%" y="165" width="0.0140%" height="15" fill="rgb(221,78,26)" fg:x="502" fg:w="1"/><text x="7.2602%" y="175.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="7.0102%" y="149" width="0.0140%" height="15" fill="rgb(250,127,30)" fg:x="502" fg:w="1"/><text x="7.2602%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="8.6440%" y="229" width="0.0140%" height="15" fill="rgb(230,49,44)" fg:x="619" fg:w="1"/><text x="8.8940%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.03%)</title><rect x="8.6580%" y="229" width="0.0279%" height="15" fill="rgb(229,67,23)" fg:x="620" fg:w="2"/><text x="8.9080%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (1 samples, 0.01%)</title><rect x="8.6720%" y="213" width="0.0140%" height="15" fill="rgb(249,83,47)" fg:x="621" fg:w="1"/><text x="8.9220%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="8.6720%" y="197" width="0.0140%" height="15" fill="rgb(215,43,3)" fg:x="621" fg:w="1"/><text x="8.9220%" y="207.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (7 samples, 0.10%)</title><rect x="8.6859%" y="229" width="0.0978%" height="15" fill="rgb(238,154,13)" fg:x="622" fg:w="7"/><text x="8.9359%" y="239.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;core::result::Result&lt;((omelette::Class,omelette::Node),timely::order::product::Product&lt;i32,u64&gt;,isize),alloc::vec::Vec&lt;((omelette::Class,omelette::Node),timely::order::product::Product&lt;i32,u64&gt;,isize)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="8.7837%" y="229" width="0.0140%" height="15" fill="rgb(219,56,2)" fg:x="629" fg:w="1"/><text x="9.0337%" y="239.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::merge_batcher::container::ContainerMerger&lt;MC,CQ&gt; as differential_dataflow::trace::implementations::merge_batcher::Merger&gt;::merge (161 samples, 2.25%)</title><rect x="7.0242%" y="245" width="2.2483%" height="15" fill="rgb(233,0,4)" fg:x="503" fg:w="161"/><text x="7.2742%" y="255.50">o..</text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::container::vec::_&lt;impl differential_dataflow::trace::implementations::merge_batcher::container::ContainerQueue&lt;alloc::vec::Vec&lt;(D,T,R)&gt;&gt; for alloc::collections::vec_deque::VecDeque&lt;(D,T,R)&gt;&gt;::cmp_heads (34 samples, 0.47%)</title><rect x="8.7977%" y="229" width="0.4748%" height="15" fill="rgb(235,30,7)" fg:x="630" fg:w="34"/><text x="9.0477%" y="239.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (50 samples, 0.70%)</title><rect x="9.2724%" y="245" width="0.6982%" height="15" fill="rgb(250,79,13)" fg:x="664" fg:w="50"/><text x="9.5224%" y="255.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::container::vec::_&lt;impl differential_dataflow::trace::implementations::merge_batcher::container::ContainerQueue&lt;alloc::vec::Vec&lt;(D,T,R)&gt;&gt; for alloc::collections::vec_deque::VecDeque&lt;(D,T,R)&gt;&gt;::cmp_heads (4 samples, 0.06%)</title><rect x="9.9707%" y="245" width="0.0559%" height="15" fill="rgb(211,146,34)" fg:x="714" fg:w="4"/><text x="10.2207%" y="255.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::merge_batcher::MergeBatcher&lt;Input,C,M&gt; as differential_dataflow::trace::Batcher&gt;::push_container (413 samples, 5.77%)</title><rect x="4.2731%" y="293" width="5.7674%" height="15" fill="rgb(228,22,38)" fg:x="306" fg:w="413"/><text x="4.5231%" y="303.50">omelett..</text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::MergeBatcher&lt;Input,C,M&gt;::insert_chain (216 samples, 3.02%)</title><rect x="7.0242%" y="277" width="3.0163%" height="15" fill="rgb(235,168,5)" fg:x="503" fg:w="216"/><text x="7.2742%" y="287.50">ome..</text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::MergeBatcher&lt;Input,C,M&gt;::merge_by (216 samples, 3.02%)</title><rect x="7.0242%" y="261" width="3.0163%" height="15" fill="rgb(221,155,16)" fg:x="503" fg:w="216"/><text x="7.2742%" y="271.50">ome..</text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::container::vec::_&lt;impl differential_dataflow::trace::implementations::merge_batcher::container::MergerChunk for alloc::vec::Vec&lt;(D,T,R)&gt;&gt;::push_and_add (1 samples, 0.01%)</title><rect x="10.0265%" y="245" width="0.0140%" height="15" fill="rgb(215,215,53)" fg:x="718" fg:w="1"/><text x="10.2765%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_small (4 samples, 0.06%)</title><rect x="10.0405%" y="277" width="0.0559%" height="15" fill="rgb(223,4,10)" fg:x="719" fg:w="4"/><text x="10.2905%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (3 samples, 0.04%)</title><rect x="10.0545%" y="261" width="0.0419%" height="15" fill="rgb(234,103,6)" fg:x="720" fg:w="3"/><text x="10.3045%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`madvise (3 samples, 0.04%)</title><rect x="10.0545%" y="245" width="0.0419%" height="15" fill="rgb(227,97,0)" fg:x="720" fg:w="3"/><text x="10.3045%" y="255.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::chunker::VecChunker&lt;((K,V),T,R)&gt; as timely_container::ContainerBuilder&gt;::finish (1 samples, 0.01%)</title><rect x="10.0964%" y="277" width="0.0140%" height="15" fill="rgb(234,150,53)" fg:x="723" fg:w="1"/><text x="10.3464%" y="287.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_updates_from (1 samples, 0.01%)</title><rect x="10.0964%" y="261" width="0.0140%" height="15" fill="rgb(228,201,54)" fg:x="723" fg:w="1"/><text x="10.3464%" y="271.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (1 samples, 0.01%)</title><rect x="10.0964%" y="245" width="0.0140%" height="15" fill="rgb(222,22,37)" fg:x="723" fg:w="1"/><text x="10.3464%" y="255.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (1 samples, 0.01%)</title><rect x="10.0964%" y="229" width="0.0140%" height="15" fill="rgb(237,53,32)" fg:x="723" fg:w="1"/><text x="10.3464%" y="239.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::merge_batcher::container::ContainerMerger&lt;MC,CQ&gt; as differential_dataflow::trace::implementations::merge_batcher::Merger&gt;::extract (5 samples, 0.07%)</title><rect x="10.1103%" y="277" width="0.0698%" height="15" fill="rgb(233,25,53)" fg:x="724" fg:w="5"/><text x="10.3603%" y="287.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBuilder&lt;L,CI&gt; as differential_dataflow::trace::Builder&gt;::seal (1 samples, 0.01%)</title><rect x="10.1801%" y="277" width="0.0140%" height="15" fill="rgb(210,40,34)" fg:x="729" fg:w="1"/><text x="10.4301%" y="287.50"></text></g><g><title>omelette`&lt;alloc::vec::Vec&lt;((K,V),T,R)&gt; as differential_dataflow::trace::implementations::BuilderInput&lt;KBC,VBC&gt;&gt;::key_val_upd_counts (1 samples, 0.01%)</title><rect x="10.1801%" y="261" width="0.0140%" height="15" fill="rgb(241,220,44)" fg:x="729" fg:w="1"/><text x="10.4301%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (1 samples, 0.01%)</title><rect x="10.1941%" y="245" width="0.0140%" height="15" fill="rgb(235,28,35)" fg:x="730" fg:w="1"/><text x="10.4441%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="10.1941%" y="229" width="0.0140%" height="15" fill="rgb(210,56,17)" fg:x="730" fg:w="1"/><text x="10.4441%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_small (3 samples, 0.04%)</title><rect x="10.1941%" y="261" width="0.0419%" height="15" fill="rgb(224,130,29)" fg:x="730" fg:w="3"/><text x="10.4441%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (2 samples, 0.03%)</title><rect x="10.2081%" y="245" width="0.0279%" height="15" fill="rgb(235,212,8)" fg:x="731" fg:w="2"/><text x="10.4581%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.03%)</title><rect x="10.2081%" y="229" width="0.0279%" height="15" fill="rgb(223,33,50)" fg:x="731" fg:w="2"/><text x="10.4581%" y="239.50"></text></g><g><title>omelette`&lt;alloc::vec::Vec&lt;((K,V),T,R)&gt; as differential_dataflow::trace::implementations::BuilderInput&lt;KBC,VBC&gt;&gt;::key_val_upd_counts (2 samples, 0.03%)</title><rect x="10.2360%" y="261" width="0.0279%" height="15" fill="rgb(219,149,13)" fg:x="733" fg:w="2"/><text x="10.4860%" y="271.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBuilder&lt;L,CI&gt; as differential_dataflow::trace::Builder&gt;::push (4 samples, 0.06%)</title><rect x="10.2639%" y="261" width="0.0559%" height="15" fill="rgb(250,156,29)" fg:x="735" fg:w="4"/><text x="10.5139%" y="271.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBuilder&lt;L,CI&gt;::push_update (2 samples, 0.03%)</title><rect x="10.2919%" y="245" width="0.0279%" height="15" fill="rgb(216,193,19)" fg:x="737" fg:w="2"/><text x="10.5419%" y="255.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::rc_blanket_impls::RcBuilder&lt;B&gt; as differential_dataflow::trace::Builder&gt;::seal (10 samples, 0.14%)</title><rect x="10.1941%" y="277" width="0.1396%" height="15" fill="rgb(216,135,14)" fg:x="730" fg:w="10"/><text x="10.4441%" y="287.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="10.3198%" y="261" width="0.0140%" height="15" fill="rgb(241,47,5)" fg:x="739" fg:w="1"/><text x="10.5698%" y="271.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="10.3338%" y="277" width="0.0140%" height="15" fill="rgb(233,42,35)" fg:x="740" fg:w="1"/><text x="10.5838%" y="287.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="10.4036%" y="245" width="0.0140%" height="15" fill="rgb(231,13,6)" fg:x="745" fg:w="1"/><text x="10.6536%" y="255.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::merge_batcher::container::ContainerMerger&lt;MC,CQ&gt; as differential_dataflow::trace::implementations::merge_batcher::Merger&gt;::merge (7 samples, 0.10%)</title><rect x="10.3477%" y="261" width="0.0978%" height="15" fill="rgb(207,181,40)" fg:x="741" fg:w="7"/><text x="10.5977%" y="271.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::container::vec::_&lt;impl differential_dataflow::trace::implementations::merge_batcher::container::ContainerQueue&lt;alloc::vec::Vec&lt;(D,T,R)&gt;&gt; for alloc::collections::vec_deque::VecDeque&lt;(D,T,R)&gt;&gt;::cmp_heads (2 samples, 0.03%)</title><rect x="10.4175%" y="245" width="0.0279%" height="15" fill="rgb(254,173,49)" fg:x="746" fg:w="2"/><text x="10.6675%" y="255.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::merge_batcher::MergeBatcher&lt;Input,C,M&gt; as differential_dataflow::trace::Batcher&gt;::seal (30 samples, 0.42%)</title><rect x="10.0405%" y="293" width="0.4189%" height="15" fill="rgb(221,1,38)" fg:x="719" fg:w="30"/><text x="10.2905%" y="303.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::MergeBatcher&lt;Input,C,M&gt;::merge_by (8 samples, 0.11%)</title><rect x="10.3477%" y="277" width="0.1117%" height="15" fill="rgb(206,124,46)" fg:x="741" fg:w="8"/><text x="10.5977%" y="287.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="10.4455%" y="261" width="0.0140%" height="15" fill="rgb(249,21,11)" fg:x="748" fg:w="1"/><text x="10.6955%" y="271.50"></text></g><g><title>omelette`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.03%)</title><rect x="10.4734%" y="277" width="0.0279%" height="15" fill="rgb(222,201,40)" fg:x="750" fg:w="2"/><text x="10.7234%" y="287.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="10.4734%" y="261" width="0.0279%" height="15" fill="rgb(235,61,29)" fg:x="750" fg:w="2"/><text x="10.7234%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.03%)</title><rect x="10.4734%" y="245" width="0.0279%" height="15" fill="rgb(219,207,3)" fg:x="750" fg:w="2"/><text x="10.7234%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.03%)</title><rect x="10.4734%" y="229" width="0.0279%" height="15" fill="rgb(222,56,46)" fg:x="750" fg:w="2"/><text x="10.7234%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.03%)</title><rect x="10.4734%" y="213" width="0.0279%" height="15" fill="rgb(239,76,54)" fg:x="750" fg:w="2"/><text x="10.7234%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (2 samples, 0.03%)</title><rect x="10.4734%" y="197" width="0.0279%" height="15" fill="rgb(231,124,27)" fg:x="750" fg:w="2"/><text x="10.7234%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.03%)</title><rect x="10.4734%" y="181" width="0.0279%" height="15" fill="rgb(249,195,6)" fg:x="750" fg:w="2"/><text x="10.7234%" y="191.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBuilder&lt;L,CI&gt; as differential_dataflow::trace::Builder&gt;::push (4 samples, 0.06%)</title><rect x="10.4594%" y="293" width="0.0559%" height="15" fill="rgb(237,174,47)" fg:x="749" fg:w="4"/><text x="10.7094%" y="303.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBuilder&lt;L,CI&gt;::push_update (1 samples, 0.01%)</title><rect x="10.5013%" y="277" width="0.0140%" height="15" fill="rgb(206,201,31)" fg:x="752" fg:w="1"/><text x="10.7513%" y="287.50"></text></g><g><title>omelette`&lt;alloc::vec::Vec&lt;T&gt; as timely_container::SizableContainer&gt;::ensure_capacity (1 samples, 0.01%)</title><rect x="10.5153%" y="277" width="0.0140%" height="15" fill="rgb(231,57,52)" fg:x="753" fg:w="1"/><text x="10.7653%" y="287.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyCursor&lt;L&gt; as differential_dataflow::trace::cursor::Cursor&gt;::map_times (2 samples, 0.03%)</title><rect x="10.5153%" y="293" width="0.0279%" height="15" fill="rgb(248,177,22)" fg:x="753" fg:w="2"/><text x="10.7653%" y="303.50"></text></g><g><title>omelette`&lt;timely::dataflow::operators::core::enterleave::IngressNub&lt;TOuter,TInner,TContainer&gt; as timely_communication::Push&lt;timely::dataflow::channels::Message&lt;TOuter,TContainer&gt;&gt;&gt;::push (1 samples, 0.01%)</title><rect x="10.5293%" y="277" width="0.0140%" height="15" fill="rgb(215,211,37)" fg:x="754" fg:w="1"/><text x="10.7793%" y="287.50"></text></g><g><title>omelette`&lt;timely::dataflow::channels::pushers::counter::Counter&lt;T,C,P&gt; as timely_communication::Push&lt;timely::dataflow::channels::Message&lt;T,C&gt;&gt;&gt;::push (1 samples, 0.01%)</title><rect x="10.5293%" y="261" width="0.0140%" height="15" fill="rgb(241,128,51)" fg:x="754" fg:w="1"/><text x="10.7793%" y="271.50"></text></g><g><title>omelette`&lt;timely::dataflow::channels::pact::LogPusher&lt;T,C,P&gt; as timely_communication::Push&lt;timely::dataflow::channels::Message&lt;T,C&gt;&gt;&gt;::push (1 samples, 0.01%)</title><rect x="10.5293%" y="245" width="0.0140%" height="15" fill="rgb(227,165,31)" fg:x="754" fg:w="1"/><text x="10.7793%" y="255.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="10.5432%" y="293" width="0.0140%" height="15" fill="rgb(228,167,24)" fg:x="755" fg:w="1"/><text x="10.7932%" y="303.50"></text></g><g><title>omelette`&lt;timely::dataflow::operators::capability::InputCapability&lt;T&gt; as timely::dataflow::operators::capability::CapabilityTrait&lt;T&gt;&gt;::valid_for_output (2 samples, 0.03%)</title><rect x="10.5572%" y="293" width="0.0279%" height="15" fill="rgb(228,143,12)" fg:x="756" fg:w="2"/><text x="10.8072%" y="303.50"></text></g><g><title>omelette`&lt;timely_communication::allocator::counters::Puller&lt;T,P&gt; as timely_communication::Pull&lt;T&gt;&gt;::pull (1 samples, 0.01%)</title><rect x="10.5851%" y="293" width="0.0140%" height="15" fill="rgb(249,149,8)" fg:x="758" fg:w="1"/><text x="10.8351%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.01%)</title><rect x="10.5851%" y="277" width="0.0140%" height="15" fill="rgb(243,35,44)" fg:x="758" fg:w="1"/><text x="10.8351%" y="287.50"></text></g><g><title>omelette`__rdl_alloc (1 samples, 0.01%)</title><rect x="10.6549%" y="261" width="0.0140%" height="15" fill="rgb(246,89,9)" fg:x="763" fg:w="1"/><text x="10.9049%" y="271.50"></text></g><g><title>omelette`&lt;timely_container::CapacityContainerBuilder&lt;C&gt; as timely_container::PushInto&lt;T&gt;&gt;::push_into (8 samples, 0.11%)</title><rect x="10.5991%" y="293" width="0.1117%" height="15" fill="rgb(233,213,13)" fg:x="759" fg:w="8"/><text x="10.8491%" y="303.50"></text></g><g><title>omelette`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (4 samples, 0.06%)</title><rect x="10.6549%" y="277" width="0.0559%" height="15" fill="rgb(233,141,41)" fg:x="763" fg:w="4"/><text x="10.9049%" y="287.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="10.6689%" y="261" width="0.0419%" height="15" fill="rgb(239,167,4)" fg:x="764" fg:w="3"/><text x="10.9189%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.04%)</title><rect x="10.6689%" y="245" width="0.0419%" height="15" fill="rgb(209,217,16)" fg:x="764" fg:w="3"/><text x="10.9189%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.03%)</title><rect x="10.6829%" y="229" width="0.0279%" height="15" fill="rgb(219,88,35)" fg:x="765" fg:w="2"/><text x="10.9329%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (2 samples, 0.03%)</title><rect x="10.6829%" y="213" width="0.0279%" height="15" fill="rgb(220,193,23)" fg:x="765" fg:w="2"/><text x="10.9329%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (2 samples, 0.03%)</title><rect x="10.6829%" y="197" width="0.0279%" height="15" fill="rgb(230,90,52)" fg:x="765" fg:w="2"/><text x="10.9329%" y="207.50"></text></g><g><title>omelette`DYLD-STUB$$pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="10.7108%" y="293" width="0.0140%" height="15" fill="rgb(252,106,19)" fg:x="767" fg:w="1"/><text x="10.9608%" y="303.50"></text></g><g><title>omelette`__rdl_alloc (1 samples, 0.01%)</title><rect x="10.7248%" y="293" width="0.0140%" height="15" fill="rgb(206,74,20)" fg:x="768" fg:w="1"/><text x="10.9748%" y="303.50"></text></g><g><title>omelette`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="10.7387%" y="293" width="0.0140%" height="15" fill="rgb(230,138,44)" fg:x="769" fg:w="1"/><text x="10.9887%" y="303.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="10.7387%" y="277" width="0.0140%" height="15" fill="rgb(235,182,43)" fg:x="769" fg:w="1"/><text x="10.9887%" y="287.50"></text></g><g><title>omelette`core::ptr::drop_in_place$LT$core..iter..adapters..flatten..FlatMap$LT$alloc..vec..drain..Drain$LT$$LP$$LP$omelette..Class$C$omelette..NewTerm$RP$$C$timely..order..product..Product$LT$i32$C$u64$GT$$C$isize$RP$$GT$$C$core..iter..sources..once..Once$LT$$LP$alloc..vec..Vec$LT$$LP$omelette..term..Term$LT$omelette..Class$GT$$C$omelette..Class$RP$$GT$$C$timely..order..product..Product$LT$i32$C$u64$GT$$C$isize$RP$$GT$$C$$RF$mut$u20$$LT$timely..dataflow..stream..StreamCore$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$timely..order..product..Product$LT$i32$C$u64$GT$$GT$$C$alloc..vec..Vec$LT$$LP$$LP$omelette..Class$C$omelette..NewTerm$RP$$C$timely..order..product..Product$LT$i32$C$u64$GT$$C$isize$RP$$GT$$GT$$u20$as$u20$timely..dataflow..operators..map..Map$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication.% (1 samples, 0.01%)</title><rect x="10.7527%" y="293" width="0.0140%" height="15" fill="rgb(242,16,51)" fg:x="770" fg:w="1"/><text x="11.0027%" y="303.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;core::option::Option&lt;differential_dataflow::operators::arrange::agent::TraceAgent&lt;differential_dataflow::trace::implementations::spine_fueled::Spine&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Class,omelette::Node),timely::order::product::Product&lt;i32,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="10.7667%" y="293" width="0.0140%" height="15" fill="rgb(248,9,4)" fg:x="771" fg:w="1"/><text x="11.0167%" y="303.50"></text></g><g><title>omelette`&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="10.7667%" y="277" width="0.0140%" height="15" fill="rgb(210,31,22)" fg:x="771" fg:w="1"/><text x="11.0167%" y="287.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::spine_fueled::Spine&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Class,omelette::Node),timely::order::product::Product&lt;i32,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="10.7667%" y="261" width="0.0140%" height="15" fill="rgb(239,54,39)" fg:x="771" fg:w="1"/><text x="11.0167%" y="271.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::spine_fueled::MergeState&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Class,omelette::Node),timely::order::product::Product&lt;i32,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="10.7667%" y="245" width="0.0140%" height="15" fill="rgb(230,99,41)" fg:x="771" fg:w="1"/><text x="11.0167%" y="255.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Class,omelette::Node),timely::order::product::Product&lt;i32,u64&gt;,isize)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="10.7667%" y="229" width="0.0140%" height="15" fill="rgb(253,106,12)" fg:x="771" fg:w="1"/><text x="11.0167%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="10.7667%" y="213" width="0.0140%" height="15" fill="rgb(213,46,41)" fg:x="771" fg:w="1"/><text x="11.0167%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="10.7667%" y="197" width="0.0140%" height="15" fill="rgb(215,133,35)" fg:x="771" fg:w="1"/><text x="11.0167%" y="207.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;timely::dataflow::operators::capability::InputCapability&lt;timely::order::product::Product&lt;i32,u64&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="10.7806%" y="293" width="0.0140%" height="15" fill="rgb(213,28,5)" fg:x="772" fg:w="1"/><text x="11.0306%" y="303.50"></text></g><g><title>omelette`&lt;timely::dataflow::channels::pullers::counter::ConsumedGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="10.7806%" y="277" width="0.0140%" height="15" fill="rgb(215,77,49)" fg:x="772" fg:w="1"/><text x="11.0306%" y="287.50"></text></g><g><title>omelette`timely::progress::change_batch::ChangeBatch&lt;T,_&gt;::compact (1 samples, 0.01%)</title><rect x="10.7806%" y="261" width="0.0140%" height="15" fill="rgb(248,100,22)" fg:x="772" fg:w="1"/><text x="11.0306%" y="271.50"></text></g><g><title>omelette`core::slice::sort::stable::driftsort_main (1 samples, 0.01%)</title><rect x="10.7806%" y="245" width="0.0140%" height="15" fill="rgb(208,67,9)" fg:x="772" fg:w="1"/><text x="11.0306%" y="255.50"></text></g><g><title>omelette`core::slice::sort::stable::drift::sort (1 samples, 0.01%)</title><rect x="10.7806%" y="229" width="0.0140%" height="15" fill="rgb(219,133,21)" fg:x="772" fg:w="1"/><text x="11.0306%" y="239.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (5 samples, 0.07%)</title><rect x="10.7946%" y="293" width="0.0698%" height="15" fill="rgb(246,46,29)" fg:x="773" fg:w="5"/><text x="11.0446%" y="303.50"></text></g><g><title>omelette`differential_dataflow::operators::HistoryReplay&lt;C&gt;::step_while_time_is (2 samples, 0.03%)</title><rect x="10.8644%" y="293" width="0.0279%" height="15" fill="rgb(246,185,52)" fg:x="778" fg:w="2"/><text x="11.1144%" y="303.50"></text></g><g><title>omelette`differential_dataflow::operators::ValueHistory&lt;C&gt;::replay_key (2 samples, 0.03%)</title><rect x="10.8923%" y="293" width="0.0279%" height="15" fill="rgb(252,136,11)" fg:x="780" fg:w="2"/><text x="11.1423%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="10.9622%" y="277" width="0.0140%" height="15" fill="rgb(219,138,53)" fg:x="785" fg:w="1"/><text x="11.2122%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.04%)</title><rect x="10.9761%" y="277" width="0.0419%" height="15" fill="rgb(211,51,23)" fg:x="786" fg:w="3"/><text x="11.2261%" y="287.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (1 samples, 0.01%)</title><rect x="11.0180%" y="277" width="0.0140%" height="15" fill="rgb(247,221,28)" fg:x="789" fg:w="1"/><text x="11.2680%" y="287.50"></text></g><g><title>omelette`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="11.0320%" y="277" width="0.0140%" height="15" fill="rgb(251,222,45)" fg:x="790" fg:w="1"/><text x="11.2820%" y="287.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (1 samples, 0.01%)</title><rect x="11.0459%" y="277" width="0.0140%" height="15" fill="rgb(217,162,53)" fg:x="791" fg:w="1"/><text x="11.2959%" y="287.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (1 samples, 0.01%)</title><rect x="11.0599%" y="277" width="0.0140%" height="15" fill="rgb(229,93,14)" fg:x="792" fg:w="1"/><text x="11.3099%" y="287.50"></text></g><g><title>omelette`core::slice::sort::stable::driftsort_main (1 samples, 0.01%)</title><rect x="11.0599%" y="261" width="0.0140%" height="15" fill="rgb(209,67,49)" fg:x="792" fg:w="1"/><text x="11.3099%" y="271.50"></text></g><g><title>omelette`core::slice::sort::stable::drift::sort (1 samples, 0.01%)</title><rect x="11.0599%" y="245" width="0.0140%" height="15" fill="rgb(213,87,29)" fg:x="792" fg:w="1"/><text x="11.3099%" y="255.50"></text></g><g><title>omelette`&lt;omelette::Node as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="11.0599%" y="229" width="0.0140%" height="15" fill="rgb(205,151,52)" fg:x="792" fg:w="1"/><text x="11.3099%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (8 samples, 0.11%)</title><rect x="11.0878%" y="261" width="0.1117%" height="15" fill="rgb(253,215,39)" fg:x="794" fg:w="8"/><text x="11.3378%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (4 samples, 0.06%)</title><rect x="11.1437%" y="245" width="0.0559%" height="15" fill="rgb(221,220,41)" fg:x="798" fg:w="4"/><text x="11.3937%" y="255.50"></text></g><g><title>omelette`&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.06%)</title><rect x="11.1996%" y="261" width="0.0559%" height="15" fill="rgb(218,133,21)" fg:x="802" fg:w="4"/><text x="11.4496%" y="271.50"></text></g><g><title>omelette`&lt;omelette::NewTerm as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="11.2554%" y="261" width="0.0140%" height="15" fill="rgb(221,193,43)" fg:x="806" fg:w="1"/><text x="11.5054%" y="271.50"></text></g><g><title>omelette`&lt;omelette::NewTerm as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="11.2694%" y="245" width="0.0140%" height="15" fill="rgb(240,128,52)" fg:x="807" fg:w="1"/><text x="11.5194%" y="255.50"></text></g><g><title>omelette`&lt;omelette::NewTerm as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="11.2833%" y="229" width="0.0140%" height="15" fill="rgb(253,114,12)" fg:x="808" fg:w="1"/><text x="11.5333%" y="239.50"></text></g><g><title>omelette`&lt;omelette::NewTerm as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="11.2833%" y="213" width="0.0140%" height="15" fill="rgb(215,223,47)" fg:x="808" fg:w="1"/><text x="11.5333%" y="223.50"></text></g><g><title>omelette`&lt;omelette::NewTerm as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="11.2833%" y="197" width="0.0140%" height="15" fill="rgb(248,225,23)" fg:x="808" fg:w="1"/><text x="11.5333%" y="207.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (2 samples, 0.03%)</title><rect x="11.2833%" y="245" width="0.0279%" height="15" fill="rgb(250,108,0)" fg:x="808" fg:w="2"/><text x="11.5333%" y="255.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::sort4_stable (1 samples, 0.01%)</title><rect x="11.2973%" y="229" width="0.0140%" height="15" fill="rgb(228,208,7)" fg:x="809" fg:w="1"/><text x="11.5473%" y="239.50"></text></g><g><title>omelette`&lt;omelette::NewTerm as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="11.3113%" y="229" width="0.0140%" height="15" fill="rgb(244,45,10)" fg:x="810" fg:w="1"/><text x="11.5613%" y="239.50"></text></g><g><title>omelette`&lt;omelette::NewTerm as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="11.3113%" y="213" width="0.0140%" height="15" fill="rgb(207,125,25)" fg:x="810" fg:w="1"/><text x="11.5613%" y="223.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (2 samples, 0.03%)</title><rect x="11.3252%" y="229" width="0.0279%" height="15" fill="rgb(210,195,18)" fg:x="811" fg:w="2"/><text x="11.5752%" y="239.50"></text></g><g><title>omelette`&lt;omelette::NewTerm as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="11.3392%" y="213" width="0.0140%" height="15" fill="rgb(249,80,12)" fg:x="812" fg:w="1"/><text x="11.5892%" y="223.50"></text></g><g><title>omelette`&lt;omelette::NewTerm as core::cmp::Ord&gt;::cmp (3 samples, 0.04%)</title><rect x="11.3811%" y="213" width="0.0419%" height="15" fill="rgb(221,65,9)" fg:x="815" fg:w="3"/><text x="11.6311%" y="223.50"></text></g><g><title>omelette`&lt;omelette::NewTerm as core::cmp::Ord&gt;::cmp (3 samples, 0.04%)</title><rect x="11.3811%" y="197" width="0.0419%" height="15" fill="rgb(235,49,36)" fg:x="815" fg:w="3"/><text x="11.6311%" y="207.50"></text></g><g><title>omelette`&lt;omelette::NewTerm as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="11.4090%" y="181" width="0.0140%" height="15" fill="rgb(225,32,20)" fg:x="817" fg:w="1"/><text x="11.6590%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (3 samples, 0.04%)</title><rect x="11.4230%" y="213" width="0.0419%" height="15" fill="rgb(215,141,46)" fg:x="818" fg:w="3"/><text x="11.6730%" y="223.50"></text></g><g><title>omelette`&lt;omelette::NewTerm as core::cmp::Ord&gt;::cmp (2 samples, 0.03%)</title><rect x="11.4370%" y="197" width="0.0279%" height="15" fill="rgb(250,160,47)" fg:x="819" fg:w="2"/><text x="11.6870%" y="207.50"></text></g><g><title>omelette`&lt;omelette::NewTerm as core::cmp::Ord&gt;::cmp (2 samples, 0.03%)</title><rect x="11.4370%" y="181" width="0.0279%" height="15" fill="rgb(216,222,40)" fg:x="819" fg:w="2"/><text x="11.6870%" y="191.50"></text></g><g><title>omelette`&lt;omelette::NewTerm as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="11.4509%" y="165" width="0.0140%" height="15" fill="rgb(234,217,39)" fg:x="820" fg:w="1"/><text x="11.7009%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (3 samples, 0.04%)</title><rect x="11.4788%" y="197" width="0.0419%" height="15" fill="rgb(207,178,40)" fg:x="822" fg:w="3"/><text x="11.7288%" y="207.50"></text></g><g><title>omelette`&lt;omelette::NewTerm as core::cmp::Ord&gt;::cmp (2 samples, 0.03%)</title><rect x="11.4928%" y="181" width="0.0279%" height="15" fill="rgb(221,136,13)" fg:x="823" fg:w="2"/><text x="11.7428%" y="191.50"></text></g><g><title>omelette`&lt;omelette::NewTerm as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="11.5068%" y="165" width="0.0140%" height="15" fill="rgb(249,199,10)" fg:x="824" fg:w="1"/><text x="11.7568%" y="175.50"></text></g><g><title>omelette`&lt;omelette::NewTerm as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="11.5207%" y="181" width="0.0140%" height="15" fill="rgb(249,222,13)" fg:x="825" fg:w="1"/><text x="11.7707%" y="191.50"></text></g><g><title>omelette`differential_dataflow::operators::join::Deferred&lt;T,C1,C2&gt;::work (46 samples, 0.64%)</title><rect x="10.9203%" y="293" width="0.6424%" height="15" fill="rgb(244,185,38)" fg:x="782" fg:w="46"/><text x="11.1703%" y="303.50"></text></g><g><title>omelette`differential_dataflow::operators::arrange::arrangement::Arranged&lt;G,T1&gt;::join_core_internal_unsafe::_{{closure}} (35 samples, 0.49%)</title><rect x="11.0739%" y="277" width="0.4888%" height="15" fill="rgb(236,202,9)" fg:x="793" fg:w="35"/><text x="11.3239%" y="287.50"></text></g><g><title>omelette`differential_dataflow::consolidation::ConsolidatingContainerBuilder&lt;alloc::vec::Vec&lt;(D,T,R)&gt;&gt;::consolidate_and_flush_through (21 samples, 0.29%)</title><rect x="11.2694%" y="261" width="0.2933%" height="15" fill="rgb(250,229,37)" fg:x="807" fg:w="21"/><text x="11.5194%" y="271.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (18 samples, 0.25%)</title><rect x="11.3113%" y="245" width="0.2514%" height="15" fill="rgb(206,174,23)" fg:x="810" fg:w="18"/><text x="11.5613%" y="255.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (15 samples, 0.21%)</title><rect x="11.3532%" y="229" width="0.2095%" height="15" fill="rgb(211,33,43)" fg:x="813" fg:w="15"/><text x="11.6032%" y="239.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (7 samples, 0.10%)</title><rect x="11.4649%" y="213" width="0.0978%" height="15" fill="rgb(245,58,50)" fg:x="821" fg:w="7"/><text x="11.7149%" y="223.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (3 samples, 0.04%)</title><rect x="11.5207%" y="197" width="0.0419%" height="15" fill="rgb(244,68,36)" fg:x="825" fg:w="3"/><text x="11.7707%" y="207.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (2 samples, 0.03%)</title><rect x="11.5347%" y="181" width="0.0279%" height="15" fill="rgb(232,229,15)" fg:x="826" fg:w="2"/><text x="11.7847%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::sort4_stable (1 samples, 0.01%)</title><rect x="11.5487%" y="165" width="0.0140%" height="15" fill="rgb(254,30,23)" fg:x="827" fg:w="1"/><text x="11.7987%" y="175.50"></text></g><g><title>omelette`&lt;omelette::NewTerm as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="11.5487%" y="149" width="0.0140%" height="15" fill="rgb(235,160,14)" fg:x="827" fg:w="1"/><text x="11.7987%" y="159.50"></text></g><g><title>omelette`differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt;::minimize_keys (1 samples, 0.01%)</title><rect x="11.5626%" y="293" width="0.0140%" height="15" fill="rgb(212,155,44)" fg:x="828" fg:w="1"/><text x="11.8126%" y="303.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::MergeBatcher&lt;Input,C,M&gt;::insert_chain (1 samples, 0.01%)</title><rect x="11.5766%" y="293" width="0.0140%" height="15" fill="rgb(226,2,50)" fg:x="829" fg:w="1"/><text x="11.8266%" y="303.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBuilder&lt;L,CI&gt;::push_update (2 samples, 0.03%)</title><rect x="11.5906%" y="293" width="0.0279%" height="15" fill="rgb(234,177,6)" fg:x="830" fg:w="2"/><text x="11.8406%" y="303.50"></text></g><g><title>omelette`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.03%)</title><rect x="11.6185%" y="293" width="0.0279%" height="15" fill="rgb(217,24,9)" fg:x="832" fg:w="2"/><text x="11.8685%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.01%)</title><rect x="11.8559%" y="277" width="0.0140%" height="15" fill="rgb(220,13,46)" fg:x="849" fg:w="1"/><text x="12.1059%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="11.8699%" y="277" width="0.0140%" height="15" fill="rgb(239,221,27)" fg:x="850" fg:w="1"/><text x="12.1199%" y="287.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.03%)</title><rect x="11.8838%" y="277" width="0.0279%" height="15" fill="rgb(222,198,25)" fg:x="851" fg:w="2"/><text x="12.1338%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="11.9257%" y="261" width="0.0140%" height="15" fill="rgb(211,99,13)" fg:x="854" fg:w="1"/><text x="12.1757%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="11.9397%" y="261" width="0.0140%" height="15" fill="rgb(232,111,31)" fg:x="855" fg:w="1"/><text x="12.1897%" y="271.50"></text></g><g><title>omelette`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.08%)</title><rect x="11.9117%" y="277" width="0.0838%" height="15" fill="rgb(245,82,37)" fg:x="853" fg:w="6"/><text x="12.1617%" y="287.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="11.9536%" y="261" width="0.0419%" height="15" fill="rgb(227,149,46)" fg:x="856" fg:w="3"/><text x="12.2036%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (3 samples, 0.04%)</title><rect x="11.9536%" y="245" width="0.0419%" height="15" fill="rgb(218,36,50)" fg:x="856" fg:w="3"/><text x="12.2036%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.01%)</title><rect x="11.9816%" y="229" width="0.0140%" height="15" fill="rgb(226,80,48)" fg:x="858" fg:w="1"/><text x="12.2316%" y="239.50"></text></g><g><title>omelette`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.07%)</title><rect x="12.1072%" y="261" width="0.0698%" height="15" fill="rgb(238,224,15)" fg:x="867" fg:w="5"/><text x="12.3572%" y="271.50"></text></g><g><title>omelette`core::hash::BuildHasher::hash_one (22 samples, 0.31%)</title><rect x="12.1771%" y="261" width="0.3072%" height="15" fill="rgb(241,136,10)" fg:x="872" fg:w="22"/><text x="12.4271%" y="271.50"></text></g><g><title>omelette`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.11%)</title><rect x="12.5681%" y="245" width="0.1117%" height="15" fill="rgb(208,32,45)" fg:x="900" fg:w="8"/><text x="12.8181%" y="255.50"></text></g><g><title>omelette`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (50 samples, 0.70%)</title><rect x="11.9955%" y="277" width="0.6982%" height="15" fill="rgb(207,135,9)" fg:x="859" fg:w="50"/><text x="12.2455%" y="287.50"></text></g><g><title>omelette`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15 samples, 0.21%)</title><rect x="12.4843%" y="261" width="0.2095%" height="15" fill="rgb(206,86,44)" fg:x="894" fg:w="15"/><text x="12.7343%" y="271.50"></text></g><g><title>omelette`core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="12.6798%" y="245" width="0.0140%" height="15" fill="rgb(245,177,15)" fg:x="908" fg:w="1"/><text x="12.9298%" y="255.50"></text></g><g><title>omelette`omelette::collect_created_terms (6 samples, 0.08%)</title><rect x="12.6938%" y="277" width="0.0838%" height="15" fill="rgb(206,64,50)" fg:x="909" fg:w="6"/><text x="12.9438%" y="287.50"></text></g><g><title>omelette`omelette::collect_created_terms::_{{closure}} (1 samples, 0.01%)</title><rect x="12.7775%" y="277" width="0.0140%" height="15" fill="rgb(234,36,40)" fg:x="915" fg:w="1"/><text x="13.0275%" y="287.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.03%)</title><rect x="12.9451%" y="245" width="0.0279%" height="15" fill="rgb(213,64,8)" fg:x="927" fg:w="2"/><text x="13.1951%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="12.9870%" y="229" width="0.0279%" height="15" fill="rgb(210,75,36)" fg:x="930" fg:w="2"/><text x="13.2370%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.04%)</title><rect x="13.0149%" y="229" width="0.0419%" height="15" fill="rgb(229,88,21)" fg:x="932" fg:w="3"/><text x="13.2649%" y="239.50"></text></g><g><title>omelette`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (9 samples, 0.13%)</title><rect x="12.9730%" y="245" width="0.1257%" height="15" fill="rgb(252,204,47)" fg:x="929" fg:w="9"/><text x="13.2230%" y="255.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="13.0568%" y="229" width="0.0419%" height="15" fill="rgb(208,77,27)" fg:x="935" fg:w="3"/><text x="13.3068%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (3 samples, 0.04%)</title><rect x="13.0568%" y="213" width="0.0419%" height="15" fill="rgb(221,76,26)" fg:x="935" fg:w="3"/><text x="13.3068%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (2 samples, 0.03%)</title><rect x="13.0708%" y="197" width="0.0279%" height="15" fill="rgb(225,139,18)" fg:x="936" fg:w="2"/><text x="13.3208%" y="207.50"></text></g><g><title>omelette`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.07%)</title><rect x="13.1127%" y="229" width="0.0698%" height="15" fill="rgb(230,137,11)" fg:x="939" fg:w="5"/><text x="13.3627%" y="239.50"></text></g><g><title>omelette`core::hash::BuildHasher::hash_one (2 samples, 0.03%)</title><rect x="13.1825%" y="229" width="0.0279%" height="15" fill="rgb(212,28,1)" fg:x="944" fg:w="2"/><text x="13.4325%" y="239.50"></text></g><g><title>omelette`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (9 samples, 0.13%)</title><rect x="13.0987%" y="245" width="0.1257%" height="15" fill="rgb(248,164,17)" fg:x="938" fg:w="9"/><text x="13.3487%" y="255.50"></text></g><g><title>omelette`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="13.2104%" y="229" width="0.0140%" height="15" fill="rgb(222,171,42)" fg:x="946" fg:w="1"/><text x="13.4604%" y="239.50"></text></g><g><title>omelette`omelette::collect_created_terms (114 samples, 1.59%)</title><rect x="11.6464%" y="293" width="1.5920%" height="15" fill="rgb(243,84,45)" fg:x="834" fg:w="114"/><text x="11.8964%" y="303.50"></text></g><g><title>omelette`omelette::term::map_term (32 samples, 0.45%)</title><rect x="12.7915%" y="277" width="0.4469%" height="15" fill="rgb(252,49,23)" fg:x="916" fg:w="32"/><text x="13.0415%" y="287.50"></text></g><g><title>omelette`omelette::collect_created_terms (22 samples, 0.31%)</title><rect x="12.9312%" y="261" width="0.3072%" height="15" fill="rgb(215,19,7)" fg:x="926" fg:w="22"/><text x="13.1812%" y="271.50"></text></g><g><title>omelette`omelette::collect_created_terms (1 samples, 0.01%)</title><rect x="13.2244%" y="245" width="0.0140%" height="15" fill="rgb(238,81,41)" fg:x="947" fg:w="1"/><text x="13.4744%" y="255.50"></text></g><g><title>omelette`omelette::term::map_term (18 samples, 0.25%)</title><rect x="13.2384%" y="293" width="0.2514%" height="15" fill="rgb(210,199,37)" fg:x="948" fg:w="18"/><text x="13.4884%" y="303.50"></text></g><g><title>omelette`timely::dataflow::channels::pullers::counter::Counter&lt;T,C,P&gt;::next_guarded (1 samples, 0.01%)</title><rect x="13.4897%" y="293" width="0.0140%" height="15" fill="rgb(244,192,49)" fg:x="966" fg:w="1"/><text x="13.7397%" y="303.50"></text></g><g><title>omelette`timely::dataflow::channels::pushers::buffer::Buffer&lt;T,CB,P&gt;::extract_and_send (3 samples, 0.04%)</title><rect x="13.5037%" y="293" width="0.0419%" height="15" fill="rgb(226,211,11)" fg:x="967" fg:w="3"/><text x="13.7537%" y="303.50"></text></g><g><title>omelette`&lt;[T] as alloc::slice::SpecCloneIntoVec&lt;T,A&gt;&gt;::clone_into (1 samples, 0.01%)</title><rect x="13.5316%" y="277" width="0.0140%" height="15" fill="rgb(236,162,54)" fg:x="969" fg:w="1"/><text x="13.7816%" y="287.50"></text></g><g><title>omelette`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="13.5316%" y="261" width="0.0140%" height="15" fill="rgb(220,229,9)" fg:x="969" fg:w="1"/><text x="13.7816%" y="271.50"></text></g><g><title>omelette`&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.07%)</title><rect x="13.5456%" y="245" width="0.0698%" height="15" fill="rgb(250,87,22)" fg:x="970" fg:w="5"/><text x="13.7956%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="13.6154%" y="229" width="0.0140%" height="15" fill="rgb(239,43,17)" fg:x="975" fg:w="1"/><text x="13.8654%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_detach_region (1 samples, 0.01%)</title><rect x="13.6433%" y="181" width="0.0140%" height="15" fill="rgb(231,177,25)" fg:x="977" fg:w="1"/><text x="13.8933%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.01%)</title><rect x="13.6433%" y="165" width="0.0140%" height="15" fill="rgb(219,179,1)" fg:x="977" fg:w="1"/><text x="13.8933%" y="175.50"></text></g><g><title>omelette`timely::dataflow::channels::pushers::buffer::Buffer&lt;T,timely_container::CapacityContainerBuilder&lt;C&gt;,P&gt;::give_container (10 samples, 0.14%)</title><rect x="13.5456%" y="293" width="0.1396%" height="15" fill="rgb(238,219,53)" fg:x="970" fg:w="10"/><text x="13.7956%" y="303.50"></text></g><g><title>omelette`&lt;timely::dataflow::channels::pushers::counter::Counter&lt;T,C,P&gt; as timely_communication::Push&lt;timely::dataflow::channels::Message&lt;T,C&gt;&gt;&gt;::push (10 samples, 0.14%)</title><rect x="13.5456%" y="277" width="0.1396%" height="15" fill="rgb(232,167,36)" fg:x="970" fg:w="10"/><text x="13.7956%" y="287.50"></text></g><g><title>omelette`&lt;[T] as alloc::slice::SpecCloneIntoVec&lt;T,A&gt;&gt;::clone_into (10 samples, 0.14%)</title><rect x="13.5456%" y="261" width="0.1396%" height="15" fill="rgb(244,19,51)" fg:x="970" fg:w="10"/><text x="13.7956%" y="271.50"></text></g><g><title>omelette`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (5 samples, 0.07%)</title><rect x="13.6154%" y="245" width="0.0698%" height="15" fill="rgb(224,6,22)" fg:x="975" fg:w="5"/><text x="13.8654%" y="255.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (4 samples, 0.06%)</title><rect x="13.6294%" y="229" width="0.0559%" height="15" fill="rgb(224,145,5)" fg:x="976" fg:w="4"/><text x="13.8794%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.06%)</title><rect x="13.6294%" y="213" width="0.0559%" height="15" fill="rgb(234,130,49)" fg:x="976" fg:w="4"/><text x="13.8794%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (4 samples, 0.06%)</title><rect x="13.6294%" y="197" width="0.0559%" height="15" fill="rgb(254,6,2)" fg:x="976" fg:w="4"/><text x="13.8794%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (2 samples, 0.03%)</title><rect x="13.6573%" y="181" width="0.0279%" height="15" fill="rgb(208,96,46)" fg:x="978" fg:w="2"/><text x="13.9073%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (2 samples, 0.03%)</title><rect x="13.6573%" y="165" width="0.0279%" height="15" fill="rgb(239,3,39)" fg:x="978" fg:w="2"/><text x="13.9073%" y="175.50"></text></g><g><title>omelette`&lt;timely::dataflow::operators::generic::builder_raw::OperatorCore&lt;T,L&gt; as timely::scheduling::Schedule&gt;::schedule (880 samples, 12.29%)</title><rect x="1.4104%" y="309" width="12.2888%" height="15" fill="rgb(233,210,1)" fg:x="101" fg:w="880"/><text x="1.6604%" y="319.50">omelette`&lt;timely::..</text></g><g><title>omelette`timely::progress::frontier::Antichain&lt;T&gt;::insert (1 samples, 0.01%)</title><rect x="13.6852%" y="293" width="0.0140%" height="15" fill="rgb(244,137,37)" fg:x="980" fg:w="1"/><text x="13.9352%" y="303.50"></text></g><g><title>omelette`&lt;alloc::vec::Vec&lt;T&gt; as timely_container::SizableContainer&gt;::ensure_capacity (16 samples, 0.22%)</title><rect x="13.7132%" y="293" width="0.2234%" height="15" fill="rgb(240,136,2)" fg:x="982" fg:w="16"/><text x="13.9632%" y="303.50"></text></g><g><title>omelette`&lt;differential_dataflow::operators::reduce::history_replay::HistoryReplayer&lt;C1,C2,C3,V&gt; as differential_dataflow::operators::reduce::PerKeyCompute&lt;C1,C2,C3,V&gt;&gt;::compute (1 samples, 0.01%)</title><rect x="13.9366%" y="293" width="0.0140%" height="15" fill="rgb(239,18,37)" fg:x="998" fg:w="1"/><text x="14.1866%" y="303.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (22 samples, 0.31%)</title><rect x="13.9506%" y="293" width="0.3072%" height="15" fill="rgb(218,185,22)" fg:x="999" fg:w="22"/><text x="14.2006%" y="303.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValCursor&lt;L&gt; as differential_dataflow::trace::cursor::Cursor&gt;::map_times (1 samples, 0.01%)</title><rect x="14.2578%" y="293" width="0.0140%" height="15" fill="rgb(225,218,4)" fg:x="1021" fg:w="1"/><text x="14.5078%" y="303.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (2 samples, 0.03%)</title><rect x="14.2717%" y="293" width="0.0279%" height="15" fill="rgb(230,182,32)" fg:x="1022" fg:w="2"/><text x="14.5217%" y="303.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.06%)</title><rect x="14.2997%" y="293" width="0.0559%" height="15" fill="rgb(242,56,43)" fg:x="1024" fg:w="4"/><text x="14.5497%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_free (3 samples, 0.04%)</title><rect x="15.7660%" y="277" width="0.0419%" height="15" fill="rgb(233,99,24)" fg:x="1129" fg:w="3"/><text x="16.0160%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="15.8078%" y="277" width="0.0140%" height="15" fill="rgb(234,209,42)" fg:x="1132" fg:w="1"/><text x="16.0578%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_try_free_default (1 samples, 0.01%)</title><rect x="15.8218%" y="277" width="0.0140%" height="15" fill="rgb(227,7,12)" fg:x="1133" fg:w="1"/><text x="16.0718%" y="287.50"></text></g><g><title>omelette`&lt;alloc::vec::Vec&lt;T&gt; as timely_container::SizableContainer&gt;::ensure_capacity (23 samples, 0.32%)</title><rect x="15.8358%" y="277" width="0.3212%" height="15" fill="rgb(245,203,43)" fg:x="1134" fg:w="23"/><text x="16.0858%" y="287.50"></text></g><g><title>omelette`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.06%)</title><rect x="16.1570%" y="277" width="0.0559%" height="15" fill="rgb(238,205,33)" fg:x="1157" fg:w="4"/><text x="16.4070%" y="287.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (1 samples, 0.01%)</title><rect x="16.2128%" y="197" width="0.0140%" height="15" fill="rgb(231,56,7)" fg:x="1161" fg:w="1"/><text x="16.4628%" y="207.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (2 samples, 0.03%)</title><rect x="16.2268%" y="197" width="0.0279%" height="15" fill="rgb(244,186,29)" fg:x="1162" fg:w="2"/><text x="16.4768%" y="207.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (3 samples, 0.04%)</title><rect x="16.4223%" y="181" width="0.0419%" height="15" fill="rgb(234,111,31)" fg:x="1176" fg:w="3"/><text x="16.6723%" y="191.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (5 samples, 0.07%)</title><rect x="16.4642%" y="181" width="0.0698%" height="15" fill="rgb(241,149,10)" fg:x="1179" fg:w="5"/><text x="16.7142%" y="191.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (2 samples, 0.03%)</title><rect x="16.5340%" y="181" width="0.0279%" height="15" fill="rgb(249,206,44)" fg:x="1184" fg:w="2"/><text x="16.7840%" y="191.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::containers::BatchContainer::push (17 samples, 0.24%)</title><rect x="16.5619%" y="181" width="0.2374%" height="15" fill="rgb(251,153,30)" fg:x="1186" fg:w="17"/><text x="16.8119%" y="191.50"></text></g><g><title>omelette`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.06%)</title><rect x="16.9250%" y="165" width="0.0559%" height="15" fill="rgb(239,152,38)" fg:x="1212" fg:w="4"/><text x="17.1750%" y="175.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (4 samples, 0.06%)</title><rect x="16.9250%" y="149" width="0.0559%" height="15" fill="rgb(249,139,47)" fg:x="1212" fg:w="4"/><text x="17.1750%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (4 samples, 0.06%)</title><rect x="16.9250%" y="133" width="0.0559%" height="15" fill="rgb(244,64,35)" fg:x="1212" fg:w="4"/><text x="17.1750%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (4 samples, 0.06%)</title><rect x="16.9250%" y="117" width="0.0559%" height="15" fill="rgb(216,46,15)" fg:x="1212" fg:w="4"/><text x="17.1750%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (4 samples, 0.06%)</title><rect x="16.9250%" y="101" width="0.0559%" height="15" fill="rgb(250,74,19)" fg:x="1212" fg:w="4"/><text x="17.1750%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (4 samples, 0.06%)</title><rect x="16.9250%" y="85" width="0.0559%" height="15" fill="rgb(249,42,33)" fg:x="1212" fg:w="4"/><text x="17.1750%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (4 samples, 0.06%)</title><rect x="16.9250%" y="69" width="0.0559%" height="15" fill="rgb(242,149,17)" fg:x="1212" fg:w="4"/><text x="17.1750%" y="79.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insertion_sort_shift_left (1 samples, 0.01%)</title><rect x="16.9809%" y="165" width="0.0140%" height="15" fill="rgb(244,29,21)" fg:x="1216" fg:w="1"/><text x="17.2309%" y="175.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::consolidate_updates (19 samples, 0.27%)</title><rect x="16.7993%" y="181" width="0.2653%" height="15" fill="rgb(220,130,37)" fg:x="1203" fg:w="19"/><text x="17.0493%" y="191.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (5 samples, 0.07%)</title><rect x="16.9948%" y="165" width="0.0698%" height="15" fill="rgb(211,67,2)" fg:x="1217" fg:w="5"/><text x="17.2448%" y="175.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (1 samples, 0.01%)</title><rect x="17.0647%" y="165" width="0.0140%" height="15" fill="rgb(235,68,52)" fg:x="1222" fg:w="1"/><text x="17.3147%" y="175.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (2 samples, 0.03%)</title><rect x="17.0786%" y="165" width="0.0279%" height="15" fill="rgb(246,142,3)" fg:x="1223" fg:w="2"/><text x="17.3286%" y="175.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::containers::BatchContainer::push (1 samples, 0.01%)</title><rect x="17.1065%" y="165" width="0.0140%" height="15" fill="rgb(241,25,7)" fg:x="1225" fg:w="1"/><text x="17.3565%" y="175.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::consolidate_updates (1 samples, 0.01%)</title><rect x="17.1205%" y="165" width="0.0140%" height="15" fill="rgb(242,119,39)" fg:x="1226" fg:w="1"/><text x="17.3705%" y="175.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::copy_key (7 samples, 0.10%)</title><rect x="17.0647%" y="181" width="0.0978%" height="15" fill="rgb(241,98,45)" fg:x="1222" fg:w="7"/><text x="17.3147%" y="191.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::stash_updates_for_val (2 samples, 0.03%)</title><rect x="17.1345%" y="165" width="0.0279%" height="15" fill="rgb(254,28,30)" fg:x="1227" fg:w="2"/><text x="17.3845%" y="175.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt; as differential_dataflow::trace::Merger&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;L&gt;&gt;&gt;::work (92 samples, 1.28%)</title><rect x="16.2547%" y="197" width="1.2847%" height="15" fill="rgb(241,142,54)" fg:x="1164" fg:w="92"/><text x="16.5047%" y="207.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::stash_updates_for_val (27 samples, 0.38%)</title><rect x="17.1624%" y="181" width="0.3770%" height="15" fill="rgb(222,85,15)" fg:x="1229" fg:w="27"/><text x="17.4124%" y="191.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (6 samples, 0.08%)</title><rect x="17.5534%" y="181" width="0.0838%" height="15" fill="rgb(210,85,47)" fg:x="1257" fg:w="6"/><text x="17.8034%" y="191.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (5 samples, 0.07%)</title><rect x="17.6372%" y="181" width="0.0698%" height="15" fill="rgb(224,206,25)" fg:x="1263" fg:w="5"/><text x="17.8872%" y="191.50"></text></g><g><title>omelette`core::cmp::impls::_&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (8 samples, 0.11%)</title><rect x="17.7070%" y="181" width="0.1117%" height="15" fill="rgb(243,201,19)" fg:x="1268" fg:w="8"/><text x="17.9570%" y="191.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (3 samples, 0.04%)</title><rect x="17.8187%" y="181" width="0.0419%" height="15" fill="rgb(236,59,4)" fg:x="1276" fg:w="3"/><text x="18.0687%" y="191.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::containers::BatchContainer::push (7 samples, 0.10%)</title><rect x="17.8606%" y="181" width="0.0978%" height="15" fill="rgb(254,179,45)" fg:x="1279" fg:w="7"/><text x="18.1106%" y="191.50"></text></g><g><title>omelette`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.06%)</title><rect x="18.0422%" y="165" width="0.0559%" height="15" fill="rgb(226,14,10)" fg:x="1292" fg:w="4"/><text x="18.2922%" y="175.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (4 samples, 0.06%)</title><rect x="18.0422%" y="149" width="0.0559%" height="15" fill="rgb(244,27,41)" fg:x="1292" fg:w="4"/><text x="18.2922%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (4 samples, 0.06%)</title><rect x="18.0422%" y="133" width="0.0559%" height="15" fill="rgb(235,35,32)" fg:x="1292" fg:w="4"/><text x="18.2922%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (4 samples, 0.06%)</title><rect x="18.0422%" y="117" width="0.0559%" height="15" fill="rgb(218,68,31)" fg:x="1292" fg:w="4"/><text x="18.2922%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (4 samples, 0.06%)</title><rect x="18.0422%" y="101" width="0.0559%" height="15" fill="rgb(207,120,37)" fg:x="1292" fg:w="4"/><text x="18.2922%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (4 samples, 0.06%)</title><rect x="18.0422%" y="85" width="0.0559%" height="15" fill="rgb(227,98,0)" fg:x="1292" fg:w="4"/><text x="18.2922%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (4 samples, 0.06%)</title><rect x="18.0422%" y="69" width="0.0559%" height="15" fill="rgb(207,7,3)" fg:x="1292" fg:w="4"/><text x="18.2922%" y="79.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insertion_sort_shift_left (4 samples, 0.06%)</title><rect x="18.0980%" y="165" width="0.0559%" height="15" fill="rgb(206,98,19)" fg:x="1296" fg:w="4"/><text x="18.3480%" y="175.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyMerger&lt;L&gt;::consolidate_updates (21 samples, 0.29%)</title><rect x="17.9584%" y="181" width="0.2933%" height="15" fill="rgb(217,5,26)" fg:x="1286" fg:w="21"/><text x="18.2084%" y="191.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (7 samples, 0.10%)</title><rect x="18.1539%" y="165" width="0.0978%" height="15" fill="rgb(235,190,38)" fg:x="1300" fg:w="7"/><text x="18.4039%" y="175.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::rc_blanket_impls::RcMerger&lt;B&gt; as differential_dataflow::trace::Merger&lt;alloc::rc::Rc&lt;B&gt;&gt;&gt;::work (69 samples, 0.96%)</title><rect x="17.5394%" y="197" width="0.9636%" height="15" fill="rgb(247,86,24)" fg:x="1256" fg:w="69"/><text x="17.7894%" y="207.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyMerger&lt;L&gt;::stash_updates_for_key (18 samples, 0.25%)</title><rect x="18.2516%" y="181" width="0.2514%" height="15" fill="rgb(205,101,16)" fg:x="1307" fg:w="18"/><text x="18.5016%" y="191.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (10 samples, 0.14%)</title><rect x="18.5030%" y="197" width="0.1396%" height="15" fill="rgb(246,168,33)" fg:x="1325" fg:w="10"/><text x="18.7530%" y="207.50"></text></g><g><title>omelette`core::cmp::impls::_&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (6 samples, 0.08%)</title><rect x="18.6426%" y="197" width="0.0838%" height="15" fill="rgb(231,114,1)" fg:x="1335" fg:w="6"/><text x="18.8926%" y="207.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::containers::BatchContainer::push (5 samples, 0.07%)</title><rect x="18.7264%" y="197" width="0.0698%" height="15" fill="rgb(207,184,53)" fg:x="1341" fg:w="5"/><text x="18.9764%" y="207.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyMerger&lt;L&gt;::consolidate_updates (4 samples, 0.06%)</title><rect x="18.7963%" y="197" width="0.0559%" height="15" fill="rgb(224,95,51)" fg:x="1346" fg:w="4"/><text x="19.0463%" y="207.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyMerger&lt;L&gt;::stash_updates_for_key (7 samples, 0.10%)</title><rect x="18.8521%" y="197" width="0.0978%" height="15" fill="rgb(212,188,45)" fg:x="1350" fg:w="7"/><text x="19.1021%" y="207.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::copy_key (2 samples, 0.03%)</title><rect x="18.9499%" y="197" width="0.0279%" height="15" fill="rgb(223,154,38)" fg:x="1357" fg:w="2"/><text x="19.1999%" y="207.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::MergeVariant&lt;B&gt;::work (202 samples, 2.82%)</title><rect x="16.2128%" y="213" width="2.8208%" height="15" fill="rgb(251,22,52)" fg:x="1161" fg:w="202"/><text x="16.4628%" y="223.50">om..</text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::stash_updates_for_val (4 samples, 0.06%)</title><rect x="18.9778%" y="197" width="0.0559%" height="15" fill="rgb(229,209,22)" fg:x="1359" fg:w="4"/><text x="19.2278%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="19.0476%" y="181" width="0.0140%" height="15" fill="rgb(234,138,34)" fg:x="1364" fg:w="1"/><text x="19.2976%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="19.0476%" y="165" width="0.0140%" height="15" fill="rgb(212,95,11)" fg:x="1364" fg:w="1"/><text x="19.2976%" y="175.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,()),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt; (5 samples, 0.07%)</title><rect x="19.0337%" y="197" width="0.0698%" height="15" fill="rgb(240,179,47)" fg:x="1363" fg:w="5"/><text x="19.2837%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (3 samples, 0.04%)</title><rect x="19.0616%" y="181" width="0.0419%" height="15" fill="rgb(240,163,11)" fg:x="1365" fg:w="3"/><text x="19.3116%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`medium_free_scan_madvise_free (2 samples, 0.03%)</title><rect x="19.0755%" y="165" width="0.0279%" height="15" fill="rgb(236,37,12)" fg:x="1366" fg:w="2"/><text x="19.3255%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.03%)</title><rect x="19.0755%" y="149" width="0.0279%" height="15" fill="rgb(232,164,16)" fg:x="1366" fg:w="2"/><text x="19.3255%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="19.1174%" y="181" width="0.0140%" height="15" fill="rgb(244,205,15)" fg:x="1369" fg:w="1"/><text x="19.3674%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="19.1174%" y="165" width="0.0140%" height="15" fill="rgb(223,117,47)" fg:x="1369" fg:w="1"/><text x="19.3674%" y="175.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Class,(omelette::Node,usize)),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="19.1035%" y="197" width="0.0419%" height="15" fill="rgb(244,107,35)" fg:x="1368" fg:w="3"/><text x="19.3535%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="19.1314%" y="181" width="0.0140%" height="15" fill="rgb(205,140,8)" fg:x="1370" fg:w="1"/><text x="19.3814%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="19.1314%" y="165" width="0.0140%" height="15" fill="rgb(228,84,46)" fg:x="1370" fg:w="1"/><text x="19.3814%" y="175.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Class,omelette::Class),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="19.1454%" y="197" width="0.0140%" height="15" fill="rgb(254,188,9)" fg:x="1371" fg:w="1"/><text x="19.3954%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="19.1454%" y="181" width="0.0140%" height="15" fill="rgb(206,112,54)" fg:x="1371" fg:w="1"/><text x="19.3954%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="19.1454%" y="165" width="0.0140%" height="15" fill="rgb(216,84,49)" fg:x="1371" fg:w="1"/><text x="19.3954%" y="175.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::Spine&lt;B&gt;::apply_fuel (212 samples, 2.96%)</title><rect x="16.2128%" y="229" width="2.9605%" height="15" fill="rgb(214,194,35)" fg:x="1161" fg:w="212"/><text x="16.4628%" y="239.50">ome..</text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::Spine&lt;B&gt;::complete_at (10 samples, 0.14%)</title><rect x="19.0337%" y="213" width="0.1396%" height="15" fill="rgb(249,28,3)" fg:x="1363" fg:w="10"/><text x="19.2837%" y="223.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Class,omelette::Node),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="19.1593%" y="197" width="0.0140%" height="15" fill="rgb(222,56,52)" fg:x="1372" fg:w="1"/><text x="19.4093%" y="207.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,()),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="19.1733%" y="213" width="0.0419%" height="15" fill="rgb(245,217,50)" fg:x="1373" fg:w="3"/><text x="19.4233%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="19.2012%" y="197" width="0.0140%" height="15" fill="rgb(213,201,24)" fg:x="1375" fg:w="1"/><text x="19.4512%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="19.2012%" y="181" width="0.0140%" height="15" fill="rgb(248,116,28)" fg:x="1375" fg:w="1"/><text x="19.4512%" y="191.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (1 samples, 0.01%)</title><rect x="19.2152%" y="197" width="0.0140%" height="15" fill="rgb(219,72,43)" fg:x="1376" fg:w="1"/><text x="19.4652%" y="207.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (2 samples, 0.03%)</title><rect x="19.2431%" y="181" width="0.0279%" height="15" fill="rgb(209,138,14)" fg:x="1378" fg:w="2"/><text x="19.4931%" y="191.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (2 samples, 0.03%)</title><rect x="19.2711%" y="181" width="0.0279%" height="15" fill="rgb(222,18,33)" fg:x="1380" fg:w="2"/><text x="19.5211%" y="191.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (1 samples, 0.01%)</title><rect x="19.2990%" y="181" width="0.0140%" height="15" fill="rgb(213,199,7)" fg:x="1382" fg:w="1"/><text x="19.5490%" y="191.50"></text></g><g><title>omelette`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.03%)</title><rect x="19.3409%" y="165" width="0.0279%" height="15" fill="rgb(250,110,10)" fg:x="1385" fg:w="2"/><text x="19.5909%" y="175.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="19.3409%" y="149" width="0.0279%" height="15" fill="rgb(248,123,6)" fg:x="1385" fg:w="2"/><text x="19.5909%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.03%)</title><rect x="19.3409%" y="133" width="0.0279%" height="15" fill="rgb(206,91,31)" fg:x="1385" fg:w="2"/><text x="19.5909%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.03%)</title><rect x="19.3409%" y="117" width="0.0279%" height="15" fill="rgb(211,154,13)" fg:x="1385" fg:w="2"/><text x="19.5909%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.03%)</title><rect x="19.3409%" y="101" width="0.0279%" height="15" fill="rgb(225,148,7)" fg:x="1385" fg:w="2"/><text x="19.5909%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (2 samples, 0.03%)</title><rect x="19.3409%" y="85" width="0.0279%" height="15" fill="rgb(220,160,43)" fg:x="1385" fg:w="2"/><text x="19.5909%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.03%)</title><rect x="19.3409%" y="69" width="0.0279%" height="15" fill="rgb(213,52,39)" fg:x="1385" fg:w="2"/><text x="19.5909%" y="79.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insertion_sort_shift_left (1 samples, 0.01%)</title><rect x="19.3688%" y="165" width="0.0140%" height="15" fill="rgb(243,137,7)" fg:x="1387" fg:w="1"/><text x="19.6188%" y="175.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::consolidate_updates (6 samples, 0.08%)</title><rect x="19.3129%" y="181" width="0.0838%" height="15" fill="rgb(230,79,13)" fg:x="1383" fg:w="6"/><text x="19.5629%" y="191.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (1 samples, 0.01%)</title><rect x="19.3828%" y="165" width="0.0140%" height="15" fill="rgb(247,105,23)" fg:x="1388" fg:w="1"/><text x="19.6328%" y="175.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (3 samples, 0.04%)</title><rect x="19.3967%" y="165" width="0.0419%" height="15" fill="rgb(223,179,41)" fg:x="1389" fg:w="3"/><text x="19.6467%" y="175.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (1 samples, 0.01%)</title><rect x="19.4386%" y="165" width="0.0140%" height="15" fill="rgb(218,9,34)" fg:x="1392" fg:w="1"/><text x="19.6886%" y="175.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::consolidate_updates (1 samples, 0.01%)</title><rect x="19.4526%" y="165" width="0.0140%" height="15" fill="rgb(222,106,8)" fg:x="1393" fg:w="1"/><text x="19.7026%" y="175.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::copy_key (6 samples, 0.08%)</title><rect x="19.3967%" y="181" width="0.0838%" height="15" fill="rgb(211,220,0)" fg:x="1389" fg:w="6"/><text x="19.6467%" y="191.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::stash_updates_for_val (1 samples, 0.01%)</title><rect x="19.4666%" y="165" width="0.0140%" height="15" fill="rgb(229,52,16)" fg:x="1394" fg:w="1"/><text x="19.7166%" y="175.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt; as differential_dataflow::trace::Merger&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;L&gt;&gt;&gt;::work (22 samples, 0.31%)</title><rect x="19.2292%" y="197" width="0.3072%" height="15" fill="rgb(212,155,18)" fg:x="1377" fg:w="22"/><text x="19.4792%" y="207.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::stash_updates_for_val (4 samples, 0.06%)</title><rect x="19.4805%" y="181" width="0.0559%" height="15" fill="rgb(242,21,14)" fg:x="1395" fg:w="4"/><text x="19.7305%" y="191.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (2 samples, 0.03%)</title><rect x="19.5643%" y="181" width="0.0279%" height="15" fill="rgb(222,19,48)" fg:x="1401" fg:w="2"/><text x="19.8143%" y="191.50"></text></g><g><title>omelette`core::cmp::impls::_&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (2 samples, 0.03%)</title><rect x="19.5922%" y="181" width="0.0279%" height="15" fill="rgb(232,45,27)" fg:x="1403" fg:w="2"/><text x="19.8422%" y="191.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (1 samples, 0.01%)</title><rect x="19.6202%" y="181" width="0.0140%" height="15" fill="rgb(249,103,42)" fg:x="1405" fg:w="1"/><text x="19.8702%" y="191.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::containers::BatchContainer::push (1 samples, 0.01%)</title><rect x="19.6341%" y="181" width="0.0140%" height="15" fill="rgb(246,81,33)" fg:x="1406" fg:w="1"/><text x="19.8841%" y="191.50"></text></g><g><title>omelette`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.03%)</title><rect x="19.7040%" y="165" width="0.0279%" height="15" fill="rgb(252,33,42)" fg:x="1411" fg:w="2"/><text x="19.9540%" y="175.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="19.7040%" y="149" width="0.0279%" height="15" fill="rgb(209,212,41)" fg:x="1411" fg:w="2"/><text x="19.9540%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.03%)</title><rect x="19.7040%" y="133" width="0.0279%" height="15" fill="rgb(207,154,6)" fg:x="1411" fg:w="2"/><text x="19.9540%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.03%)</title><rect x="19.7040%" y="117" width="0.0279%" height="15" fill="rgb(223,64,47)" fg:x="1411" fg:w="2"/><text x="19.9540%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.03%)</title><rect x="19.7040%" y="101" width="0.0279%" height="15" fill="rgb(211,161,38)" fg:x="1411" fg:w="2"/><text x="19.9540%" y="111.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyMerger&lt;L&gt;::consolidate_updates (7 samples, 0.10%)</title><rect x="19.6481%" y="181" width="0.0978%" height="15" fill="rgb(219,138,40)" fg:x="1407" fg:w="7"/><text x="19.8981%" y="191.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (1 samples, 0.01%)</title><rect x="19.7319%" y="165" width="0.0140%" height="15" fill="rgb(241,228,46)" fg:x="1413" fg:w="1"/><text x="19.9819%" y="175.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::rc_blanket_impls::RcMerger&lt;B&gt; as differential_dataflow::trace::Merger&lt;alloc::rc::Rc&lt;B&gt;&gt;&gt;::work (22 samples, 0.31%)</title><rect x="19.5364%" y="197" width="0.3072%" height="15" fill="rgb(223,209,38)" fg:x="1399" fg:w="22"/><text x="19.7864%" y="207.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyMerger&lt;L&gt;::stash_updates_for_key (7 samples, 0.10%)</title><rect x="19.7458%" y="181" width="0.0978%" height="15" fill="rgb(236,164,45)" fg:x="1414" fg:w="7"/><text x="19.9958%" y="191.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::containers::BatchContainer::push (1 samples, 0.01%)</title><rect x="19.8436%" y="197" width="0.0140%" height="15" fill="rgb(231,15,5)" fg:x="1421" fg:w="1"/><text x="20.0936%" y="207.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyMerger&lt;L&gt;::stash_updates_for_key (2 samples, 0.03%)</title><rect x="19.8576%" y="197" width="0.0279%" height="15" fill="rgb(252,35,15)" fg:x="1422" fg:w="2"/><text x="20.1076%" y="207.50"></text></g><g><title>omelette`&lt;differential_dataflow::operators::arrange::agent::TraceAgent&lt;Tr&gt; as differential_dataflow::trace::TraceReader&gt;::set_physical_compaction (265 samples, 3.70%)</title><rect x="16.2128%" y="277" width="3.7006%" height="15" fill="rgb(248,181,18)" fg:x="1161" fg:w="265"/><text x="16.4628%" y="287.50">omel..</text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::Spine&lt;B&gt;::consider_merges (265 samples, 3.70%)</title><rect x="16.2128%" y="261" width="3.7006%" height="15" fill="rgb(233,39,42)" fg:x="1161" fg:w="265"/><text x="16.4628%" y="271.50">omel..</text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::Spine&lt;B&gt;::introduce_batch (265 samples, 3.70%)</title><rect x="16.2128%" y="245" width="3.7006%" height="15" fill="rgb(238,110,33)" fg:x="1161" fg:w="265"/><text x="16.4628%" y="255.50">omel..</text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::Spine&lt;B&gt;::complete_at (53 samples, 0.74%)</title><rect x="19.1733%" y="229" width="0.7401%" height="15" fill="rgb(233,195,10)" fg:x="1373" fg:w="53"/><text x="19.4233%" y="239.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::MergeVariant&lt;B&gt;::work (50 samples, 0.70%)</title><rect x="19.2152%" y="213" width="0.6982%" height="15" fill="rgb(254,105,3)" fg:x="1376" fg:w="50"/><text x="19.4652%" y="223.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::stash_updates_for_val (2 samples, 0.03%)</title><rect x="19.8855%" y="197" width="0.0279%" height="15" fill="rgb(221,225,9)" fg:x="1424" fg:w="2"/><text x="20.1355%" y="207.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (8 samples, 0.11%)</title><rect x="21.0166%" y="261" width="0.1117%" height="15" fill="rgb(224,227,45)" fg:x="1505" fg:w="8"/><text x="21.2666%" y="271.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (12 samples, 0.17%)</title><rect x="21.1283%" y="261" width="0.1676%" height="15" fill="rgb(229,198,43)" fg:x="1513" fg:w="12"/><text x="21.3783%" y="271.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (15 samples, 0.21%)</title><rect x="21.2959%" y="261" width="0.2095%" height="15" fill="rgb(206,209,35)" fg:x="1525" fg:w="15"/><text x="21.5459%" y="271.50"></text></g><g><title>omelette`differential_dataflow::operators::HistoryReplay&lt;C&gt;::step_while_time_is (16 samples, 0.22%)</title><rect x="21.5054%" y="261" width="0.2234%" height="15" fill="rgb(245,195,53)" fg:x="1540" fg:w="16"/><text x="21.7554%" y="271.50"></text></g><g><title>omelette`differential_dataflow::operators::ValueHistory&lt;C&gt;::replay (1 samples, 0.01%)</title><rect x="21.7288%" y="261" width="0.0140%" height="15" fill="rgb(240,92,26)" fg:x="1556" fg:w="1"/><text x="21.9788%" y="271.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (21 samples, 0.29%)</title><rect x="22.3991%" y="245" width="0.2933%" height="15" fill="rgb(207,40,23)" fg:x="1604" fg:w="21"/><text x="22.6491%" y="255.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialOrd&gt;::partial_cmp (168 samples, 2.35%)</title><rect x="22.6924%" y="245" width="2.3460%" height="15" fill="rgb(223,111,35)" fg:x="1625" fg:w="168"/><text x="22.9424%" y="255.50">o..</text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (1 samples, 0.01%)</title><rect x="25.0384%" y="245" width="0.0140%" height="15" fill="rgb(229,147,28)" fg:x="1793" fg:w="1"/><text x="25.2884%" y="255.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insertion_sort_shift_left (6 samples, 0.08%)</title><rect x="25.0524%" y="245" width="0.0838%" height="15" fill="rgb(211,29,28)" fg:x="1794" fg:w="6"/><text x="25.3024%" y="255.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (4 samples, 0.06%)</title><rect x="25.1362%" y="245" width="0.0559%" height="15" fill="rgb(228,72,33)" fg:x="1800" fg:w="4"/><text x="25.3862%" y="255.50"></text></g><g><title>omelette`differential_dataflow::operators::ValueHistory&lt;C&gt;::replay (17 samples, 0.24%)</title><rect x="25.1920%" y="245" width="0.2374%" height="15" fill="rgb(205,214,31)" fg:x="1804" fg:w="17"/><text x="25.4420%" y="255.50"></text></g><g><title>omelette`differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt;::minimize_keys (38 samples, 0.53%)</title><rect x="25.4294%" y="245" width="0.5307%" height="15" fill="rgb(224,111,15)" fg:x="1821" fg:w="38"/><text x="25.6794%" y="255.50"></text></g><g><title>omelette`differential_dataflow::operators::ValueHistory&lt;C&gt;::replay_key (425 samples, 5.93%)</title><rect x="21.7428%" y="261" width="5.9349%" height="15" fill="rgb(253,21,26)" fg:x="1557" fg:w="425"/><text x="21.9928%" y="271.50">omelette..</text></g><g><title>omelette`differential_dataflow::trace::implementations::containers::BatchContainer::advance (123 samples, 1.72%)</title><rect x="25.9601%" y="245" width="1.7176%" height="15" fill="rgb(245,139,43)" fg:x="1859" fg:w="123"/><text x="26.2101%" y="255.50"></text></g><g><title>omelette`differential_dataflow::operators::reduce::sort_dedup (4 samples, 0.06%)</title><rect x="27.6777%" y="261" width="0.0559%" height="15" fill="rgb(252,170,7)" fg:x="1982" fg:w="4"/><text x="27.9277%" y="271.50"></text></g><g><title>omelette`differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt;::minimize_keys (7 samples, 0.10%)</title><rect x="27.7336%" y="261" width="0.0978%" height="15" fill="rgb(231,118,14)" fg:x="1986" fg:w="7"/><text x="27.9836%" y="271.50"></text></g><g><title>omelette`&lt;differential_dataflow::operators::reduce::history_replay::HistoryReplayer&lt;C1,C2,C3,V&gt; as differential_dataflow::operators::reduce::PerKeyCompute&lt;C1,C2,C3,V&gt;&gt;::compute (580 samples, 8.10%)</title><rect x="19.9134%" y="277" width="8.0994%" height="15" fill="rgb(238,83,0)" fg:x="1426" fg:w="580"/><text x="20.1634%" y="287.50">omelette`&lt;d..</text></g><g><title>omelette`differential_dataflow::trace::implementations::containers::BatchContainer::advance (13 samples, 0.18%)</title><rect x="27.8313%" y="261" width="0.1815%" height="15" fill="rgb(221,39,39)" fg:x="1993" fg:w="13"/><text x="28.0813%" y="271.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (48 samples, 0.67%)</title><rect x="28.0128%" y="277" width="0.6703%" height="15" fill="rgb(222,119,46)" fg:x="2006" fg:w="48"/><text x="28.2628%" y="287.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (2 samples, 0.03%)</title><rect x="28.6831%" y="277" width="0.0279%" height="15" fill="rgb(222,165,49)" fg:x="2054" fg:w="2"/><text x="28.9331%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.20%)</title><rect x="28.7111%" y="261" width="0.1955%" height="15" fill="rgb(219,113,52)" fg:x="2056" fg:w="14"/><text x="28.9611%" y="271.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::chunker::VecChunker&lt;((K,V),T,R)&gt; as timely_container::ContainerBuilder&gt;::extract (3 samples, 0.04%)</title><rect x="28.9066%" y="261" width="0.0419%" height="15" fill="rgb(214,7,15)" fg:x="2070" fg:w="3"/><text x="29.1566%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.15%)</title><rect x="29.5210%" y="245" width="0.1536%" height="15" fill="rgb(235,32,4)" fg:x="2114" fg:w="11"/><text x="29.7710%" y="255.50"></text></g><g><title>omelette`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (16 samples, 0.22%)</title><rect x="29.6746%" y="245" width="0.2234%" height="15" fill="rgb(238,90,54)" fg:x="2125" fg:w="16"/><text x="29.9246%" y="255.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (43 samples, 0.60%)</title><rect x="29.8981%" y="245" width="0.6005%" height="15" fill="rgb(213,208,19)" fg:x="2141" fg:w="43"/><text x="30.1481%" y="255.50"></text></g><g><title>omelette`DYLD-STUB$$memmove (2 samples, 0.03%)</title><rect x="30.4985%" y="245" width="0.0279%" height="15" fill="rgb(233,156,4)" fg:x="2184" fg:w="2"/><text x="30.7485%" y="255.50"></text></g><g><title>omelette`core::slice::sort::unstable::ipnsort (2 samples, 0.03%)</title><rect x="30.5265%" y="245" width="0.0279%" height="15" fill="rgb(207,194,5)" fg:x="2186" fg:w="2"/><text x="30.7765%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (29 samples, 0.40%)</title><rect x="31.7134%" y="229" width="0.4050%" height="15" fill="rgb(206,111,30)" fg:x="2271" fg:w="29"/><text x="31.9634%" y="239.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (79 samples, 1.10%)</title><rect x="32.1184%" y="229" width="1.1032%" height="15" fill="rgb(243,70,54)" fg:x="2300" fg:w="79"/><text x="32.3684%" y="239.50"></text></g><g><title>omelette`DYLD-STUB$$memmove (4 samples, 0.06%)</title><rect x="33.2216%" y="229" width="0.0559%" height="15" fill="rgb(242,28,8)" fg:x="2379" fg:w="4"/><text x="33.4716%" y="239.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (2 samples, 0.03%)</title><rect x="33.2775%" y="229" width="0.0279%" height="15" fill="rgb(219,106,18)" fg:x="2383" fg:w="2"/><text x="33.5275%" y="239.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (4 samples, 0.06%)</title><rect x="33.5009%" y="213" width="0.0559%" height="15" fill="rgb(244,222,10)" fg:x="2399" fg:w="4"/><text x="33.7509%" y="223.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (2 samples, 0.03%)</title><rect x="33.5568%" y="213" width="0.0279%" height="15" fill="rgb(236,179,52)" fg:x="2403" fg:w="2"/><text x="33.8068%" y="223.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (24 samples, 0.34%)</title><rect x="33.3054%" y="229" width="0.3351%" height="15" fill="rgb(213,23,39)" fg:x="2385" fg:w="24"/><text x="33.5554%" y="239.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::sort4_stable (4 samples, 0.06%)</title><rect x="33.5847%" y="213" width="0.0559%" height="15" fill="rgb(238,48,10)" fg:x="2405" fg:w="4"/><text x="33.8347%" y="223.50"></text></g><g><title>omelette`core::slice::sort::unstable::ipnsort (13 samples, 0.18%)</title><rect x="33.6406%" y="229" width="0.1815%" height="15" fill="rgb(251,196,23)" fg:x="2409" fg:w="13"/><text x="33.8906%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.24%)</title><rect x="34.4226%" y="213" width="0.2374%" height="15" fill="rgb(250,152,24)" fg:x="2465" fg:w="17"/><text x="34.6726%" y="223.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (47 samples, 0.66%)</title><rect x="34.6600%" y="213" width="0.6563%" height="15" fill="rgb(209,150,17)" fg:x="2482" fg:w="47"/><text x="34.9100%" y="223.50"></text></g><g><title>omelette`DYLD-STUB$$memmove (4 samples, 0.06%)</title><rect x="35.3163%" y="213" width="0.0559%" height="15" fill="rgb(234,202,34)" fg:x="2529" fg:w="4"/><text x="35.5663%" y="223.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="35.4559%" y="181" width="0.0140%" height="15" fill="rgb(253,148,53)" fg:x="2539" fg:w="1"/><text x="35.7059%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::choose_pivot (12 samples, 0.17%)</title><rect x="35.3722%" y="213" width="0.1676%" height="15" fill="rgb(218,129,16)" fg:x="2533" fg:w="12"/><text x="35.6222%" y="223.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::median3_rec (9 samples, 0.13%)</title><rect x="35.4140%" y="197" width="0.1257%" height="15" fill="rgb(216,85,19)" fg:x="2536" fg:w="9"/><text x="35.6640%" y="207.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::median3_rec (5 samples, 0.07%)</title><rect x="35.4699%" y="181" width="0.0698%" height="15" fill="rgb(235,228,7)" fg:x="2540" fg:w="5"/><text x="35.7199%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::median3_rec (1 samples, 0.01%)</title><rect x="35.5397%" y="213" width="0.0140%" height="15" fill="rgb(245,175,0)" fg:x="2545" fg:w="1"/><text x="35.7897%" y="223.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (5 samples, 0.07%)</title><rect x="35.5537%" y="213" width="0.0698%" height="15" fill="rgb(208,168,36)" fg:x="2546" fg:w="5"/><text x="35.8037%" y="223.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (13 samples, 0.18%)</title><rect x="36.0704%" y="197" width="0.1815%" height="15" fill="rgb(246,171,24)" fg:x="2583" fg:w="13"/><text x="36.3204%" y="207.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (12 samples, 0.17%)</title><rect x="36.2519%" y="197" width="0.1676%" height="15" fill="rgb(215,142,24)" fg:x="2596" fg:w="12"/><text x="36.5019%" y="207.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (60 samples, 0.84%)</title><rect x="35.6235%" y="213" width="0.8379%" height="15" fill="rgb(250,187,7)" fg:x="2551" fg:w="60"/><text x="35.8735%" y="223.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::sort4_stable (3 samples, 0.04%)</title><rect x="36.4195%" y="197" width="0.0419%" height="15" fill="rgb(228,66,33)" fg:x="2608" fg:w="3"/><text x="36.6695%" y="207.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::sort4_stable (2 samples, 0.03%)</title><rect x="36.4614%" y="213" width="0.0279%" height="15" fill="rgb(234,215,21)" fg:x="2611" fg:w="2"/><text x="36.7114%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.14%)</title><rect x="37.0619%" y="197" width="0.1396%" height="15" fill="rgb(222,191,20)" fg:x="2654" fg:w="10"/><text x="37.3119%" y="207.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (53 samples, 0.74%)</title><rect x="37.2015%" y="197" width="0.7401%" height="15" fill="rgb(245,79,54)" fg:x="2664" fg:w="53"/><text x="37.4515%" y="207.50"></text></g><g><title>omelette`DYLD-STUB$$memmove (4 samples, 0.06%)</title><rect x="37.9416%" y="197" width="0.0559%" height="15" fill="rgb(240,10,37)" fg:x="2717" fg:w="4"/><text x="38.1916%" y="207.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (2 samples, 0.03%)</title><rect x="38.0254%" y="165" width="0.0279%" height="15" fill="rgb(214,192,32)" fg:x="2723" fg:w="2"/><text x="38.2754%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::choose_pivot (6 samples, 0.08%)</title><rect x="37.9975%" y="197" width="0.0838%" height="15" fill="rgb(209,36,54)" fg:x="2721" fg:w="6"/><text x="38.2475%" y="207.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::median3_rec (5 samples, 0.07%)</title><rect x="38.0115%" y="181" width="0.0698%" height="15" fill="rgb(220,10,11)" fg:x="2722" fg:w="5"/><text x="38.2615%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::median3_rec (2 samples, 0.03%)</title><rect x="38.0533%" y="165" width="0.0279%" height="15" fill="rgb(221,106,17)" fg:x="2725" fg:w="2"/><text x="38.3033%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (5 samples, 0.07%)</title><rect x="38.0813%" y="197" width="0.0698%" height="15" fill="rgb(251,142,44)" fg:x="2727" fg:w="5"/><text x="38.3313%" y="207.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (13 samples, 0.18%)</title><rect x="38.9750%" y="181" width="0.1815%" height="15" fill="rgb(238,13,15)" fg:x="2791" fg:w="13"/><text x="39.2250%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (13 samples, 0.18%)</title><rect x="39.1565%" y="181" width="0.1815%" height="15" fill="rgb(208,107,27)" fg:x="2804" fg:w="13"/><text x="39.4065%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (93 samples, 1.30%)</title><rect x="38.1511%" y="197" width="1.2987%" height="15" fill="rgb(205,136,37)" fg:x="2732" fg:w="93"/><text x="38.4011%" y="207.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::sort4_stable (8 samples, 0.11%)</title><rect x="39.3381%" y="181" width="0.1117%" height="15" fill="rgb(250,205,27)" fg:x="2817" fg:w="8"/><text x="39.5881%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="39.7012%" y="181" width="0.0140%" height="15" fill="rgb(210,80,43)" fg:x="2843" fg:w="1"/><text x="39.9512%" y="191.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (13 samples, 0.18%)</title><rect x="39.7151%" y="181" width="0.1815%" height="15" fill="rgb(247,160,36)" fg:x="2844" fg:w="13"/><text x="39.9651%" y="191.50"></text></g><g><title>omelette`DYLD-STUB$$memmove (1 samples, 0.01%)</title><rect x="39.8967%" y="181" width="0.0140%" height="15" fill="rgb(234,13,49)" fg:x="2857" fg:w="1"/><text x="40.1467%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::choose_pivot (1 samples, 0.01%)</title><rect x="39.9106%" y="181" width="0.0140%" height="15" fill="rgb(234,122,0)" fg:x="2858" fg:w="1"/><text x="40.1606%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (1 samples, 0.01%)</title><rect x="39.9246%" y="181" width="0.0140%" height="15" fill="rgb(207,146,38)" fg:x="2859" fg:w="1"/><text x="40.1746%" y="191.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (8 samples, 0.11%)</title><rect x="40.3296%" y="165" width="0.1117%" height="15" fill="rgb(207,177,25)" fg:x="2888" fg:w="8"/><text x="40.5796%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (8 samples, 0.11%)</title><rect x="40.4413%" y="165" width="0.1117%" height="15" fill="rgb(211,178,42)" fg:x="2896" fg:w="8"/><text x="40.6913%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (46 samples, 0.64%)</title><rect x="39.9386%" y="181" width="0.6424%" height="15" fill="rgb(230,69,54)" fg:x="2860" fg:w="46"/><text x="40.1886%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::sort4_stable (2 samples, 0.03%)</title><rect x="40.5530%" y="165" width="0.0279%" height="15" fill="rgb(214,135,41)" fg:x="2904" fg:w="2"/><text x="40.8030%" y="175.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (3 samples, 0.04%)</title><rect x="40.6228%" y="165" width="0.0419%" height="15" fill="rgb(237,67,25)" fg:x="2909" fg:w="3"/><text x="40.8728%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (2 samples, 0.03%)</title><rect x="40.7206%" y="149" width="0.0279%" height="15" fill="rgb(222,189,50)" fg:x="2916" fg:w="2"/><text x="40.9706%" y="159.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (8 samples, 0.11%)</title><rect x="40.6647%" y="165" width="0.1117%" height="15" fill="rgb(245,148,34)" fg:x="2912" fg:w="8"/><text x="40.9147%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::sort4_stable (2 samples, 0.03%)</title><rect x="40.7485%" y="149" width="0.0279%" height="15" fill="rgb(222,29,6)" fg:x="2918" fg:w="2"/><text x="40.9985%" y="159.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::chunker::VecChunker&lt;((K,V),T,R)&gt; as timely_container::PushInto&lt;&amp;mut alloc::vec::Vec&lt;((K,V),T,R)&gt;&gt;&gt;::push_into (848 samples, 11.84%)</title><rect x="28.9485%" y="261" width="11.8419%" height="15" fill="rgb(221,189,43)" fg:x="2073" fg:w="848"/><text x="29.1985%" y="271.50">omelette`&lt;differen..</text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_updates_from (733 samples, 10.24%)</title><rect x="30.5544%" y="245" width="10.2360%" height="15" fill="rgb(207,36,27)" fg:x="2188" fg:w="733"/><text x="30.8044%" y="255.50">omelette`differ..</text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (499 samples, 6.97%)</title><rect x="33.8221%" y="229" width="6.9683%" height="15" fill="rgb(217,90,24)" fg:x="2422" fg:w="499"/><text x="34.0721%" y="239.50">omelette`..</text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (308 samples, 4.30%)</title><rect x="36.4893%" y="213" width="4.3011%" height="15" fill="rgb(224,66,35)" fg:x="2613" fg:w="308"/><text x="36.7393%" y="223.50">omele..</text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (96 samples, 1.34%)</title><rect x="39.4498%" y="197" width="1.3406%" height="15" fill="rgb(221,13,50)" fg:x="2825" fg:w="96"/><text x="39.6998%" y="207.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (15 samples, 0.21%)</title><rect x="40.5809%" y="181" width="0.2095%" height="15" fill="rgb(236,68,49)" fg:x="2906" fg:w="15"/><text x="40.8309%" y="191.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (1 samples, 0.01%)</title><rect x="40.7764%" y="165" width="0.0140%" height="15" fill="rgb(229,146,28)" fg:x="2920" fg:w="1"/><text x="41.0264%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (1 samples, 0.01%)</title><rect x="40.7764%" y="149" width="0.0140%" height="15" fill="rgb(225,31,38)" fg:x="2920" fg:w="1"/><text x="41.0264%" y="159.50"></text></g><g><title>omelette`__rdl_alloc (1 samples, 0.01%)</title><rect x="40.7904%" y="261" width="0.0140%" height="15" fill="rgb(250,208,3)" fg:x="2921" fg:w="1"/><text x="41.0404%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="40.8183%" y="245" width="0.0140%" height="15" fill="rgb(246,54,23)" fg:x="2923" fg:w="1"/><text x="41.0683%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="40.8323%" y="229" width="0.0140%" height="15" fill="rgb(243,76,11)" fg:x="2924" fg:w="1"/><text x="41.0823%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="40.8463%" y="229" width="0.0279%" height="15" fill="rgb(245,21,50)" fg:x="2925" fg:w="2"/><text x="41.0963%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.04%)</title><rect x="40.8742%" y="229" width="0.0419%" height="15" fill="rgb(228,9,43)" fg:x="2927" fg:w="3"/><text x="41.1242%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.03%)</title><rect x="40.8881%" y="213" width="0.0279%" height="15" fill="rgb(208,100,47)" fg:x="2928" fg:w="2"/><text x="41.1381%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (2 samples, 0.03%)</title><rect x="40.8881%" y="197" width="0.0279%" height="15" fill="rgb(232,26,8)" fg:x="2928" fg:w="2"/><text x="41.1381%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="40.9161%" y="229" width="0.0140%" height="15" fill="rgb(216,166,38)" fg:x="2930" fg:w="1"/><text x="41.1661%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (3 samples, 0.04%)</title><rect x="48.0380%" y="213" width="0.0419%" height="15" fill="rgb(251,202,51)" fg:x="3440" fg:w="3"/><text x="48.2880%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_detach_region (1 samples, 0.01%)</title><rect x="48.0799%" y="197" width="0.0140%" height="15" fill="rgb(254,216,34)" fg:x="3443" fg:w="1"/><text x="48.3299%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.01%)</title><rect x="48.0799%" y="181" width="0.0140%" height="15" fill="rgb(251,32,27)" fg:x="3443" fg:w="1"/><text x="48.3299%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (2 samples, 0.03%)</title><rect x="48.0938%" y="197" width="0.0279%" height="15" fill="rgb(208,127,28)" fg:x="3444" fg:w="2"/><text x="48.3438%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_small (4 samples, 0.06%)</title><rect x="48.0799%" y="213" width="0.0559%" height="15" fill="rgb(224,137,22)" fg:x="3443" fg:w="4"/><text x="48.3299%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (1 samples, 0.01%)</title><rect x="48.1218%" y="197" width="0.0140%" height="15" fill="rgb(254,70,32)" fg:x="3446" fg:w="1"/><text x="48.3718%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="48.1218%" y="181" width="0.0140%" height="15" fill="rgb(229,75,37)" fg:x="3446" fg:w="1"/><text x="48.3718%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="48.1357%" y="213" width="0.0140%" height="15" fill="rgb(252,64,23)" fg:x="3447" fg:w="1"/><text x="48.3857%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="48.1357%" y="197" width="0.0140%" height="15" fill="rgb(232,162,48)" fg:x="3447" fg:w="1"/><text x="48.3857%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="48.1497%" y="213" width="0.0140%" height="15" fill="rgb(246,160,12)" fg:x="3448" fg:w="1"/><text x="48.3997%" y="223.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (128 samples, 1.79%)</title><rect x="48.1637%" y="213" width="1.7875%" height="15" fill="rgb(247,166,0)" fg:x="3449" fg:w="128"/><text x="48.4137%" y="223.50">o..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="49.9511%" y="197" width="0.0140%" height="15" fill="rgb(249,219,21)" fg:x="3577" fg:w="1"/><text x="50.2011%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.01%)</title><rect x="49.9791%" y="181" width="0.0140%" height="15" fill="rgb(205,209,3)" fg:x="3579" fg:w="1"/><text x="50.2291%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.01%)</title><rect x="49.9791%" y="165" width="0.0140%" height="15" fill="rgb(243,44,1)" fg:x="3579" fg:w="1"/><text x="50.2291%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.01%)</title><rect x="49.9791%" y="149" width="0.0140%" height="15" fill="rgb(206,159,16)" fg:x="3579" fg:w="1"/><text x="50.2291%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.01%)</title><rect x="49.9791%" y="133" width="0.0140%" height="15" fill="rgb(244,77,30)" fg:x="3579" fg:w="1"/><text x="50.2291%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.01%)</title><rect x="49.9791%" y="117" width="0.0140%" height="15" fill="rgb(218,69,12)" fg:x="3579" fg:w="1"/><text x="50.2291%" y="127.50"></text></g><g><title>omelette`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (6 samples, 0.08%)</title><rect x="49.9511%" y="213" width="0.0838%" height="15" fill="rgb(212,87,7)" fg:x="3577" fg:w="6"/><text x="50.2011%" y="223.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (5 samples, 0.07%)</title><rect x="49.9651%" y="197" width="0.0698%" height="15" fill="rgb(245,114,25)" fg:x="3578" fg:w="5"/><text x="50.2151%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.04%)</title><rect x="49.9930%" y="181" width="0.0419%" height="15" fill="rgb(210,61,42)" fg:x="3580" fg:w="3"/><text x="50.2430%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.01%)</title><rect x="50.0209%" y="165" width="0.0140%" height="15" fill="rgb(211,52,33)" fg:x="3582" fg:w="1"/><text x="50.2709%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.01%)</title><rect x="50.0209%" y="149" width="0.0140%" height="15" fill="rgb(234,58,33)" fg:x="3582" fg:w="1"/><text x="50.2709%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.01%)</title><rect x="50.0209%" y="133" width="0.0140%" height="15" fill="rgb(220,115,36)" fg:x="3582" fg:w="1"/><text x="50.2709%" y="143.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::container::vec::_&lt;impl differential_dataflow::trace::implementations::merge_batcher::container::ContainerQueue&lt;alloc::vec::Vec&lt;(D,T,R)&gt;&gt; for alloc::collections::vec_deque::VecDeque&lt;(D,T,R)&gt;&gt;::cmp_heads (133 samples, 1.86%)</title><rect x="50.0349%" y="213" width="1.8573%" height="15" fill="rgb(243,153,54)" fg:x="3583" fg:w="133"/><text x="50.2849%" y="223.50">o..</text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::merge_batcher::container::ContainerMerger&lt;MC,CQ&gt; as differential_dataflow::trace::implementations::merge_batcher::Merger&gt;::merge (793 samples, 11.07%)</title><rect x="40.9300%" y="229" width="11.0739%" height="15" fill="rgb(251,47,18)" fg:x="2931" fg:w="793"/><text x="41.1800%" y="239.50">omelette`&lt;differ..</text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::container::vec::_&lt;impl differential_dataflow::trace::implementations::merge_batcher::container::MergerChunk for alloc::vec::Vec&lt;(D,T,R)&gt;&gt;::push_and_add (8 samples, 0.11%)</title><rect x="51.8922%" y="213" width="0.1117%" height="15" fill="rgb(242,102,42)" fg:x="3716" fg:w="8"/><text x="52.1422%" y="223.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (130 samples, 1.82%)</title><rect x="52.0039%" y="229" width="1.8154%" height="15" fill="rgb(234,31,38)" fg:x="3724" fg:w="130"/><text x="52.2539%" y="239.50">o..</text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::merge_batcher::MergeBatcher&lt;Input,C,M&gt; as differential_dataflow::trace::Batcher&gt;::push_container (1,819 samples, 25.40%)</title><rect x="28.7111%" y="277" width="25.4015%" height="15" fill="rgb(221,117,51)" fg:x="2056" fg:w="1819"/><text x="28.9611%" y="287.50">omelette`&lt;differential_dataflow::trace::i..</text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::MergeBatcher&lt;Input,C,M&gt;::insert_chain (953 samples, 13.31%)</title><rect x="40.8044%" y="261" width="13.3082%" height="15" fill="rgb(212,20,18)" fg:x="2922" fg:w="953"/><text x="41.0544%" y="271.50">omelette`differentia..</text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::MergeBatcher&lt;Input,C,M&gt;::merge_by (951 samples, 13.28%)</title><rect x="40.8323%" y="245" width="13.2803%" height="15" fill="rgb(245,133,36)" fg:x="2924" fg:w="951"/><text x="41.0823%" y="255.50">omelette`differentia..</text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::container::vec::_&lt;impl differential_dataflow::trace::implementations::merge_batcher::container::ContainerQueue&lt;alloc::vec::Vec&lt;(D,T,R)&gt;&gt; for alloc::collections::vec_deque::VecDeque&lt;(D,T,R)&gt;&gt;::cmp_heads (21 samples, 0.29%)</title><rect x="53.8193%" y="229" width="0.2933%" height="15" fill="rgb(212,6,19)" fg:x="3854" fg:w="21"/><text x="54.0693%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_small (4 samples, 0.06%)</title><rect x="54.1265%" y="261" width="0.0559%" height="15" fill="rgb(218,1,36)" fg:x="3876" fg:w="4"/><text x="54.3765%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (3 samples, 0.04%)</title><rect x="54.1405%" y="245" width="0.0419%" height="15" fill="rgb(246,84,54)" fg:x="3877" fg:w="3"/><text x="54.3905%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`madvise (3 samples, 0.04%)</title><rect x="54.1405%" y="229" width="0.0419%" height="15" fill="rgb(242,110,6)" fg:x="3877" fg:w="3"/><text x="54.3905%" y="239.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (10 samples, 0.14%)</title><rect x="54.1824%" y="261" width="0.1396%" height="15" fill="rgb(214,47,5)" fg:x="3880" fg:w="10"/><text x="54.4324%" y="271.50"></text></g><g><title>omelette`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.01%)</title><rect x="55.5369%" y="245" width="0.0140%" height="15" fill="rgb(218,159,25)" fg:x="3977" fg:w="1"/><text x="55.7869%" y="255.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="55.5369%" y="229" width="0.0140%" height="15" fill="rgb(215,211,28)" fg:x="3977" fg:w="1"/><text x="55.7869%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.01%)</title><rect x="55.5369%" y="213" width="0.0140%" height="15" fill="rgb(238,59,32)" fg:x="3977" fg:w="1"/><text x="55.7869%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.01%)</title><rect x="55.5369%" y="197" width="0.0140%" height="15" fill="rgb(226,82,3)" fg:x="3977" fg:w="1"/><text x="55.7869%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="55.5369%" y="181" width="0.0140%" height="15" fill="rgb(240,164,32)" fg:x="3977" fg:w="1"/><text x="55.7869%" y="191.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::merge_batcher::container::ContainerMerger&lt;MC,CQ&gt; as differential_dataflow::trace::implementations::merge_batcher::Merger&gt;::extract (91 samples, 1.27%)</title><rect x="54.3220%" y="261" width="1.2708%" height="15" fill="rgb(232,46,7)" fg:x="3890" fg:w="91"/><text x="54.5720%" y="271.50"></text></g><g><title>omelette`timely::progress::frontier::Antichain&lt;T&gt;::insert_with (3 samples, 0.04%)</title><rect x="55.5509%" y="245" width="0.0419%" height="15" fill="rgb(229,129,53)" fg:x="3978" fg:w="3"/><text x="55.8009%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_free_detach_region (1 samples, 0.01%)</title><rect x="56.4726%" y="229" width="0.0140%" height="15" fill="rgb(234,188,29)" fg:x="4044" fg:w="1"/><text x="56.7226%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.01%)</title><rect x="56.4726%" y="213" width="0.0140%" height="15" fill="rgb(246,141,4)" fg:x="4044" fg:w="1"/><text x="56.7226%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.01%)</title><rect x="56.4865%" y="229" width="0.0140%" height="15" fill="rgb(229,23,39)" fg:x="4045" fg:w="1"/><text x="56.7365%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (4 samples, 0.06%)</title><rect x="56.5005%" y="229" width="0.0559%" height="15" fill="rgb(206,12,3)" fg:x="4046" fg:w="4"/><text x="56.7505%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (4 samples, 0.06%)</title><rect x="56.5005%" y="213" width="0.0559%" height="15" fill="rgb(252,226,20)" fg:x="4046" fg:w="4"/><text x="56.7505%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_small (14 samples, 0.20%)</title><rect x="56.4446%" y="245" width="0.1955%" height="15" fill="rgb(216,123,35)" fg:x="4042" fg:w="14"/><text x="56.6946%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (6 samples, 0.08%)</title><rect x="56.5563%" y="229" width="0.0838%" height="15" fill="rgb(212,68,40)" fg:x="4050" fg:w="6"/><text x="56.8063%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (6 samples, 0.08%)</title><rect x="56.5563%" y="213" width="0.0838%" height="15" fill="rgb(254,125,32)" fg:x="4050" fg:w="6"/><text x="56.8063%" y="223.50"></text></g><g><title>omelette`&lt;alloc::vec::Vec&lt;((K,V),T,R)&gt; as differential_dataflow::trace::implementations::BuilderInput&lt;KBC,VBC&gt;&gt;::key_val_upd_counts (38 samples, 0.53%)</title><rect x="56.6401%" y="245" width="0.5307%" height="15" fill="rgb(253,97,22)" fg:x="4056" fg:w="38"/><text x="56.8901%" y="255.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBuilder&lt;L,CI&gt; as differential_dataflow::trace::Builder&gt;::seal (124 samples, 1.73%)</title><rect x="55.5928%" y="261" width="1.7316%" height="15" fill="rgb(241,101,14)" fg:x="3981" fg:w="124"/><text x="55.8428%" y="271.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (11 samples, 0.15%)</title><rect x="57.1708%" y="245" width="0.1536%" height="15" fill="rgb(238,103,29)" fg:x="4094" fg:w="11"/><text x="57.4208%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_small (4 samples, 0.06%)</title><rect x="57.3384%" y="245" width="0.0559%" height="15" fill="rgb(233,195,47)" fg:x="4106" fg:w="4"/><text x="57.5884%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (3 samples, 0.04%)</title><rect x="57.3523%" y="229" width="0.0419%" height="15" fill="rgb(246,218,30)" fg:x="4107" fg:w="3"/><text x="57.6023%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (3 samples, 0.04%)</title><rect x="57.3523%" y="213" width="0.0419%" height="15" fill="rgb(219,145,47)" fg:x="4107" fg:w="3"/><text x="57.6023%" y="223.50"></text></g><g><title>omelette`&lt;alloc::vec::Vec&lt;((K,V),T,R)&gt; as differential_dataflow::trace::implementations::BuilderInput&lt;KBC,VBC&gt;&gt;::key_val_upd_counts (7 samples, 0.10%)</title><rect x="57.3942%" y="245" width="0.0978%" height="15" fill="rgb(243,12,26)" fg:x="4110" fg:w="7"/><text x="57.6442%" y="255.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (1 samples, 0.01%)</title><rect x="57.5339%" y="229" width="0.0140%" height="15" fill="rgb(214,87,16)" fg:x="4120" fg:w="1"/><text x="57.7839%" y="239.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBuilder&lt;L,CI&gt; as differential_dataflow::trace::Builder&gt;::push (11 samples, 0.15%)</title><rect x="57.4920%" y="245" width="0.1536%" height="15" fill="rgb(208,99,42)" fg:x="4117" fg:w="11"/><text x="57.7420%" y="255.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBuilder&lt;L,CI&gt;::push_update (7 samples, 0.10%)</title><rect x="57.5478%" y="229" width="0.0978%" height="15" fill="rgb(253,99,2)" fg:x="4121" fg:w="7"/><text x="57.7978%" y="239.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.08%)</title><rect x="57.6456%" y="245" width="0.0838%" height="15" fill="rgb(220,168,23)" fg:x="4128" fg:w="6"/><text x="57.8956%" y="255.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::rc_blanket_impls::RcBuilder&lt;B&gt; as differential_dataflow::trace::Builder&gt;::seal (32 samples, 0.45%)</title><rect x="57.3244%" y="261" width="0.4469%" height="15" fill="rgb(242,38,24)" fg:x="4105" fg:w="32"/><text x="57.5744%" y="271.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBuilder&lt;L,CI&gt;::push_update (3 samples, 0.04%)</title><rect x="57.7294%" y="245" width="0.0419%" height="15" fill="rgb(225,182,9)" fg:x="4134" fg:w="3"/><text x="57.9794%" y="255.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.13%)</title><rect x="57.7713%" y="261" width="0.1257%" height="15" fill="rgb(243,178,37)" fg:x="4137" fg:w="9"/><text x="58.0213%" y="271.50"></text></g><g><title>omelette`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="57.8969%" y="261" width="0.0140%" height="15" fill="rgb(232,139,19)" fg:x="4146" fg:w="1"/><text x="58.1469%" y="271.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::MergeBatcher&lt;Input,C,M&gt;::insert_chain (1 samples, 0.01%)</title><rect x="57.9109%" y="261" width="0.0140%" height="15" fill="rgb(225,201,24)" fg:x="4147" fg:w="1"/><text x="58.1609%" y="271.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::MergeBatcher&lt;Input,C,M&gt;::merge_by (1 samples, 0.01%)</title><rect x="57.9109%" y="245" width="0.0140%" height="15" fill="rgb(221,47,46)" fg:x="4147" fg:w="1"/><text x="58.1609%" y="255.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::merge_batcher::container::ContainerMerger&lt;MC,CQ&gt; as differential_dataflow::trace::implementations::merge_batcher::Merger&gt;::merge (1 samples, 0.01%)</title><rect x="57.9109%" y="229" width="0.0140%" height="15" fill="rgb(249,23,13)" fg:x="4147" fg:w="1"/><text x="58.1609%" y="239.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::container::vec::_&lt;impl differential_dataflow::trace::implementations::merge_batcher::container::MergerChunk for alloc::vec::Vec&lt;(D,T,R)&gt;&gt;::push_and_add (1 samples, 0.01%)</title><rect x="57.9109%" y="213" width="0.0140%" height="15" fill="rgb(219,9,5)" fg:x="4147" fg:w="1"/><text x="58.1609%" y="223.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (24 samples, 0.34%)</title><rect x="58.8326%" y="229" width="0.3351%" height="15" fill="rgb(254,171,16)" fg:x="4213" fg:w="24"/><text x="59.0826%" y="239.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::container::vec::_&lt;impl differential_dataflow::trace::implementations::merge_batcher::container::ContainerQueue&lt;alloc::vec::Vec&lt;(D,T,R)&gt;&gt; for alloc::collections::vec_deque::VecDeque&lt;(D,T,R)&gt;&gt;::cmp_heads (12 samples, 0.17%)</title><rect x="59.1677%" y="229" width="0.1676%" height="15" fill="rgb(230,171,20)" fg:x="4237" fg:w="12"/><text x="59.4177%" y="239.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::merge_batcher::container::ContainerMerger&lt;MC,CQ&gt; as differential_dataflow::trace::implementations::merge_batcher::Merger&gt;::merge (102 samples, 1.42%)</title><rect x="57.9249%" y="245" width="1.4244%" height="15" fill="rgb(210,71,41)" fg:x="4148" fg:w="102"/><text x="58.1749%" y="255.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::container::vec::_&lt;impl differential_dataflow::trace::implementations::merge_batcher::container::MergerChunk for alloc::vec::Vec&lt;(D,T,R)&gt;&gt;::push_and_add (1 samples, 0.01%)</title><rect x="59.3353%" y="229" width="0.0140%" height="15" fill="rgb(206,173,20)" fg:x="4249" fg:w="1"/><text x="59.5853%" y="239.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (8 samples, 0.11%)</title><rect x="59.3493%" y="245" width="0.1117%" height="15" fill="rgb(233,88,34)" fg:x="4250" fg:w="8"/><text x="59.5993%" y="255.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::MergeBatcher&lt;Input,C,M&gt;::merge_by (112 samples, 1.56%)</title><rect x="57.9249%" y="261" width="1.5640%" height="15" fill="rgb(223,209,46)" fg:x="4148" fg:w="112"/><text x="58.1749%" y="271.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::container::vec::_&lt;impl differential_dataflow::trace::implementations::merge_batcher::container::ContainerQueue&lt;alloc::vec::Vec&lt;(D,T,R)&gt;&gt; for alloc::collections::vec_deque::VecDeque&lt;(D,T,R)&gt;&gt;::cmp_heads (2 samples, 0.03%)</title><rect x="59.4610%" y="245" width="0.0279%" height="15" fill="rgb(250,43,18)" fg:x="4258" fg:w="2"/><text x="59.7110%" y="255.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::merge_batcher::MergeBatcher&lt;Input,C,M&gt; as differential_dataflow::trace::Batcher&gt;::seal (386 samples, 5.39%)</title><rect x="54.1126%" y="277" width="5.3903%" height="15" fill="rgb(208,13,10)" fg:x="3875" fg:w="386"/><text x="54.3626%" y="287.50">omelett..</text></g><g><title>omelette`timely::progress::frontier::Antichain&lt;T&gt;::insert_with (1 samples, 0.01%)</title><rect x="59.4889%" y="261" width="0.0140%" height="15" fill="rgb(212,200,36)" fg:x="4260" fg:w="1"/><text x="59.7389%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (4 samples, 0.06%)</title><rect x="59.6425%" y="197" width="0.0559%" height="15" fill="rgb(225,90,30)" fg:x="4271" fg:w="4"/><text x="59.8925%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (4 samples, 0.06%)</title><rect x="59.6425%" y="181" width="0.0559%" height="15" fill="rgb(236,182,39)" fg:x="4271" fg:w="4"/><text x="59.8925%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (4 samples, 0.06%)</title><rect x="59.6425%" y="165" width="0.0559%" height="15" fill="rgb(212,144,35)" fg:x="4271" fg:w="4"/><text x="59.8925%" y="175.50"></text></g><g><title>omelette`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.08%)</title><rect x="59.6425%" y="261" width="0.0838%" height="15" fill="rgb(228,63,44)" fg:x="4271" fg:w="6"/><text x="59.8925%" y="271.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (6 samples, 0.08%)</title><rect x="59.6425%" y="245" width="0.0838%" height="15" fill="rgb(228,109,6)" fg:x="4271" fg:w="6"/><text x="59.8925%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (6 samples, 0.08%)</title><rect x="59.6425%" y="229" width="0.0838%" height="15" fill="rgb(238,117,24)" fg:x="4271" fg:w="6"/><text x="59.8925%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (6 samples, 0.08%)</title><rect x="59.6425%" y="213" width="0.0838%" height="15" fill="rgb(242,26,26)" fg:x="4271" fg:w="6"/><text x="59.8925%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.03%)</title><rect x="59.6984%" y="197" width="0.0279%" height="15" fill="rgb(221,92,48)" fg:x="4275" fg:w="2"/><text x="59.9484%" y="207.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBuilder&lt;L,CI&gt; as differential_dataflow::trace::Builder&gt;::push (18 samples, 0.25%)</title><rect x="59.5029%" y="277" width="0.2514%" height="15" fill="rgb(209,209,32)" fg:x="4261" fg:w="18"/><text x="59.7529%" y="287.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBuilder&lt;L,CI&gt;::push_update (2 samples, 0.03%)</title><rect x="59.7263%" y="261" width="0.0279%" height="15" fill="rgb(221,70,22)" fg:x="4277" fg:w="2"/><text x="59.9763%" y="271.50"></text></g><g><title>omelette`&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.11%)</title><rect x="59.9218%" y="245" width="0.1117%" height="15" fill="rgb(248,145,5)" fg:x="4291" fg:w="8"/><text x="60.1718%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.01%)</title><rect x="60.0335%" y="197" width="0.0140%" height="15" fill="rgb(226,116,26)" fg:x="4299" fg:w="1"/><text x="60.2835%" y="207.50"></text></g><g><title>omelette`&lt;[T] as alloc::slice::SpecCloneIntoVec&lt;T,A&gt;&gt;::clone_into (11 samples, 0.15%)</title><rect x="59.9078%" y="261" width="0.1536%" height="15" fill="rgb(244,5,17)" fg:x="4290" fg:w="11"/><text x="60.1578%" y="271.50"></text></g><g><title>omelette`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2 samples, 0.03%)</title><rect x="60.0335%" y="245" width="0.0279%" height="15" fill="rgb(252,159,33)" fg:x="4299" fg:w="2"/><text x="60.2835%" y="255.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="60.0335%" y="229" width="0.0279%" height="15" fill="rgb(206,71,0)" fg:x="4299" fg:w="2"/><text x="60.2835%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.03%)</title><rect x="60.0335%" y="213" width="0.0279%" height="15" fill="rgb(233,118,54)" fg:x="4299" fg:w="2"/><text x="60.2835%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.01%)</title><rect x="60.0475%" y="197" width="0.0140%" height="15" fill="rgb(234,83,48)" fg:x="4300" fg:w="1"/><text x="60.2975%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.01%)</title><rect x="60.0475%" y="181" width="0.0140%" height="15" fill="rgb(228,3,54)" fg:x="4300" fg:w="1"/><text x="60.2975%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.01%)</title><rect x="60.0475%" y="165" width="0.0140%" height="15" fill="rgb(226,155,13)" fg:x="4300" fg:w="1"/><text x="60.2975%" y="175.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyCursor&lt;L&gt; as differential_dataflow::trace::cursor::Cursor&gt;::map_times (23 samples, 0.32%)</title><rect x="59.7542%" y="277" width="0.3212%" height="15" fill="rgb(241,28,37)" fg:x="4279" fg:w="23"/><text x="60.0042%" y="287.50"></text></g><g><title>omelette`&lt;alloc::vec::Vec&lt;T&gt; as timely_container::SizableContainer&gt;::ensure_capacity (1 samples, 0.01%)</title><rect x="60.0614%" y="261" width="0.0140%" height="15" fill="rgb(233,93,10)" fg:x="4301" fg:w="1"/><text x="60.3114%" y="271.50"></text></g><g><title>omelette`&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.08%)</title><rect x="60.3966%" y="245" width="0.0838%" height="15" fill="rgb(225,113,19)" fg:x="4325" fg:w="6"/><text x="60.6466%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_free_detach_region (1 samples, 0.01%)</title><rect x="60.4804%" y="181" width="0.0140%" height="15" fill="rgb(241,2,18)" fg:x="4331" fg:w="1"/><text x="60.7304%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.01%)</title><rect x="60.4804%" y="165" width="0.0140%" height="15" fill="rgb(228,207,21)" fg:x="4331" fg:w="1"/><text x="60.7304%" y="175.50"></text></g><g><title>omelette`&lt;[T] as alloc::slice::SpecCloneIntoVec&lt;T,A&gt;&gt;::clone_into (9 samples, 0.13%)</title><rect x="60.3966%" y="261" width="0.1257%" height="15" fill="rgb(213,211,35)" fg:x="4325" fg:w="9"/><text x="60.6466%" y="271.50"></text></g><g><title>omelette`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (3 samples, 0.04%)</title><rect x="60.4804%" y="245" width="0.0419%" height="15" fill="rgb(209,83,10)" fg:x="4331" fg:w="3"/><text x="60.7304%" y="255.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="60.4804%" y="229" width="0.0419%" height="15" fill="rgb(209,164,1)" fg:x="4331" fg:w="3"/><text x="60.7304%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.04%)</title><rect x="60.4804%" y="213" width="0.0419%" height="15" fill="rgb(213,184,43)" fg:x="4331" fg:w="3"/><text x="60.7304%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (3 samples, 0.04%)</title><rect x="60.4804%" y="197" width="0.0419%" height="15" fill="rgb(231,61,34)" fg:x="4331" fg:w="3"/><text x="60.7304%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (2 samples, 0.03%)</title><rect x="60.4943%" y="181" width="0.0279%" height="15" fill="rgb(235,75,3)" fg:x="4332" fg:w="2"/><text x="60.7443%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (2 samples, 0.03%)</title><rect x="60.4943%" y="165" width="0.0279%" height="15" fill="rgb(220,106,47)" fg:x="4332" fg:w="2"/><text x="60.7443%" y="175.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValCursor&lt;L&gt; as differential_dataflow::trace::cursor::Cursor&gt;::map_times (36 samples, 0.50%)</title><rect x="60.0754%" y="277" width="0.5027%" height="15" fill="rgb(210,196,33)" fg:x="4302" fg:w="36"/><text x="60.3254%" y="287.50"></text></g><g><title>omelette`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (4 samples, 0.06%)</title><rect x="60.5223%" y="261" width="0.0559%" height="15" fill="rgb(229,154,42)" fg:x="4334" fg:w="4"/><text x="60.7723%" y="271.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="60.5362%" y="245" width="0.0419%" height="15" fill="rgb(228,114,26)" fg:x="4335" fg:w="3"/><text x="60.7862%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.04%)</title><rect x="60.5362%" y="229" width="0.0419%" height="15" fill="rgb(208,144,1)" fg:x="4335" fg:w="3"/><text x="60.7862%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (3 samples, 0.04%)</title><rect x="60.5362%" y="213" width="0.0419%" height="15" fill="rgb(239,112,37)" fg:x="4335" fg:w="3"/><text x="60.7862%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (3 samples, 0.04%)</title><rect x="60.5362%" y="197" width="0.0419%" height="15" fill="rgb(210,96,50)" fg:x="4335" fg:w="3"/><text x="60.7862%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (3 samples, 0.04%)</title><rect x="60.5362%" y="181" width="0.0419%" height="15" fill="rgb(222,178,2)" fg:x="4335" fg:w="3"/><text x="60.7862%" y="191.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::rc_blanket_impls::RcBuilder&lt;B&gt; as differential_dataflow::trace::Builder&gt;::push (2 samples, 0.03%)</title><rect x="60.5781%" y="277" width="0.0279%" height="15" fill="rgb(226,74,18)" fg:x="4338" fg:w="2"/><text x="60.8281%" y="287.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (5 samples, 0.07%)</title><rect x="60.6061%" y="277" width="0.0698%" height="15" fill="rgb(225,67,54)" fg:x="4340" fg:w="5"/><text x="60.8561%" y="287.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (16 samples, 0.22%)</title><rect x="60.6759%" y="277" width="0.2234%" height="15" fill="rgb(251,92,32)" fg:x="4345" fg:w="16"/><text x="60.9259%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_free_detach_region (1 samples, 0.01%)</title><rect x="60.9412%" y="245" width="0.0140%" height="15" fill="rgb(228,149,22)" fg:x="4364" fg:w="1"/><text x="61.1912%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (2 samples, 0.03%)</title><rect x="60.9552%" y="245" width="0.0279%" height="15" fill="rgb(243,54,13)" fg:x="4365" fg:w="2"/><text x="61.2052%" y="255.50"></text></g><g><title>omelette`&lt;timely_communication::allocator::counters::Puller&lt;T,P&gt; as timely_communication::Pull&lt;T&gt;&gt;::pull (11 samples, 0.15%)</title><rect x="60.8993%" y="277" width="0.1536%" height="15" fill="rgb(243,180,28)" fg:x="4361" fg:w="11"/><text x="61.1493%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_small (11 samples, 0.15%)</title><rect x="60.8993%" y="261" width="0.1536%" height="15" fill="rgb(208,167,24)" fg:x="4361" fg:w="11"/><text x="61.1493%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (5 samples, 0.07%)</title><rect x="60.9831%" y="245" width="0.0698%" height="15" fill="rgb(245,73,45)" fg:x="4367" fg:w="5"/><text x="61.2331%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`madvise (5 samples, 0.07%)</title><rect x="60.9831%" y="229" width="0.0698%" height="15" fill="rgb(237,203,48)" fg:x="4367" fg:w="5"/><text x="61.2331%" y="239.50"></text></g><g><title>omelette`&lt;timely_communication::allocator::counters::Pusher&lt;T,P&gt; as timely_communication::Push&lt;T&gt;&gt;::push (1 samples, 0.01%)</title><rect x="61.0529%" y="277" width="0.0140%" height="15" fill="rgb(211,197,16)" fg:x="4372" fg:w="1"/><text x="61.3029%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.01%)</title><rect x="61.0669%" y="213" width="0.0140%" height="15" fill="rgb(243,99,51)" fg:x="4373" fg:w="1"/><text x="61.3169%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (1 samples, 0.01%)</title><rect x="61.0669%" y="197" width="0.0140%" height="15" fill="rgb(215,123,29)" fg:x="4373" fg:w="1"/><text x="61.3169%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1 samples, 0.01%)</title><rect x="61.0669%" y="181" width="0.0140%" height="15" fill="rgb(239,186,37)" fg:x="4373" fg:w="1"/><text x="61.3169%" y="191.50"></text></g><g><title>omelette`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.03%)</title><rect x="61.0669%" y="277" width="0.0279%" height="15" fill="rgb(252,136,39)" fg:x="4373" fg:w="2"/><text x="61.3169%" y="287.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="61.0669%" y="261" width="0.0279%" height="15" fill="rgb(223,213,32)" fg:x="4373" fg:w="2"/><text x="61.3169%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.03%)</title><rect x="61.0669%" y="245" width="0.0279%" height="15" fill="rgb(233,115,5)" fg:x="4373" fg:w="2"/><text x="61.3169%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.03%)</title><rect x="61.0669%" y="229" width="0.0279%" height="15" fill="rgb(207,226,44)" fg:x="4373" fg:w="2"/><text x="61.3169%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="61.0809%" y="213" width="0.0140%" height="15" fill="rgb(208,126,0)" fg:x="4374" fg:w="1"/><text x="61.3309%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (1 samples, 0.01%)</title><rect x="61.1507%" y="229" width="0.0140%" height="15" fill="rgb(244,66,21)" fg:x="4379" fg:w="1"/><text x="61.4007%" y="239.50"></text></g><g><title>omelette`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (12 samples, 0.17%)</title><rect x="61.0948%" y="277" width="0.1676%" height="15" fill="rgb(222,97,12)" fg:x="4375" fg:w="12"/><text x="61.3448%" y="287.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (10 samples, 0.14%)</title><rect x="61.1227%" y="261" width="0.1396%" height="15" fill="rgb(219,213,19)" fg:x="4377" fg:w="10"/><text x="61.3727%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.11%)</title><rect x="61.1507%" y="245" width="0.1117%" height="15" fill="rgb(252,169,30)" fg:x="4379" fg:w="8"/><text x="61.4007%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (7 samples, 0.10%)</title><rect x="61.1646%" y="229" width="0.0978%" height="15" fill="rgb(206,32,51)" fg:x="4380" fg:w="7"/><text x="61.4146%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (6 samples, 0.08%)</title><rect x="61.1786%" y="213" width="0.0838%" height="15" fill="rgb(250,172,42)" fg:x="4381" fg:w="6"/><text x="61.4286%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (6 samples, 0.08%)</title><rect x="61.1786%" y="197" width="0.0838%" height="15" fill="rgb(209,34,43)" fg:x="4381" fg:w="6"/><text x="61.4286%" y="207.50"></text></g><g><title>omelette`core::iter::traits::iterator::Iterator::partition (3 samples, 0.04%)</title><rect x="61.2624%" y="277" width="0.0419%" height="15" fill="rgb(223,11,35)" fg:x="4387" fg:w="3"/><text x="61.5124%" y="287.50"></text></g><g><title>omelette`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.01%)</title><rect x="61.2903%" y="261" width="0.0140%" height="15" fill="rgb(251,219,26)" fg:x="4389" fg:w="1"/><text x="61.5403%" y="271.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="61.2903%" y="245" width="0.0140%" height="15" fill="rgb(231,119,3)" fg:x="4389" fg:w="1"/><text x="61.5403%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.01%)</title><rect x="61.2903%" y="229" width="0.0140%" height="15" fill="rgb(216,97,11)" fg:x="4389" fg:w="1"/><text x="61.5403%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.01%)</title><rect x="61.2903%" y="213" width="0.0140%" height="15" fill="rgb(223,59,9)" fg:x="4389" fg:w="1"/><text x="61.5403%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.01%)</title><rect x="61.2903%" y="197" width="0.0140%" height="15" fill="rgb(233,93,31)" fg:x="4389" fg:w="1"/><text x="61.5403%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (1 samples, 0.01%)</title><rect x="61.2903%" y="181" width="0.0140%" height="15" fill="rgb(239,81,33)" fg:x="4389" fg:w="1"/><text x="61.5403%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1 samples, 0.01%)</title><rect x="61.2903%" y="165" width="0.0140%" height="15" fill="rgb(213,120,34)" fg:x="4389" fg:w="1"/><text x="61.5403%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="61.3183%" y="197" width="0.0140%" height="15" fill="rgb(243,49,53)" fg:x="4391" fg:w="1"/><text x="61.5683%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="61.3183%" y="181" width="0.0140%" height="15" fill="rgb(247,216,33)" fg:x="4391" fg:w="1"/><text x="61.5683%" y="191.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;core::option::Option&lt;differential_dataflow::operators::arrange::agent::TraceAgent&lt;differential_dataflow::trace::implementations::spine_fueled::Spine&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Class,(omelette::Node,usize)),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="61.3043%" y="277" width="0.0419%" height="15" fill="rgb(226,26,14)" fg:x="4390" fg:w="3"/><text x="61.5543%" y="287.50"></text></g><g><title>omelette`&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="61.3043%" y="261" width="0.0419%" height="15" fill="rgb(215,49,53)" fg:x="4390" fg:w="3"/><text x="61.5543%" y="271.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::spine_fueled::Spine&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Class,(omelette::Node,usize)),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="61.3043%" y="245" width="0.0419%" height="15" fill="rgb(245,162,40)" fg:x="4390" fg:w="3"/><text x="61.5543%" y="255.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::spine_fueled::MergeState&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Class,(omelette::Node,usize)),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="61.3043%" y="229" width="0.0419%" height="15" fill="rgb(229,68,17)" fg:x="4390" fg:w="3"/><text x="61.5543%" y="239.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Class,(omelette::Node,usize)),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="61.3043%" y="213" width="0.0419%" height="15" fill="rgb(213,182,10)" fg:x="4390" fg:w="3"/><text x="61.5543%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="61.3322%" y="197" width="0.0140%" height="15" fill="rgb(245,125,30)" fg:x="4392" fg:w="1"/><text x="61.5822%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="61.3322%" y="181" width="0.0140%" height="15" fill="rgb(232,202,2)" fg:x="4392" fg:w="1"/><text x="61.5822%" y="191.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;core::option::Option&lt;differential_dataflow::operators::arrange::agent::TraceAgent&lt;differential_dataflow::trace::implementations::spine_fueled::Spine&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Class,omelette::Node),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="61.3462%" y="277" width="0.0279%" height="15" fill="rgb(237,140,51)" fg:x="4393" fg:w="2"/><text x="61.5962%" y="287.50"></text></g><g><title>omelette`&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="61.3462%" y="261" width="0.0279%" height="15" fill="rgb(236,157,25)" fg:x="4393" fg:w="2"/><text x="61.5962%" y="271.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::spine_fueled::Spine&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Class,omelette::Node),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="61.3462%" y="245" width="0.0279%" height="15" fill="rgb(219,209,0)" fg:x="4393" fg:w="2"/><text x="61.5962%" y="255.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::spine_fueled::MergeState&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Class,omelette::Node),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="61.3462%" y="229" width="0.0279%" height="15" fill="rgb(240,116,54)" fg:x="4393" fg:w="2"/><text x="61.5962%" y="239.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Class,omelette::Node),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="61.3462%" y="213" width="0.0279%" height="15" fill="rgb(216,10,36)" fg:x="4393" fg:w="2"/><text x="61.5962%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="61.3601%" y="197" width="0.0140%" height="15" fill="rgb(222,72,44)" fg:x="4394" fg:w="1"/><text x="61.6101%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`medium_free_scan_madvise_free (1 samples, 0.01%)</title><rect x="61.3601%" y="181" width="0.0140%" height="15" fill="rgb(232,159,9)" fg:x="4394" fg:w="1"/><text x="61.6101%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="61.3601%" y="165" width="0.0140%" height="15" fill="rgb(210,39,32)" fg:x="4394" fg:w="1"/><text x="61.6101%" y="175.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;timely::dataflow::operators::capability::InputCapability&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="61.3741%" y="277" width="0.0279%" height="15" fill="rgb(216,194,45)" fg:x="4395" fg:w="2"/><text x="61.6241%" y="287.50"></text></g><g><title>omelette`&lt;timely::dataflow::channels::pullers::counter::ConsumedGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="61.3741%" y="261" width="0.0279%" height="15" fill="rgb(218,18,35)" fg:x="4395" fg:w="2"/><text x="61.6241%" y="271.50"></text></g><g><title>omelette`timely::progress::change_batch::ChangeBatch&lt;T,_&gt;::compact (2 samples, 0.03%)</title><rect x="61.3741%" y="245" width="0.0279%" height="15" fill="rgb(207,83,51)" fg:x="4395" fg:w="2"/><text x="61.6241%" y="255.50"></text></g><g><title>omelette`smallvec::SmallVec&lt;A&gt;::retain (1 samples, 0.01%)</title><rect x="61.3881%" y="229" width="0.0140%" height="15" fill="rgb(225,63,43)" fg:x="4396" fg:w="1"/><text x="61.6381%" y="239.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (7 samples, 0.10%)</title><rect x="61.4020%" y="277" width="0.0978%" height="15" fill="rgb(207,57,36)" fg:x="4397" fg:w="7"/><text x="61.6520%" y="287.50"></text></g><g><title>omelette`differential_dataflow::operators::HistoryReplay&lt;C&gt;::step_while_time_is (6 samples, 0.08%)</title><rect x="61.4998%" y="277" width="0.0838%" height="15" fill="rgb(216,99,33)" fg:x="4404" fg:w="6"/><text x="61.7498%" y="287.50"></text></g><g><title>omelette`differential_dataflow::operators::ValueHistory&lt;C&gt;::replay_key (3 samples, 0.04%)</title><rect x="61.5836%" y="277" width="0.0419%" height="15" fill="rgb(225,42,16)" fg:x="4410" fg:w="3"/><text x="61.8336%" y="287.50"></text></g><g><title>omelette`differential_dataflow::operators::arrange::arrangement::Arranged&lt;G,T1&gt;::join_core_internal_unsafe::_{{closure}} (7 samples, 0.10%)</title><rect x="61.6255%" y="277" width="0.0978%" height="15" fill="rgb(220,201,45)" fg:x="4413" fg:w="7"/><text x="61.8755%" y="287.50"></text></g><g><title>omelette`differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt;::minimize_vals (1 samples, 0.01%)</title><rect x="62.5611%" y="245" width="0.0140%" height="15" fill="rgb(225,33,4)" fg:x="4480" fg:w="1"/><text x="62.8111%" y="255.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt; as differential_dataflow::trace::cursor::Cursor&gt;::seek_key (2 samples, 0.03%)</title><rect x="62.5611%" y="261" width="0.0279%" height="15" fill="rgb(224,33,50)" fg:x="4480" fg:w="2"/><text x="62.8111%" y="271.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::containers::BatchContainer::advance (1 samples, 0.01%)</title><rect x="62.5751%" y="245" width="0.0140%" height="15" fill="rgb(246,198,51)" fg:x="4481" fg:w="1"/><text x="62.8251%" y="255.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (9 samples, 0.13%)</title><rect x="62.5890%" y="261" width="0.1257%" height="15" fill="rgb(205,22,4)" fg:x="4482" fg:w="9"/><text x="62.8390%" y="271.50"></text></g><g><title>omelette`&lt;i64 as differential_dataflow::difference::Multiply&gt;::multiply (5 samples, 0.07%)</title><rect x="62.7147%" y="261" width="0.0698%" height="15" fill="rgb(206,3,8)" fg:x="4491" fg:w="5"/><text x="62.9647%" y="271.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.03%)</title><rect x="62.7845%" y="261" width="0.0279%" height="15" fill="rgb(251,23,15)" fg:x="4496" fg:w="2"/><text x="63.0345%" y="271.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.01%)</title><rect x="62.8125%" y="261" width="0.0140%" height="15" fill="rgb(252,88,28)" fg:x="4498" fg:w="1"/><text x="63.0625%" y="271.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insertion_sort_shift_left (2 samples, 0.03%)</title><rect x="62.8264%" y="261" width="0.0279%" height="15" fill="rgb(212,127,14)" fg:x="4499" fg:w="2"/><text x="63.0764%" y="271.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (6 samples, 0.08%)</title><rect x="62.8543%" y="261" width="0.0838%" height="15" fill="rgb(247,145,37)" fg:x="4501" fg:w="6"/><text x="63.1043%" y="271.50"></text></g><g><title>omelette`&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 0.24%)</title><rect x="63.2593%" y="245" width="0.2374%" height="15" fill="rgb(209,117,53)" fg:x="4530" fg:w="17"/><text x="63.5093%" y="255.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.10%)</title><rect x="63.4967%" y="245" width="0.0978%" height="15" fill="rgb(212,90,42)" fg:x="4547" fg:w="7"/><text x="63.7467%" y="255.50"></text></g><g><title>omelette`&lt;timely::dataflow::channels::pact::LogPusher&lt;T,C,P&gt; as timely_communication::Push&lt;timely::dataflow::channels::Message&lt;T,C&gt;&gt;&gt;::push (2 samples, 0.03%)</title><rect x="63.5945%" y="245" width="0.0279%" height="15" fill="rgb(218,164,37)" fg:x="4554" fg:w="2"/><text x="63.8445%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.04%)</title><rect x="63.6922%" y="229" width="0.0419%" height="15" fill="rgb(246,65,34)" fg:x="4561" fg:w="3"/><text x="63.9422%" y="239.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (9 samples, 0.13%)</title><rect x="63.7341%" y="229" width="0.1257%" height="15" fill="rgb(231,100,33)" fg:x="4564" fg:w="9"/><text x="63.9841%" y="239.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.11%)</title><rect x="63.8598%" y="229" width="0.1117%" height="15" fill="rgb(228,126,14)" fg:x="4573" fg:w="8"/><text x="64.1098%" y="239.50"></text></g><g><title>omelette`DYLD-STUB$$memmove (1 samples, 0.01%)</title><rect x="63.9715%" y="229" width="0.0140%" height="15" fill="rgb(215,173,21)" fg:x="4581" fg:w="1"/><text x="64.2215%" y="239.50"></text></g><g><title>omelette`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (4 samples, 0.06%)</title><rect x="63.9855%" y="229" width="0.0559%" height="15" fill="rgb(210,6,40)" fg:x="4582" fg:w="4"/><text x="64.2355%" y="239.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (4 samples, 0.06%)</title><rect x="63.9855%" y="213" width="0.0559%" height="15" fill="rgb(212,48,18)" fg:x="4582" fg:w="4"/><text x="64.2355%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.06%)</title><rect x="63.9855%" y="197" width="0.0559%" height="15" fill="rgb(230,214,11)" fg:x="4582" fg:w="4"/><text x="64.2355%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (4 samples, 0.06%)</title><rect x="63.9855%" y="181" width="0.0559%" height="15" fill="rgb(254,105,39)" fg:x="4582" fg:w="4"/><text x="64.2355%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (3 samples, 0.04%)</title><rect x="63.9994%" y="165" width="0.0419%" height="15" fill="rgb(245,158,5)" fg:x="4583" fg:w="3"/><text x="64.2494%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (3 samples, 0.04%)</title><rect x="63.9994%" y="149" width="0.0419%" height="15" fill="rgb(249,208,11)" fg:x="4583" fg:w="3"/><text x="64.2494%" y="159.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (9 samples, 0.13%)</title><rect x="64.0832%" y="213" width="0.1257%" height="15" fill="rgb(210,39,28)" fg:x="4589" fg:w="9"/><text x="64.3332%" y="223.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="64.3067%" y="197" width="0.0140%" height="15" fill="rgb(211,56,53)" fg:x="4605" fg:w="1"/><text x="64.5567%" y="207.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (9 samples, 0.13%)</title><rect x="64.2089%" y="213" width="0.1257%" height="15" fill="rgb(226,201,30)" fg:x="4598" fg:w="9"/><text x="64.4589%" y="223.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::sort4_stable (1 samples, 0.01%)</title><rect x="64.3206%" y="197" width="0.0140%" height="15" fill="rgb(239,101,34)" fg:x="4606" fg:w="1"/><text x="64.5706%" y="207.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (7 samples, 0.10%)</title><rect x="64.3765%" y="197" width="0.0978%" height="15" fill="rgb(226,209,5)" fg:x="4610" fg:w="7"/><text x="64.6265%" y="207.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::choose_pivot (1 samples, 0.01%)</title><rect x="64.4742%" y="197" width="0.0140%" height="15" fill="rgb(250,105,47)" fg:x="4617" fg:w="1"/><text x="64.7242%" y="207.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::median3_rec (1 samples, 0.01%)</title><rect x="64.4742%" y="181" width="0.0140%" height="15" fill="rgb(230,72,3)" fg:x="4617" fg:w="1"/><text x="64.7242%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::median3_rec (1 samples, 0.01%)</title><rect x="64.4742%" y="165" width="0.0140%" height="15" fill="rgb(232,218,39)" fg:x="4617" fg:w="1"/><text x="64.7242%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (12 samples, 0.17%)</title><rect x="64.4882%" y="197" width="0.1676%" height="15" fill="rgb(248,166,6)" fg:x="4618" fg:w="12"/><text x="64.7382%" y="207.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (4 samples, 0.06%)</title><rect x="64.5999%" y="181" width="0.0559%" height="15" fill="rgb(247,89,20)" fg:x="4626" fg:w="4"/><text x="64.8499%" y="191.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (3 samples, 0.04%)</title><rect x="64.6697%" y="181" width="0.0419%" height="15" fill="rgb(248,130,54)" fg:x="4631" fg:w="3"/><text x="64.9197%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (4 samples, 0.06%)</title><rect x="64.7116%" y="181" width="0.0559%" height="15" fill="rgb(234,196,4)" fg:x="4634" fg:w="4"/><text x="64.9616%" y="191.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (2 samples, 0.03%)</title><rect x="64.7396%" y="165" width="0.0279%" height="15" fill="rgb(250,143,31)" fg:x="4636" fg:w="2"/><text x="64.9896%" y="175.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (53 samples, 0.74%)</title><rect x="64.0413%" y="229" width="0.7401%" height="15" fill="rgb(211,110,34)" fg:x="4586" fg:w="53"/><text x="64.2913%" y="239.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (32 samples, 0.45%)</title><rect x="64.3346%" y="213" width="0.4469%" height="15" fill="rgb(215,124,48)" fg:x="4607" fg:w="32"/><text x="64.5846%" y="223.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (9 samples, 0.13%)</title><rect x="64.6558%" y="197" width="0.1257%" height="15" fill="rgb(216,46,13)" fg:x="4630" fg:w="9"/><text x="64.9058%" y="207.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (1 samples, 0.01%)</title><rect x="64.7675%" y="181" width="0.0140%" height="15" fill="rgb(205,184,25)" fg:x="4638" fg:w="1"/><text x="65.0175%" y="191.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="64.7675%" y="165" width="0.0140%" height="15" fill="rgb(228,1,10)" fg:x="4638" fg:w="1"/><text x="65.0175%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.11%)</title><rect x="64.9630%" y="213" width="0.1117%" height="15" fill="rgb(213,116,27)" fg:x="4652" fg:w="8"/><text x="65.2130%" y="223.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (8 samples, 0.11%)</title><rect x="65.0747%" y="213" width="0.1117%" height="15" fill="rgb(241,95,50)" fg:x="4660" fg:w="8"/><text x="65.3247%" y="223.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="65.1864%" y="197" width="0.0140%" height="15" fill="rgb(238,48,32)" fg:x="4668" fg:w="1"/><text x="65.4364%" y="207.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (4 samples, 0.06%)</title><rect x="65.2004%" y="197" width="0.0559%" height="15" fill="rgb(235,113,49)" fg:x="4669" fg:w="4"/><text x="65.4504%" y="207.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (6 samples, 0.08%)</title><rect x="65.1864%" y="213" width="0.0838%" height="15" fill="rgb(205,127,43)" fg:x="4668" fg:w="6"/><text x="65.4364%" y="223.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::sort4_stable (1 samples, 0.01%)</title><rect x="65.2562%" y="197" width="0.0140%" height="15" fill="rgb(250,162,2)" fg:x="4673" fg:w="1"/><text x="65.5062%" y="207.50"></text></g><g><title>omelette`core::slice::sort::unstable::ipnsort (4 samples, 0.06%)</title><rect x="65.2702%" y="213" width="0.0559%" height="15" fill="rgb(220,13,41)" fg:x="4674" fg:w="4"/><text x="65.5202%" y="223.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (9 samples, 0.13%)</title><rect x="65.3819%" y="197" width="0.1257%" height="15" fill="rgb(249,221,25)" fg:x="4682" fg:w="9"/><text x="65.6319%" y="207.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (2 samples, 0.03%)</title><rect x="65.5076%" y="197" width="0.0279%" height="15" fill="rgb(215,208,19)" fg:x="4691" fg:w="2"/><text x="65.7576%" y="207.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (4 samples, 0.06%)</title><rect x="65.5774%" y="181" width="0.0559%" height="15" fill="rgb(236,175,2)" fg:x="4696" fg:w="4"/><text x="65.8274%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (9 samples, 0.13%)</title><rect x="65.5355%" y="197" width="0.1257%" height="15" fill="rgb(241,52,2)" fg:x="4693" fg:w="9"/><text x="65.7855%" y="207.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (2 samples, 0.03%)</title><rect x="65.6333%" y="181" width="0.0279%" height="15" fill="rgb(248,140,14)" fg:x="4700" fg:w="2"/><text x="65.8833%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="65.7450%" y="181" width="0.0140%" height="15" fill="rgb(253,22,42)" fg:x="4708" fg:w="1"/><text x="65.9950%" y="191.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (8 samples, 0.11%)</title><rect x="65.7590%" y="181" width="0.1117%" height="15" fill="rgb(234,61,47)" fg:x="4709" fg:w="8"/><text x="66.0090%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::choose_pivot (1 samples, 0.01%)</title><rect x="65.8707%" y="181" width="0.0140%" height="15" fill="rgb(208,226,15)" fg:x="4717" fg:w="1"/><text x="66.1207%" y="191.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="65.8707%" y="165" width="0.0140%" height="15" fill="rgb(217,221,4)" fg:x="4717" fg:w="1"/><text x="66.1207%" y="175.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (5 samples, 0.07%)</title><rect x="65.9126%" y="165" width="0.0698%" height="15" fill="rgb(212,174,34)" fg:x="4720" fg:w="5"/><text x="66.1626%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (11 samples, 0.15%)</title><rect x="65.8847%" y="181" width="0.1536%" height="15" fill="rgb(253,83,4)" fg:x="4718" fg:w="11"/><text x="66.1347%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (4 samples, 0.06%)</title><rect x="65.9824%" y="165" width="0.0559%" height="15" fill="rgb(250,195,49)" fg:x="4725" fg:w="4"/><text x="66.2324%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="66.0522%" y="165" width="0.0140%" height="15" fill="rgb(241,192,25)" fg:x="4730" fg:w="1"/><text x="66.3022%" y="175.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (3 samples, 0.04%)</title><rect x="66.0662%" y="165" width="0.0419%" height="15" fill="rgb(208,124,10)" fg:x="4731" fg:w="3"/><text x="66.3162%" y="175.50"></text></g><g><title>omelette`DYLD-STUB$$memmove (1 samples, 0.01%)</title><rect x="66.1081%" y="165" width="0.0140%" height="15" fill="rgb(222,33,0)" fg:x="4734" fg:w="1"/><text x="66.3581%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::choose_pivot (1 samples, 0.01%)</title><rect x="66.1220%" y="165" width="0.0140%" height="15" fill="rgb(234,209,28)" fg:x="4735" fg:w="1"/><text x="66.3720%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::median3_rec (1 samples, 0.01%)</title><rect x="66.1220%" y="149" width="0.0140%" height="15" fill="rgb(224,11,23)" fg:x="4735" fg:w="1"/><text x="66.3720%" y="159.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="66.1220%" y="133" width="0.0140%" height="15" fill="rgb(232,99,1)" fg:x="4735" fg:w="1"/><text x="66.3720%" y="143.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (3 samples, 0.04%)</title><rect x="66.1360%" y="165" width="0.0419%" height="15" fill="rgb(237,95,45)" fg:x="4736" fg:w="3"/><text x="66.3860%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (1 samples, 0.01%)</title><rect x="66.1639%" y="149" width="0.0140%" height="15" fill="rgb(208,109,11)" fg:x="4738" fg:w="1"/><text x="66.4139%" y="159.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="66.1919%" y="149" width="0.0140%" height="15" fill="rgb(216,190,48)" fg:x="4740" fg:w="1"/><text x="66.4419%" y="159.50"></text></g><g><title>omelette`differential_dataflow::operators::arrange::arrangement::Arranged&lt;G,T1&gt;::join_core_internal_unsafe::_{{closure}} (235 samples, 3.28%)</title><rect x="62.9381%" y="261" width="3.2817%" height="15" fill="rgb(251,171,36)" fg:x="4507" fg:w="235"/><text x="63.1881%" y="271.50">ome..</text></g><g><title>omelette`differential_dataflow::consolidation::ConsolidatingContainerBuilder&lt;alloc::vec::Vec&lt;(D,T,R)&gt;&gt;::consolidate_and_flush_through (186 samples, 2.60%)</title><rect x="63.6224%" y="245" width="2.5974%" height="15" fill="rgb(230,62,22)" fg:x="4556" fg:w="186"/><text x="63.8724%" y="255.50">om..</text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_updates_from (103 samples, 1.44%)</title><rect x="64.7815%" y="229" width="1.4383%" height="15" fill="rgb(225,114,35)" fg:x="4639" fg:w="103"/><text x="65.0315%" y="239.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (64 samples, 0.89%)</title><rect x="65.3261%" y="213" width="0.8937%" height="15" fill="rgb(215,118,42)" fg:x="4678" fg:w="64"/><text x="65.5761%" y="223.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (40 samples, 0.56%)</title><rect x="65.6612%" y="197" width="0.5586%" height="15" fill="rgb(243,119,21)" fg:x="4702" fg:w="40"/><text x="65.9112%" y="207.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (13 samples, 0.18%)</title><rect x="66.0383%" y="181" width="0.1815%" height="15" fill="rgb(252,177,53)" fg:x="4729" fg:w="13"/><text x="66.2883%" y="191.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (3 samples, 0.04%)</title><rect x="66.1779%" y="165" width="0.0419%" height="15" fill="rgb(237,209,29)" fg:x="4739" fg:w="3"/><text x="66.4279%" y="175.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (1 samples, 0.01%)</title><rect x="66.2058%" y="149" width="0.0140%" height="15" fill="rgb(212,65,23)" fg:x="4741" fg:w="1"/><text x="66.4558%" y="159.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (1 samples, 0.01%)</title><rect x="66.2058%" y="133" width="0.0140%" height="15" fill="rgb(230,222,46)" fg:x="4741" fg:w="1"/><text x="66.4558%" y="143.50"></text></g><g><title>omelette`differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt;::minimize_vals (7 samples, 0.10%)</title><rect x="66.2198%" y="261" width="0.0978%" height="15" fill="rgb(215,135,32)" fg:x="4742" fg:w="7"/><text x="66.4698%" y="271.50"></text></g><g><title>omelette`differential_dataflow::operators::join::Deferred&lt;T,C1,C2&gt;::work (331 samples, 4.62%)</title><rect x="61.7232%" y="277" width="4.6223%" height="15" fill="rgb(246,101,22)" fg:x="4420" fg:w="331"/><text x="61.9732%" y="287.50">omele..</text></g><g><title>omelette`differential_dataflow::trace::implementations::containers::BatchContainer::advance (2 samples, 0.03%)</title><rect x="66.3176%" y="261" width="0.0279%" height="15" fill="rgb(206,107,13)" fg:x="4749" fg:w="2"/><text x="66.5676%" y="271.50"></text></g><g><title>omelette`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.03%)</title><rect x="66.8342%" y="261" width="0.0279%" height="15" fill="rgb(250,100,44)" fg:x="4786" fg:w="2"/><text x="67.0842%" y="271.50"></text></g><g><title>omelette`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="66.8622%" y="261" width="0.0279%" height="15" fill="rgb(231,147,38)" fg:x="4788" fg:w="2"/><text x="67.1122%" y="271.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (6 samples, 0.08%)</title><rect x="66.8901%" y="181" width="0.0838%" height="15" fill="rgb(229,8,40)" fg:x="4790" fg:w="6"/><text x="67.1401%" y="191.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (6 samples, 0.08%)</title><rect x="66.9739%" y="181" width="0.0838%" height="15" fill="rgb(221,135,30)" fg:x="4796" fg:w="6"/><text x="67.2239%" y="191.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (13 samples, 0.18%)</title><rect x="67.4487%" y="165" width="0.1815%" height="15" fill="rgb(249,193,18)" fg:x="4830" fg:w="13"/><text x="67.6987%" y="175.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (7 samples, 0.10%)</title><rect x="67.6302%" y="165" width="0.0978%" height="15" fill="rgb(209,133,39)" fg:x="4843" fg:w="7"/><text x="67.8802%" y="175.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (1 samples, 0.01%)</title><rect x="67.7280%" y="165" width="0.0140%" height="15" fill="rgb(232,100,14)" fg:x="4850" fg:w="1"/><text x="67.9780%" y="175.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::containers::BatchContainer::push (10 samples, 0.14%)</title><rect x="67.7419%" y="165" width="0.1396%" height="15" fill="rgb(224,185,1)" fg:x="4851" fg:w="10"/><text x="67.9919%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (6 samples, 0.08%)</title><rect x="68.0631%" y="85" width="0.0838%" height="15" fill="rgb(223,139,8)" fg:x="4874" fg:w="6"/><text x="68.3131%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (6 samples, 0.08%)</title><rect x="68.0631%" y="69" width="0.0838%" height="15" fill="rgb(232,213,38)" fg:x="4874" fg:w="6"/><text x="68.3131%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (6 samples, 0.08%)</title><rect x="68.0631%" y="53" width="0.0838%" height="15" fill="rgb(207,94,22)" fg:x="4874" fg:w="6"/><text x="68.3131%" y="63.50"></text></g><g><title>omelette`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8 samples, 0.11%)</title><rect x="68.0631%" y="149" width="0.1117%" height="15" fill="rgb(219,183,54)" fg:x="4874" fg:w="8"/><text x="68.3131%" y="159.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (8 samples, 0.11%)</title><rect x="68.0631%" y="133" width="0.1117%" height="15" fill="rgb(216,185,54)" fg:x="4874" fg:w="8"/><text x="68.3131%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (8 samples, 0.11%)</title><rect x="68.0631%" y="117" width="0.1117%" height="15" fill="rgb(254,217,39)" fg:x="4874" fg:w="8"/><text x="68.3131%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (8 samples, 0.11%)</title><rect x="68.0631%" y="101" width="0.1117%" height="15" fill="rgb(240,178,23)" fg:x="4874" fg:w="8"/><text x="68.3131%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.03%)</title><rect x="68.1469%" y="85" width="0.0279%" height="15" fill="rgb(218,11,47)" fg:x="4880" fg:w="2"/><text x="68.3969%" y="95.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insertion_sort_shift_left (6 samples, 0.08%)</title><rect x="68.1748%" y="149" width="0.0838%" height="15" fill="rgb(218,51,51)" fg:x="4882" fg:w="6"/><text x="68.4248%" y="159.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::consolidate_updates (33 samples, 0.46%)</title><rect x="67.8816%" y="165" width="0.4608%" height="15" fill="rgb(238,126,27)" fg:x="4861" fg:w="33"/><text x="68.1316%" y="175.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (6 samples, 0.08%)</title><rect x="68.2586%" y="149" width="0.0838%" height="15" fill="rgb(249,202,22)" fg:x="4888" fg:w="6"/><text x="68.5086%" y="159.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (8 samples, 0.11%)</title><rect x="68.4262%" y="149" width="0.1117%" height="15" fill="rgb(254,195,49)" fg:x="4900" fg:w="8"/><text x="68.6762%" y="159.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (3 samples, 0.04%)</title><rect x="68.5379%" y="149" width="0.0419%" height="15" fill="rgb(208,123,14)" fg:x="4908" fg:w="3"/><text x="68.7879%" y="159.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (2 samples, 0.03%)</title><rect x="68.5798%" y="149" width="0.0279%" height="15" fill="rgb(224,200,8)" fg:x="4911" fg:w="2"/><text x="68.8298%" y="159.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::containers::BatchContainer::push (7 samples, 0.10%)</title><rect x="68.6077%" y="149" width="0.0978%" height="15" fill="rgb(217,61,36)" fg:x="4913" fg:w="7"/><text x="68.8577%" y="159.50"></text></g><g><title>omelette`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.03%)</title><rect x="68.7753%" y="133" width="0.0279%" height="15" fill="rgb(206,35,45)" fg:x="4925" fg:w="2"/><text x="69.0253%" y="143.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="68.7753%" y="117" width="0.0279%" height="15" fill="rgb(217,65,33)" fg:x="4925" fg:w="2"/><text x="69.0253%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.03%)</title><rect x="68.7753%" y="101" width="0.0279%" height="15" fill="rgb(222,158,48)" fg:x="4925" fg:w="2"/><text x="69.0253%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.03%)</title><rect x="68.7753%" y="85" width="0.0279%" height="15" fill="rgb(254,2,54)" fg:x="4925" fg:w="2"/><text x="69.0253%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.03%)</title><rect x="68.7753%" y="69" width="0.0279%" height="15" fill="rgb(250,143,38)" fg:x="4925" fg:w="2"/><text x="69.0253%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (2 samples, 0.03%)</title><rect x="68.7753%" y="53" width="0.0279%" height="15" fill="rgb(248,25,0)" fg:x="4925" fg:w="2"/><text x="69.0253%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.03%)</title><rect x="68.7753%" y="37" width="0.0279%" height="15" fill="rgb(206,152,27)" fg:x="4925" fg:w="2"/><text x="69.0253%" y="47.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::consolidate_updates (13 samples, 0.18%)</title><rect x="68.7055%" y="149" width="0.1815%" height="15" fill="rgb(240,77,30)" fg:x="4920" fg:w="13"/><text x="68.9555%" y="159.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (6 samples, 0.08%)</title><rect x="68.8032%" y="133" width="0.0838%" height="15" fill="rgb(231,5,3)" fg:x="4927" fg:w="6"/><text x="69.0532%" y="143.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::copy_key (49 samples, 0.68%)</title><rect x="68.3424%" y="165" width="0.6843%" height="15" fill="rgb(207,226,32)" fg:x="4894" fg:w="49"/><text x="68.5924%" y="175.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::stash_updates_for_val (10 samples, 0.14%)</title><rect x="68.8870%" y="149" width="0.1396%" height="15" fill="rgb(222,207,47)" fg:x="4933" fg:w="10"/><text x="69.1370%" y="159.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt; as differential_dataflow::trace::Merger&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;L&gt;&gt;&gt;::work (163 samples, 2.28%)</title><rect x="67.0577%" y="181" width="2.2762%" height="15" fill="rgb(229,115,45)" fg:x="4802" fg:w="163"/><text x="67.3077%" y="191.50">o..</text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::stash_updates_for_val (22 samples, 0.31%)</title><rect x="69.0267%" y="165" width="0.3072%" height="15" fill="rgb(224,191,6)" fg:x="4943" fg:w="22"/><text x="69.2767%" y="175.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (11 samples, 0.15%)</title><rect x="69.3339%" y="181" width="0.1536%" height="15" fill="rgb(230,227,24)" fg:x="4965" fg:w="11"/><text x="69.5839%" y="191.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::containers::BatchContainer::push (1 samples, 0.01%)</title><rect x="69.4875%" y="181" width="0.0140%" height="15" fill="rgb(228,80,19)" fg:x="4976" fg:w="1"/><text x="69.7375%" y="191.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::consolidate_updates (1 samples, 0.01%)</title><rect x="69.5015%" y="181" width="0.0140%" height="15" fill="rgb(247,229,0)" fg:x="4977" fg:w="1"/><text x="69.7515%" y="191.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::MergeVariant&lt;B&gt;::work (196 samples, 2.74%)</title><rect x="66.8901%" y="197" width="2.7370%" height="15" fill="rgb(237,194,15)" fg:x="4790" fg:w="196"/><text x="67.1401%" y="207.50">om..</text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::stash_updates_for_val (8 samples, 0.11%)</title><rect x="69.5154%" y="181" width="0.1117%" height="15" fill="rgb(219,203,20)" fg:x="4978" fg:w="8"/><text x="69.7654%" y="191.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,(usize,omelette::Class)),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="69.6271%" y="181" width="0.0279%" height="15" fill="rgb(234,128,8)" fg:x="4986" fg:w="2"/><text x="69.8771%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="69.6411%" y="165" width="0.0140%" height="15" fill="rgb(248,202,8)" fg:x="4987" fg:w="1"/><text x="69.8911%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="69.6411%" y="149" width="0.0140%" height="15" fill="rgb(206,104,37)" fg:x="4987" fg:w="1"/><text x="69.8911%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="69.6551%" y="165" width="0.0140%" height="15" fill="rgb(223,8,27)" fg:x="4988" fg:w="1"/><text x="69.9051%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="69.6551%" y="149" width="0.0140%" height="15" fill="rgb(216,217,28)" fg:x="4988" fg:w="1"/><text x="69.9051%" y="159.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,omelette::Node),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="69.6551%" y="181" width="0.0279%" height="15" fill="rgb(249,199,1)" fg:x="4988" fg:w="2"/><text x="69.9051%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="69.6690%" y="165" width="0.0140%" height="15" fill="rgb(240,85,17)" fg:x="4989" fg:w="1"/><text x="69.9190%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`medium_free_scan_madvise_free (1 samples, 0.01%)</title><rect x="69.6690%" y="149" width="0.0140%" height="15" fill="rgb(206,108,45)" fg:x="4989" fg:w="1"/><text x="69.9190%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="69.6690%" y="133" width="0.0140%" height="15" fill="rgb(245,210,41)" fg:x="4989" fg:w="1"/><text x="69.9190%" y="143.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::term::Term&lt;omelette::Class&gt;,(omelette::Class,omelette::Class)),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="69.6830%" y="181" width="0.0140%" height="15" fill="rgb(206,13,37)" fg:x="4990" fg:w="1"/><text x="69.9330%" y="191.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::Spine&lt;B&gt;::apply_fuel (202 samples, 2.82%)</title><rect x="66.8901%" y="213" width="2.8208%" height="15" fill="rgb(250,61,18)" fg:x="4790" fg:w="202"/><text x="67.1401%" y="223.50">om..</text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::Spine&lt;B&gt;::complete_at (6 samples, 0.08%)</title><rect x="69.6271%" y="197" width="0.0838%" height="15" fill="rgb(235,172,48)" fg:x="4986" fg:w="6"/><text x="69.8771%" y="207.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::term::Term&lt;omelette::Class&gt;,omelette::Class),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="69.6970%" y="181" width="0.0140%" height="15" fill="rgb(249,201,17)" fg:x="4991" fg:w="1"/><text x="69.9470%" y="191.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,omelette::Node),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="69.7109%" y="197" width="0.0140%" height="15" fill="rgb(219,208,6)" fg:x="4992" fg:w="1"/><text x="69.9609%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="69.7109%" y="181" width="0.0140%" height="15" fill="rgb(248,31,23)" fg:x="4992" fg:w="1"/><text x="69.9609%" y="191.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::term::Term&lt;omelette::Class&gt;,(omelette::Class,omelette::Class)),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="69.7249%" y="197" width="0.0140%" height="15" fill="rgb(245,15,42)" fg:x="4993" fg:w="1"/><text x="69.9749%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="69.7249%" y="181" width="0.0140%" height="15" fill="rgb(222,217,39)" fg:x="4993" fg:w="1"/><text x="69.9749%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`medium_madvise_free_range_no_lock (1 samples, 0.01%)</title><rect x="69.7249%" y="165" width="0.0140%" height="15" fill="rgb(210,219,27)" fg:x="4993" fg:w="1"/><text x="69.9749%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="69.7249%" y="149" width="0.0140%" height="15" fill="rgb(252,166,36)" fg:x="4993" fg:w="1"/><text x="69.9749%" y="159.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (1 samples, 0.01%)</title><rect x="69.7389%" y="181" width="0.0140%" height="15" fill="rgb(245,132,34)" fg:x="4994" fg:w="1"/><text x="69.9889%" y="191.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (2 samples, 0.03%)</title><rect x="69.7528%" y="181" width="0.0279%" height="15" fill="rgb(236,54,3)" fg:x="4995" fg:w="2"/><text x="70.0028%" y="191.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (2 samples, 0.03%)</title><rect x="69.7947%" y="165" width="0.0279%" height="15" fill="rgb(241,173,43)" fg:x="4998" fg:w="2"/><text x="70.0447%" y="175.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (1 samples, 0.01%)</title><rect x="69.8227%" y="165" width="0.0140%" height="15" fill="rgb(215,190,9)" fg:x="5000" fg:w="1"/><text x="70.0727%" y="175.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (1 samples, 0.01%)</title><rect x="69.8366%" y="165" width="0.0140%" height="15" fill="rgb(242,101,16)" fg:x="5001" fg:w="1"/><text x="70.0866%" y="175.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::containers::BatchContainer::push (1 samples, 0.01%)</title><rect x="69.8506%" y="165" width="0.0140%" height="15" fill="rgb(223,190,21)" fg:x="5002" fg:w="1"/><text x="70.1006%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insertion_sort_shift_left (1 samples, 0.01%)</title><rect x="69.8925%" y="149" width="0.0140%" height="15" fill="rgb(215,228,25)" fg:x="5005" fg:w="1"/><text x="70.1425%" y="159.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::consolidate_updates (4 samples, 0.06%)</title><rect x="69.8645%" y="165" width="0.0559%" height="15" fill="rgb(225,36,22)" fg:x="5003" fg:w="4"/><text x="70.1145%" y="175.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (1 samples, 0.01%)</title><rect x="69.9064%" y="149" width="0.0140%" height="15" fill="rgb(251,106,46)" fg:x="5006" fg:w="1"/><text x="70.1564%" y="159.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (1 samples, 0.01%)</title><rect x="69.9623%" y="149" width="0.0140%" height="15" fill="rgb(208,90,1)" fg:x="5010" fg:w="1"/><text x="70.2123%" y="159.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (1 samples, 0.01%)</title><rect x="69.9763%" y="149" width="0.0140%" height="15" fill="rgb(243,10,4)" fg:x="5011" fg:w="1"/><text x="70.2263%" y="159.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (1 samples, 0.01%)</title><rect x="69.9902%" y="149" width="0.0140%" height="15" fill="rgb(212,137,27)" fg:x="5012" fg:w="1"/><text x="70.2402%" y="159.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::consolidate_updates (4 samples, 0.06%)</title><rect x="70.0042%" y="149" width="0.0559%" height="15" fill="rgb(231,220,49)" fg:x="5013" fg:w="4"/><text x="70.2542%" y="159.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (2 samples, 0.03%)</title><rect x="70.0321%" y="133" width="0.0279%" height="15" fill="rgb(237,96,20)" fg:x="5015" fg:w="2"/><text x="70.2821%" y="143.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::copy_key (15 samples, 0.21%)</title><rect x="69.9204%" y="165" width="0.2095%" height="15" fill="rgb(239,229,30)" fg:x="5007" fg:w="15"/><text x="70.1704%" y="175.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::stash_updates_for_val (5 samples, 0.07%)</title><rect x="70.0600%" y="149" width="0.0698%" height="15" fill="rgb(219,65,33)" fg:x="5017" fg:w="5"/><text x="70.3100%" y="159.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt; as differential_dataflow::trace::Merger&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;L&gt;&gt;&gt;::work (32 samples, 0.45%)</title><rect x="69.7808%" y="181" width="0.4469%" height="15" fill="rgb(243,134,7)" fg:x="4997" fg:w="32"/><text x="70.0308%" y="191.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::stash_updates_for_val (7 samples, 0.10%)</title><rect x="70.1299%" y="165" width="0.0978%" height="15" fill="rgb(216,177,54)" fg:x="5022" fg:w="7"/><text x="70.3799%" y="175.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="70.2276%" y="181" width="0.0140%" height="15" fill="rgb(211,160,20)" fg:x="5029" fg:w="1"/><text x="70.4776%" y="191.50"></text></g><g><title>omelette`&lt;differential_dataflow::operators::arrange::agent::TraceAgent&lt;Tr&gt; as differential_dataflow::trace::TraceReader&gt;::set_physical_compaction (241 samples, 3.37%)</title><rect x="66.8901%" y="261" width="3.3655%" height="15" fill="rgb(239,85,39)" fg:x="4790" fg:w="241"/><text x="67.1401%" y="271.50">ome..</text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::Spine&lt;B&gt;::consider_merges (241 samples, 3.37%)</title><rect x="66.8901%" y="245" width="3.3655%" height="15" fill="rgb(232,125,22)" fg:x="4790" fg:w="241"/><text x="67.1401%" y="255.50">ome..</text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::Spine&lt;B&gt;::introduce_batch (241 samples, 3.37%)</title><rect x="66.8901%" y="229" width="3.3655%" height="15" fill="rgb(244,57,34)" fg:x="4790" fg:w="241"/><text x="67.1401%" y="239.50">ome..</text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::Spine&lt;B&gt;::complete_at (39 samples, 0.54%)</title><rect x="69.7109%" y="213" width="0.5446%" height="15" fill="rgb(214,203,32)" fg:x="4992" fg:w="39"/><text x="69.9609%" y="223.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::MergeVariant&lt;B&gt;::work (37 samples, 0.52%)</title><rect x="69.7389%" y="197" width="0.5167%" height="15" fill="rgb(207,58,43)" fg:x="4994" fg:w="37"/><text x="69.9889%" y="207.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::stash_updates_for_val (1 samples, 0.01%)</title><rect x="70.2416%" y="181" width="0.0140%" height="15" fill="rgb(215,193,15)" fg:x="5030" fg:w="1"/><text x="70.4916%" y="191.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (34 samples, 0.47%)</title><rect x="71.6939%" y="245" width="0.4748%" height="15" fill="rgb(232,15,44)" fg:x="5134" fg:w="34"/><text x="71.9439%" y="255.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (16 samples, 0.22%)</title><rect x="72.1687%" y="245" width="0.2234%" height="15" fill="rgb(212,3,48)" fg:x="5168" fg:w="16"/><text x="72.4187%" y="255.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (12 samples, 0.17%)</title><rect x="72.3921%" y="245" width="0.1676%" height="15" fill="rgb(218,128,7)" fg:x="5184" fg:w="12"/><text x="72.6421%" y="255.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insertion_sort_shift_left (1 samples, 0.01%)</title><rect x="72.5597%" y="245" width="0.0140%" height="15" fill="rgb(226,216,39)" fg:x="5196" fg:w="1"/><text x="72.8097%" y="255.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (68 samples, 0.95%)</title><rect x="72.5737%" y="245" width="0.9496%" height="15" fill="rgb(243,47,51)" fg:x="5197" fg:w="68"/><text x="72.8237%" y="255.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::Ord&gt;::cmp (2 samples, 0.03%)</title><rect x="73.4953%" y="229" width="0.0279%" height="15" fill="rgb(241,183,40)" fg:x="5263" fg:w="2"/><text x="73.7453%" y="239.50"></text></g><g><title>omelette`differential_dataflow::operators::HistoryReplay&lt;C&gt;::step_while_time_is (28 samples, 0.39%)</title><rect x="73.5233%" y="245" width="0.3910%" height="15" fill="rgb(231,217,32)" fg:x="5265" fg:w="28"/><text x="73.7733%" y="255.50"></text></g><g><title>omelette`differential_dataflow::operators::ValueHistory&lt;C&gt;::replay (15 samples, 0.21%)</title><rect x="73.9143%" y="245" width="0.2095%" height="15" fill="rgb(229,61,38)" fg:x="5293" fg:w="15"/><text x="74.1643%" y="255.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt; as differential_dataflow::trace::cursor::Cursor&gt;::step_val (22 samples, 0.31%)</title><rect x="75.6459%" y="229" width="0.3072%" height="15" fill="rgb(225,210,5)" fg:x="5417" fg:w="22"/><text x="75.8959%" y="239.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (60 samples, 0.84%)</title><rect x="75.9531%" y="229" width="0.8379%" height="15" fill="rgb(231,79,45)" fg:x="5439" fg:w="60"/><text x="76.2031%" y="239.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (36 samples, 0.50%)</title><rect x="76.7910%" y="229" width="0.5027%" height="15" fill="rgb(224,100,7)" fg:x="5499" fg:w="36"/><text x="77.0410%" y="239.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialOrd&gt;::partial_cmp (244 samples, 3.41%)</title><rect x="77.2937%" y="229" width="3.4073%" height="15" fill="rgb(241,198,18)" fg:x="5535" fg:w="244"/><text x="77.5437%" y="239.50">ome..</text></g><g><title>omelette`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.01%)</title><rect x="80.7010%" y="229" width="0.0140%" height="15" fill="rgb(252,97,53)" fg:x="5779" fg:w="1"/><text x="80.9510%" y="239.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="80.7010%" y="213" width="0.0140%" height="15" fill="rgb(220,88,7)" fg:x="5779" fg:w="1"/><text x="80.9510%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.01%)</title><rect x="80.7010%" y="197" width="0.0140%" height="15" fill="rgb(213,176,14)" fg:x="5779" fg:w="1"/><text x="80.9510%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.01%)</title><rect x="80.7010%" y="181" width="0.0140%" height="15" fill="rgb(246,73,7)" fg:x="5779" fg:w="1"/><text x="80.9510%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.01%)</title><rect x="80.7010%" y="165" width="0.0140%" height="15" fill="rgb(245,64,36)" fg:x="5779" fg:w="1"/><text x="80.9510%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.01%)</title><rect x="80.7010%" y="149" width="0.0140%" height="15" fill="rgb(245,80,10)" fg:x="5779" fg:w="1"/><text x="80.9510%" y="159.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (14 samples, 0.20%)</title><rect x="80.7150%" y="229" width="0.1955%" height="15" fill="rgb(232,107,50)" fg:x="5780" fg:w="14"/><text x="80.9650%" y="239.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insertion_sort_shift_left (12 samples, 0.17%)</title><rect x="80.9105%" y="229" width="0.1676%" height="15" fill="rgb(253,3,0)" fg:x="5794" fg:w="12"/><text x="81.1605%" y="239.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (19 samples, 0.27%)</title><rect x="81.0781%" y="229" width="0.2653%" height="15" fill="rgb(212,99,53)" fg:x="5806" fg:w="19"/><text x="81.3281%" y="239.50"></text></g><g><title>omelette`differential_dataflow::operators::ValueHistory&lt;C&gt;::replay (33 samples, 0.46%)</title><rect x="81.3434%" y="229" width="0.4608%" height="15" fill="rgb(249,111,54)" fg:x="5825" fg:w="33"/><text x="81.5934%" y="239.50"></text></g><g><title>omelette`core::slice::sort::stable::driftsort_main (1 samples, 0.01%)</title><rect x="81.7903%" y="213" width="0.0140%" height="15" fill="rgb(249,55,30)" fg:x="5857" fg:w="1"/><text x="82.0403%" y="223.50"></text></g><g><title>omelette`core::slice::sort::stable::drift::sort (1 samples, 0.01%)</title><rect x="81.7903%" y="197" width="0.0140%" height="15" fill="rgb(237,47,42)" fg:x="5857" fg:w="1"/><text x="82.0403%" y="207.50"></text></g><g><title>omelette`core::slice::sort::stable::quicksort::quicksort (1 samples, 0.01%)</title><rect x="81.7903%" y="181" width="0.0140%" height="15" fill="rgb(211,20,18)" fg:x="5857" fg:w="1"/><text x="82.0403%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (1 samples, 0.01%)</title><rect x="81.7903%" y="165" width="0.0140%" height="15" fill="rgb(231,203,46)" fg:x="5857" fg:w="1"/><text x="82.0403%" y="175.50"></text></g><g><title>omelette`differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt;::minimize_keys (29 samples, 0.40%)</title><rect x="81.8042%" y="229" width="0.4050%" height="15" fill="rgb(237,142,3)" fg:x="5858" fg:w="29"/><text x="82.0542%" y="239.50"></text></g><g><title>omelette`differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt;::minimize_vals (47 samples, 0.66%)</title><rect x="82.2092%" y="229" width="0.6563%" height="15" fill="rgb(241,107,1)" fg:x="5887" fg:w="47"/><text x="82.4592%" y="239.50"></text></g><g><title>omelette`differential_dataflow::operators::ValueHistory&lt;C&gt;::replay_key (735 samples, 10.26%)</title><rect x="74.1237%" y="245" width="10.2639%" height="15" fill="rgb(229,83,13)" fg:x="5308" fg:w="735"/><text x="74.3737%" y="255.50">omelette`differ..</text></g><g><title>omelette`differential_dataflow::trace::implementations::containers::BatchContainer::advance (109 samples, 1.52%)</title><rect x="82.8655%" y="229" width="1.5221%" height="15" fill="rgb(241,91,40)" fg:x="5934" fg:w="109"/><text x="83.1155%" y="239.50"></text></g><g><title>omelette`differential_dataflow::operators::reduce::sort_dedup (4 samples, 0.06%)</title><rect x="84.3877%" y="245" width="0.0559%" height="15" fill="rgb(225,3,45)" fg:x="6043" fg:w="4"/><text x="84.6377%" y="255.50"></text></g><g><title>omelette`differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt;::minimize_keys (5 samples, 0.07%)</title><rect x="84.4435%" y="245" width="0.0698%" height="15" fill="rgb(244,223,14)" fg:x="6047" fg:w="5"/><text x="84.6935%" y="255.50"></text></g><g><title>omelette`differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt;::minimize_vals (47 samples, 0.66%)</title><rect x="84.5133%" y="245" width="0.6563%" height="15" fill="rgb(224,124,37)" fg:x="6052" fg:w="47"/><text x="84.7633%" y="255.50"></text></g><g><title>omelette`&lt;differential_dataflow::operators::reduce::history_replay::HistoryReplayer&lt;C1,C2,C3,V&gt; as differential_dataflow::operators::reduce::PerKeyCompute&lt;C1,C2,C3,V&gt;&gt;::compute (1,088 samples, 15.19%)</title><rect x="70.2556%" y="261" width="15.1934%" height="15" fill="rgb(251,171,30)" fg:x="5031" fg:w="1088"/><text x="70.5056%" y="271.50">omelette`&lt;differential_..</text></g><g><title>omelette`differential_dataflow::trace::implementations::containers::BatchContainer::advance (20 samples, 0.28%)</title><rect x="85.1697%" y="245" width="0.2793%" height="15" fill="rgb(236,46,54)" fg:x="6099" fg:w="20"/><text x="85.4197%" y="255.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (1 samples, 0.01%)</title><rect x="85.4490%" y="261" width="0.0140%" height="15" fill="rgb(245,213,5)" fg:x="6119" fg:w="1"/><text x="85.6990%" y="271.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (4 samples, 0.06%)</title><rect x="85.4629%" y="261" width="0.0559%" height="15" fill="rgb(230,144,27)" fg:x="6120" fg:w="4"/><text x="85.7129%" y="271.50"></text></g><g><title>omelette`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="85.7562%" y="245" width="0.0140%" height="15" fill="rgb(220,86,6)" fg:x="6141" fg:w="1"/><text x="86.0062%" y="255.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (3 samples, 0.04%)</title><rect x="85.7701%" y="245" width="0.0419%" height="15" fill="rgb(240,20,13)" fg:x="6142" fg:w="3"/><text x="86.0201%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (11 samples, 0.15%)</title><rect x="85.8120%" y="181" width="0.1536%" height="15" fill="rgb(217,89,34)" fg:x="6145" fg:w="11"/><text x="86.0620%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (11 samples, 0.15%)</title><rect x="85.8120%" y="165" width="0.1536%" height="15" fill="rgb(229,13,5)" fg:x="6145" fg:w="11"/><text x="86.0620%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (11 samples, 0.15%)</title><rect x="85.8120%" y="149" width="0.1536%" height="15" fill="rgb(244,67,35)" fg:x="6145" fg:w="11"/><text x="86.0620%" y="159.50"></text></g><g><title>omelette`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (14 samples, 0.20%)</title><rect x="85.8120%" y="245" width="0.1955%" height="15" fill="rgb(221,40,2)" fg:x="6145" fg:w="14"/><text x="86.0620%" y="255.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (14 samples, 0.20%)</title><rect x="85.8120%" y="229" width="0.1955%" height="15" fill="rgb(237,157,21)" fg:x="6145" fg:w="14"/><text x="86.0620%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (14 samples, 0.20%)</title><rect x="85.8120%" y="213" width="0.1955%" height="15" fill="rgb(222,94,11)" fg:x="6145" fg:w="14"/><text x="86.0620%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (14 samples, 0.20%)</title><rect x="85.8120%" y="197" width="0.1955%" height="15" fill="rgb(249,113,6)" fg:x="6145" fg:w="14"/><text x="86.0620%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.04%)</title><rect x="85.9656%" y="181" width="0.0419%" height="15" fill="rgb(238,137,36)" fg:x="6156" fg:w="3"/><text x="86.2156%" y="191.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::rc_blanket_impls::RcBuilder&lt;B&gt; as differential_dataflow::trace::Builder&gt;::push (37 samples, 0.52%)</title><rect x="85.5188%" y="261" width="0.5167%" height="15" fill="rgb(210,102,26)" fg:x="6124" fg:w="37"/><text x="85.7688%" y="271.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBuilder&lt;L,CI&gt;::push_update (2 samples, 0.03%)</title><rect x="86.0075%" y="245" width="0.0279%" height="15" fill="rgb(218,30,30)" fg:x="6159" fg:w="2"/><text x="86.2575%" y="255.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (13 samples, 0.18%)</title><rect x="86.0355%" y="261" width="0.1815%" height="15" fill="rgb(214,67,26)" fg:x="6161" fg:w="13"/><text x="86.2855%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.01%)</title><rect x="86.2170%" y="197" width="0.0140%" height="15" fill="rgb(251,9,53)" fg:x="6174" fg:w="1"/><text x="86.4670%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (1 samples, 0.01%)</title><rect x="86.2170%" y="181" width="0.0140%" height="15" fill="rgb(228,204,25)" fg:x="6174" fg:w="1"/><text x="86.4670%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1 samples, 0.01%)</title><rect x="86.2170%" y="165" width="0.0140%" height="15" fill="rgb(207,153,8)" fg:x="6174" fg:w="1"/><text x="86.4670%" y="175.50"></text></g><g><title>omelette`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3 samples, 0.04%)</title><rect x="86.2170%" y="261" width="0.0419%" height="15" fill="rgb(242,9,16)" fg:x="6174" fg:w="3"/><text x="86.4670%" y="271.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="86.2170%" y="245" width="0.0419%" height="15" fill="rgb(217,211,10)" fg:x="6174" fg:w="3"/><text x="86.4670%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3 samples, 0.04%)</title><rect x="86.2170%" y="229" width="0.0419%" height="15" fill="rgb(219,228,52)" fg:x="6174" fg:w="3"/><text x="86.4670%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3 samples, 0.04%)</title><rect x="86.2170%" y="213" width="0.0419%" height="15" fill="rgb(231,92,29)" fg:x="6174" fg:w="3"/><text x="86.4670%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.03%)</title><rect x="86.2310%" y="197" width="0.0279%" height="15" fill="rgb(232,8,23)" fg:x="6175" fg:w="2"/><text x="86.4810%" y="207.50"></text></g><g><title>omelette`core::iter::traits::iterator::Iterator::partition (2 samples, 0.03%)</title><rect x="86.2589%" y="261" width="0.0279%" height="15" fill="rgb(216,211,34)" fg:x="6177" fg:w="2"/><text x="86.5089%" y="271.50"></text></g><g><title>omelette`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.03%)</title><rect x="86.2589%" y="245" width="0.0279%" height="15" fill="rgb(236,151,0)" fg:x="6177" fg:w="2"/><text x="86.5089%" y="255.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="86.2589%" y="229" width="0.0279%" height="15" fill="rgb(209,168,3)" fg:x="6177" fg:w="2"/><text x="86.5089%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.03%)</title><rect x="86.2589%" y="213" width="0.0279%" height="15" fill="rgb(208,129,28)" fg:x="6177" fg:w="2"/><text x="86.5089%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.03%)</title><rect x="86.2589%" y="197" width="0.0279%" height="15" fill="rgb(229,78,22)" fg:x="6177" fg:w="2"/><text x="86.5089%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.03%)</title><rect x="86.2589%" y="181" width="0.0279%" height="15" fill="rgb(228,187,13)" fg:x="6177" fg:w="2"/><text x="86.5089%" y="191.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (11 samples, 0.15%)</title><rect x="86.2868%" y="261" width="0.1536%" height="15" fill="rgb(240,119,24)" fg:x="6179" fg:w="11"/><text x="86.5368%" y="271.50"></text></g><g><title>omelette`differential_dataflow::operators::HistoryReplay&lt;C&gt;::step_while_time_is (4 samples, 0.06%)</title><rect x="86.4404%" y="261" width="0.0559%" height="15" fill="rgb(209,194,42)" fg:x="6190" fg:w="4"/><text x="86.6904%" y="271.50"></text></g><g><title>omelette`differential_dataflow::operators::ValueHistory&lt;C&gt;::replay (7 samples, 0.10%)</title><rect x="86.4963%" y="261" width="0.0978%" height="15" fill="rgb(247,200,46)" fg:x="6194" fg:w="7"/><text x="86.7463%" y="271.50"></text></g><g><title>omelette`differential_dataflow::operators::ValueHistory&lt;C&gt;::replay_key (2 samples, 0.03%)</title><rect x="86.5941%" y="261" width="0.0279%" height="15" fill="rgb(218,76,16)" fg:x="6201" fg:w="2"/><text x="86.8441%" y="271.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.04%)</title><rect x="86.7197%" y="245" width="0.0419%" height="15" fill="rgb(225,21,48)" fg:x="6210" fg:w="3"/><text x="86.9697%" y="255.50"></text></g><g><title>omelette`alloc::vec::Vec&lt;T,A&gt;::dedup_by (3 samples, 0.04%)</title><rect x="86.7616%" y="245" width="0.0419%" height="15" fill="rgb(239,223,50)" fg:x="6213" fg:w="3"/><text x="87.0116%" y="255.50"></text></g><g><title>omelette`differential_dataflow::operators::reduce::sort_dedup (14 samples, 0.20%)</title><rect x="86.6220%" y="261" width="0.1955%" height="15" fill="rgb(244,45,21)" fg:x="6203" fg:w="14"/><text x="86.8720%" y="271.50"></text></g><g><title>omelette`core::slice::sort::stable::driftsort_main (1 samples, 0.01%)</title><rect x="86.8035%" y="245" width="0.0140%" height="15" fill="rgb(232,33,43)" fg:x="6216" fg:w="1"/><text x="87.0535%" y="255.50"></text></g><g><title>omelette`core::slice::sort::stable::drift::sort (1 samples, 0.01%)</title><rect x="86.8035%" y="229" width="0.0140%" height="15" fill="rgb(209,8,3)" fg:x="6216" fg:w="1"/><text x="87.0535%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="86.8035%" y="213" width="0.0140%" height="15" fill="rgb(214,25,53)" fg:x="6216" fg:w="1"/><text x="87.0535%" y="223.50"></text></g><g><title>omelette`differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt;::minimize_keys (5 samples, 0.07%)</title><rect x="86.8175%" y="261" width="0.0698%" height="15" fill="rgb(254,186,54)" fg:x="6217" fg:w="5"/><text x="87.0675%" y="271.50"></text></g><g><title>omelette`differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt;::minimize_vals (4 samples, 0.06%)</title><rect x="86.8873%" y="261" width="0.0559%" height="15" fill="rgb(208,174,49)" fg:x="6222" fg:w="4"/><text x="87.1373%" y="271.50"></text></g><g><title>omelette`differential_dataflow::operators::reduce::reduce_trace::_{{closure}}::_{{closure}} (1,479 samples, 20.65%)</title><rect x="66.3455%" y="277" width="20.6535%" height="15" fill="rgb(233,191,51)" fg:x="4751" fg:w="1479"/><text x="66.5955%" y="287.50">omelette`differential_dataflow::o..</text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBuilder&lt;L,CI&gt;::push_update (4 samples, 0.06%)</title><rect x="86.9432%" y="261" width="0.0559%" height="15" fill="rgb(222,134,10)" fg:x="6226" fg:w="4"/><text x="87.1932%" y="271.50"></text></g><g><title>omelette`alloc::vec::Vec&lt;T,A&gt;::dedup_by (2 samples, 0.03%)</title><rect x="87.0688%" y="261" width="0.0279%" height="15" fill="rgb(230,226,20)" fg:x="6235" fg:w="2"/><text x="87.3188%" y="271.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.01%)</title><rect x="87.0968%" y="245" width="0.0140%" height="15" fill="rgb(251,111,25)" fg:x="6237" fg:w="1"/><text x="87.3468%" y="255.50"></text></g><g><title>omelette`&lt;omelette::term::Term&lt;T&gt; as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.01%)</title><rect x="87.1387%" y="229" width="0.0140%" height="15" fill="rgb(224,40,46)" fg:x="6240" fg:w="1"/><text x="87.3887%" y="239.50"></text></g><g><title>omelette`differential_dataflow::operators::reduce::sort_dedup (12 samples, 0.17%)</title><rect x="86.9990%" y="277" width="0.1676%" height="15" fill="rgb(236,108,47)" fg:x="6230" fg:w="12"/><text x="87.2490%" y="287.50"></text></g><g><title>omelette`core::slice::sort::stable::driftsort_main (5 samples, 0.07%)</title><rect x="87.0968%" y="261" width="0.0698%" height="15" fill="rgb(234,93,0)" fg:x="6237" fg:w="5"/><text x="87.3468%" y="271.50"></text></g><g><title>omelette`core::slice::sort::stable::drift::sort (4 samples, 0.06%)</title><rect x="87.1107%" y="245" width="0.0559%" height="15" fill="rgb(224,213,32)" fg:x="6238" fg:w="4"/><text x="87.3607%" y="255.50"></text></g><g><title>omelette`core::slice::sort::stable::merge::merge (1 samples, 0.01%)</title><rect x="87.1526%" y="229" width="0.0140%" height="15" fill="rgb(251,11,48)" fg:x="6241" fg:w="1"/><text x="87.4026%" y="239.50"></text></g><g><title>omelette`differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt;::minimize_keys (8 samples, 0.11%)</title><rect x="87.1666%" y="277" width="0.1117%" height="15" fill="rgb(236,173,5)" fg:x="6242" fg:w="8"/><text x="87.4166%" y="287.50"></text></g><g><title>omelette`differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt;::minimize_vals (2 samples, 0.03%)</title><rect x="87.2783%" y="277" width="0.0279%" height="15" fill="rgb(230,95,12)" fg:x="6250" fg:w="2"/><text x="87.5283%" y="287.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBuilder&lt;L,CI&gt;::push_update (1 samples, 0.01%)</title><rect x="87.3062%" y="277" width="0.0140%" height="15" fill="rgb(232,209,1)" fg:x="6252" fg:w="1"/><text x="87.5562%" y="287.50"></text></g><g><title>omelette`timely::dataflow::channels::pullers::counter::Counter&lt;T,C,P&gt;::next_guarded (2 samples, 0.03%)</title><rect x="87.3202%" y="277" width="0.0279%" height="15" fill="rgb(232,6,1)" fg:x="6253" fg:w="2"/><text x="87.5702%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.01%)</title><rect x="87.3342%" y="261" width="0.0140%" height="15" fill="rgb(210,224,50)" fg:x="6254" fg:w="1"/><text x="87.5842%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (1 samples, 0.01%)</title><rect x="87.3342%" y="245" width="0.0140%" height="15" fill="rgb(228,127,35)" fg:x="6254" fg:w="1"/><text x="87.5842%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="87.3342%" y="229" width="0.0140%" height="15" fill="rgb(245,102,45)" fg:x="6254" fg:w="1"/><text x="87.5842%" y="239.50"></text></g><g><title>omelette`&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="87.3900%" y="245" width="0.0140%" height="15" fill="rgb(214,1,49)" fg:x="6258" fg:w="1"/><text x="87.6400%" y="255.50"></text></g><g><title>omelette`&lt;[T] as alloc::slice::SpecCloneIntoVec&lt;T,A&gt;&gt;::clone_into (2 samples, 0.03%)</title><rect x="87.3900%" y="261" width="0.0279%" height="15" fill="rgb(226,163,40)" fg:x="6258" fg:w="2"/><text x="87.6400%" y="271.50"></text></g><g><title>omelette`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="87.4040%" y="245" width="0.0140%" height="15" fill="rgb(239,212,28)" fg:x="6259" fg:w="1"/><text x="87.6540%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="87.4040%" y="229" width="0.0140%" height="15" fill="rgb(220,20,13)" fg:x="6259" fg:w="1"/><text x="87.6540%" y="239.50"></text></g><g><title>omelette`timely::dataflow::channels::pushers::buffer::Buffer&lt;T,CB,P&gt;::extract_and_send (6 samples, 0.08%)</title><rect x="87.3481%" y="277" width="0.0838%" height="15" fill="rgb(210,164,35)" fg:x="6255" fg:w="6"/><text x="87.5981%" y="287.50"></text></g><g><title>omelette`&lt;timely::dataflow::operators::core::enterleave::IngressNub&lt;TOuter,TInner,TContainer&gt; as timely_communication::Push&lt;timely::dataflow::channels::Message&lt;TOuter,TContainer&gt;&gt;&gt;::push (1 samples, 0.01%)</title><rect x="87.4180%" y="261" width="0.0140%" height="15" fill="rgb(248,109,41)" fg:x="6260" fg:w="1"/><text x="87.6680%" y="271.50"></text></g><g><title>omelette`&lt;timely::dataflow::channels::pushers::counter::Counter&lt;T,C,P&gt; as timely_communication::Push&lt;timely::dataflow::channels::Message&lt;T,C&gt;&gt;&gt;::push (1 samples, 0.01%)</title><rect x="87.4180%" y="245" width="0.0140%" height="15" fill="rgb(238,23,50)" fg:x="6260" fg:w="1"/><text x="87.6680%" y="255.50"></text></g><g><title>omelette`&lt;timely::dataflow::channels::pact::LogPusher&lt;T,C,P&gt; as timely_communication::Push&lt;timely::dataflow::channels::Message&lt;T,C&gt;&gt;&gt;::push (1 samples, 0.01%)</title><rect x="87.4180%" y="229" width="0.0140%" height="15" fill="rgb(211,48,49)" fg:x="6260" fg:w="1"/><text x="87.6680%" y="239.50"></text></g><g><title>omelette`&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.08%)</title><rect x="87.4459%" y="229" width="0.0838%" height="15" fill="rgb(223,36,21)" fg:x="6262" fg:w="6"/><text x="87.6959%" y="239.50"></text></g><g><title>omelette`&lt;[T] as alloc::slice::SpecCloneIntoVec&lt;T,A&gt;&gt;::clone_into (8 samples, 0.11%)</title><rect x="87.4459%" y="245" width="0.1117%" height="15" fill="rgb(207,123,46)" fg:x="6262" fg:w="8"/><text x="87.6959%" y="255.50"></text></g><g><title>omelette`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2 samples, 0.03%)</title><rect x="87.5297%" y="229" width="0.0279%" height="15" fill="rgb(240,218,32)" fg:x="6268" fg:w="2"/><text x="87.7797%" y="239.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="87.5297%" y="213" width="0.0279%" height="15" fill="rgb(252,5,43)" fg:x="6268" fg:w="2"/><text x="87.7797%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.03%)</title><rect x="87.5297%" y="197" width="0.0279%" height="15" fill="rgb(252,84,19)" fg:x="6268" fg:w="2"/><text x="87.7797%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.03%)</title><rect x="87.5297%" y="181" width="0.0279%" height="15" fill="rgb(243,152,39)" fg:x="6268" fg:w="2"/><text x="87.7797%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (2 samples, 0.03%)</title><rect x="87.5297%" y="165" width="0.0279%" height="15" fill="rgb(234,160,15)" fg:x="6268" fg:w="2"/><text x="87.7797%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (2 samples, 0.03%)</title><rect x="87.5297%" y="149" width="0.0279%" height="15" fill="rgb(237,34,20)" fg:x="6268" fg:w="2"/><text x="87.7797%" y="159.50"></text></g><g><title>omelette`&lt;timely::dataflow::channels::pact::LogPusher&lt;T,C,P&gt; as timely_communication::Push&lt;timely::dataflow::channels::Message&lt;T,C&gt;&gt;&gt;::push (1 samples, 0.01%)</title><rect x="87.5576%" y="245" width="0.0140%" height="15" fill="rgb(229,97,13)" fg:x="6270" fg:w="1"/><text x="87.8076%" y="255.50"></text></g><g><title>omelette`timely::dataflow::channels::pushers::buffer::Buffer&lt;T,timely_container::CapacityContainerBuilder&lt;C&gt;,P&gt;::give_container (12 samples, 0.17%)</title><rect x="87.4319%" y="277" width="0.1676%" height="15" fill="rgb(234,71,50)" fg:x="6261" fg:w="12"/><text x="87.6819%" y="287.50"></text></g><g><title>omelette`&lt;timely::dataflow::channels::pushers::counter::Counter&lt;T,C,P&gt; as timely_communication::Push&lt;timely::dataflow::channels::Message&lt;T,C&gt;&gt;&gt;::push (11 samples, 0.15%)</title><rect x="87.4459%" y="261" width="0.1536%" height="15" fill="rgb(253,155,4)" fg:x="6262" fg:w="11"/><text x="87.6959%" y="271.50"></text></g><g><title>omelette`timely::progress::change_batch::ChangeBatch&lt;T,_&gt;::compact (2 samples, 0.03%)</title><rect x="87.5716%" y="245" width="0.0279%" height="15" fill="rgb(222,185,37)" fg:x="6271" fg:w="2"/><text x="87.8216%" y="255.50"></text></g><g><title>omelette`timely::dataflow::operators::capability::Capability&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="87.5995%" y="277" width="0.0140%" height="15" fill="rgb(251,177,13)" fg:x="6273" fg:w="1"/><text x="87.8495%" y="287.50"></text></g><g><title>omelette`timely::dataflow::operators::capability::InputCapability&lt;T&gt;::retain_for_output (2 samples, 0.03%)</title><rect x="87.6135%" y="277" width="0.0279%" height="15" fill="rgb(250,179,40)" fg:x="6274" fg:w="2"/><text x="87.8635%" y="287.50"></text></g><g><title>omelette`timely::dataflow::operators::generic::handles::OutputHandleCore&lt;T,CB,P&gt;::session_with_builder (1 samples, 0.01%)</title><rect x="87.6414%" y="277" width="0.0140%" height="15" fill="rgb(242,44,2)" fg:x="6276" fg:w="1"/><text x="87.8914%" y="287.50"></text></g><g><title>omelette`timely::progress::change_batch::ChangeBatch&lt;T,_&gt;::compact (1 samples, 0.01%)</title><rect x="87.6554%" y="277" width="0.0140%" height="15" fill="rgb(216,177,13)" fg:x="6277" fg:w="1"/><text x="87.9054%" y="287.50"></text></g><g><title>omelette`smallvec::SmallVec&lt;A&gt;::retain (1 samples, 0.01%)</title><rect x="87.6554%" y="261" width="0.0140%" height="15" fill="rgb(216,106,43)" fg:x="6277" fg:w="1"/><text x="87.9054%" y="271.50"></text></g><g><title>omelette`&lt;timely::dataflow::operators::generic::builder_raw::OperatorCore&lt;T,L&gt; as timely::scheduling::Schedule&gt;::schedule (5,251 samples, 73.33%)</title><rect x="14.3555%" y="293" width="73.3277%" height="15" fill="rgb(216,183,2)" fg:x="1028" fg:w="5251"/><text x="14.6055%" y="303.50">omelette`&lt;timely::dataflow::operators::generic::builder_raw::OperatorCore&lt;T,L&gt; as timely::scheduling::Schedule&gt;::schedule</text></g><g><title>omelette`timely::progress::frontier::Antichain&lt;T&gt;::insert (1 samples, 0.01%)</title><rect x="87.6693%" y="277" width="0.0140%" height="15" fill="rgb(249,75,3)" fg:x="6278" fg:w="1"/><text x="87.9193%" y="287.50"></text></g><g><title>omelette`&lt;timely::dataflow::operators::capability::Capability&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="87.6693%" y="261" width="0.0140%" height="15" fill="rgb(219,67,39)" fg:x="6278" fg:w="1"/><text x="87.9193%" y="271.50"></text></g><g><title>omelette`timely::progress::change_batch::ChangeBatch&lt;T,_&gt;::compact (1 samples, 0.01%)</title><rect x="87.6693%" y="245" width="0.0140%" height="15" fill="rgb(253,228,2)" fg:x="6278" fg:w="1"/><text x="87.9193%" y="255.50"></text></g><g><title>omelette`core::slice::sort::stable::driftsort_main (1 samples, 0.01%)</title><rect x="87.6693%" y="229" width="0.0140%" height="15" fill="rgb(235,138,27)" fg:x="6278" fg:w="1"/><text x="87.9193%" y="239.50"></text></g><g><title>omelette`core::slice::sort::stable::drift::sort (1 samples, 0.01%)</title><rect x="87.6693%" y="213" width="0.0140%" height="15" fill="rgb(236,97,51)" fg:x="6278" fg:w="1"/><text x="87.9193%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="88.2000%" y="261" width="0.0140%" height="15" fill="rgb(240,80,30)" fg:x="6316" fg:w="1"/><text x="88.4500%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="88.2139%" y="261" width="0.0140%" height="15" fill="rgb(230,178,19)" fg:x="6317" fg:w="1"/><text x="88.4639%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="88.2279%" y="261" width="0.0140%" height="15" fill="rgb(210,190,27)" fg:x="6318" fg:w="1"/><text x="88.4779%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="88.2279%" y="245" width="0.0140%" height="15" fill="rgb(222,107,31)" fg:x="6318" fg:w="1"/><text x="88.4779%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="88.2419%" y="261" width="0.0140%" height="15" fill="rgb(216,127,34)" fg:x="6319" fg:w="1"/><text x="88.4919%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="88.2558%" y="213" width="0.0140%" height="15" fill="rgb(234,116,52)" fg:x="6320" fg:w="1"/><text x="88.5058%" y="223.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (1 samples, 0.01%)</title><rect x="88.2698%" y="181" width="0.0140%" height="15" fill="rgb(222,124,15)" fg:x="6321" fg:w="1"/><text x="88.5198%" y="191.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (3 samples, 0.04%)</title><rect x="88.2838%" y="181" width="0.0419%" height="15" fill="rgb(231,179,28)" fg:x="6322" fg:w="3"/><text x="88.5338%" y="191.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (2 samples, 0.03%)</title><rect x="88.3675%" y="165" width="0.0279%" height="15" fill="rgb(226,93,45)" fg:x="6328" fg:w="2"/><text x="88.6175%" y="175.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (1 samples, 0.01%)</title><rect x="88.3955%" y="165" width="0.0140%" height="15" fill="rgb(215,8,51)" fg:x="6330" fg:w="1"/><text x="88.6455%" y="175.50"></text></g><g><title>omelette`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.01%)</title><rect x="88.4374%" y="149" width="0.0140%" height="15" fill="rgb(223,106,5)" fg:x="6333" fg:w="1"/><text x="88.6874%" y="159.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="88.4374%" y="133" width="0.0140%" height="15" fill="rgb(250,191,5)" fg:x="6333" fg:w="1"/><text x="88.6874%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.01%)</title><rect x="88.4374%" y="117" width="0.0140%" height="15" fill="rgb(242,132,44)" fg:x="6333" fg:w="1"/><text x="88.6874%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.01%)</title><rect x="88.4374%" y="101" width="0.0140%" height="15" fill="rgb(251,152,29)" fg:x="6333" fg:w="1"/><text x="88.6874%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="88.4374%" y="85" width="0.0140%" height="15" fill="rgb(218,179,5)" fg:x="6333" fg:w="1"/><text x="88.6874%" y="95.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::consolidate_updates (5 samples, 0.07%)</title><rect x="88.4094%" y="165" width="0.0698%" height="15" fill="rgb(227,67,19)" fg:x="6331" fg:w="5"/><text x="88.6594%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (2 samples, 0.03%)</title><rect x="88.4513%" y="149" width="0.0279%" height="15" fill="rgb(233,119,31)" fg:x="6334" fg:w="2"/><text x="88.7013%" y="159.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (1 samples, 0.01%)</title><rect x="88.4932%" y="149" width="0.0140%" height="15" fill="rgb(241,120,22)" fg:x="6337" fg:w="1"/><text x="88.7432%" y="159.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (1 samples, 0.01%)</title><rect x="88.5072%" y="149" width="0.0140%" height="15" fill="rgb(224,102,30)" fg:x="6338" fg:w="1"/><text x="88.7572%" y="159.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::copy_key (4 samples, 0.06%)</title><rect x="88.4793%" y="165" width="0.0559%" height="15" fill="rgb(210,164,37)" fg:x="6336" fg:w="4"/><text x="88.7293%" y="175.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::consolidate_updates (1 samples, 0.01%)</title><rect x="88.5212%" y="149" width="0.0140%" height="15" fill="rgb(226,191,16)" fg:x="6339" fg:w="1"/><text x="88.7712%" y="159.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (1 samples, 0.01%)</title><rect x="88.5212%" y="133" width="0.0140%" height="15" fill="rgb(214,40,45)" fg:x="6339" fg:w="1"/><text x="88.7712%" y="143.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt; as differential_dataflow::trace::Merger&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;L&gt;&gt;&gt;::work (19 samples, 0.27%)</title><rect x="88.3257%" y="181" width="0.2653%" height="15" fill="rgb(244,29,26)" fg:x="6325" fg:w="19"/><text x="88.5757%" y="191.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::stash_updates_for_val (4 samples, 0.06%)</title><rect x="88.5351%" y="165" width="0.0559%" height="15" fill="rgb(216,16,5)" fg:x="6340" fg:w="4"/><text x="88.7851%" y="175.50"></text></g><g><title>omelette`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.03%)</title><rect x="88.7306%" y="149" width="0.0279%" height="15" fill="rgb(249,76,35)" fg:x="6354" fg:w="2"/><text x="88.9806%" y="159.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="88.7306%" y="133" width="0.0279%" height="15" fill="rgb(207,11,44)" fg:x="6354" fg:w="2"/><text x="88.9806%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.03%)</title><rect x="88.7306%" y="117" width="0.0279%" height="15" fill="rgb(228,190,49)" fg:x="6354" fg:w="2"/><text x="88.9806%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.03%)</title><rect x="88.7306%" y="101" width="0.0279%" height="15" fill="rgb(214,173,12)" fg:x="6354" fg:w="2"/><text x="88.9806%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.03%)</title><rect x="88.7306%" y="85" width="0.0279%" height="15" fill="rgb(218,26,35)" fg:x="6354" fg:w="2"/><text x="88.9806%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (2 samples, 0.03%)</title><rect x="88.7306%" y="69" width="0.0279%" height="15" fill="rgb(220,200,19)" fg:x="6354" fg:w="2"/><text x="88.9806%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.03%)</title><rect x="88.7306%" y="53" width="0.0279%" height="15" fill="rgb(239,95,49)" fg:x="6354" fg:w="2"/><text x="88.9806%" y="63.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (2 samples, 0.03%)</title><rect x="88.7586%" y="149" width="0.0279%" height="15" fill="rgb(235,85,53)" fg:x="6356" fg:w="2"/><text x="89.0086%" y="159.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyMerger&lt;L&gt;::consolidate_updates (19 samples, 0.27%)</title><rect x="88.6468%" y="165" width="0.2653%" height="15" fill="rgb(233,133,31)" fg:x="6348" fg:w="19"/><text x="88.8968%" y="175.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (9 samples, 0.13%)</title><rect x="88.7865%" y="149" width="0.1257%" height="15" fill="rgb(218,25,20)" fg:x="6358" fg:w="9"/><text x="89.0365%" y="159.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::rc_blanket_impls::RcMerger&lt;B&gt; as differential_dataflow::trace::Merger&lt;alloc::rc::Rc&lt;B&gt;&gt;&gt;::work (32 samples, 0.45%)</title><rect x="88.5910%" y="181" width="0.4469%" height="15" fill="rgb(252,210,38)" fg:x="6344" fg:w="32"/><text x="88.8410%" y="191.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyMerger&lt;L&gt;::stash_updates_for_key (9 samples, 0.13%)</title><rect x="88.9122%" y="165" width="0.1257%" height="15" fill="rgb(242,134,21)" fg:x="6367" fg:w="9"/><text x="89.1622%" y="175.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyMerger&lt;L&gt;::stash_updates_for_key (1 samples, 0.01%)</title><rect x="89.0378%" y="181" width="0.0140%" height="15" fill="rgb(213,28,48)" fg:x="6376" fg:w="1"/><text x="89.2878%" y="191.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::MergeVariant&lt;B&gt;::work (57 samples, 0.80%)</title><rect x="88.2698%" y="197" width="0.7960%" height="15" fill="rgb(250,196,2)" fg:x="6321" fg:w="57"/><text x="88.5198%" y="207.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::stash_updates_for_val (1 samples, 0.01%)</title><rect x="89.0518%" y="181" width="0.0140%" height="15" fill="rgb(227,5,17)" fg:x="6377" fg:w="1"/><text x="89.3018%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (2 samples, 0.03%)</title><rect x="89.0658%" y="165" width="0.0279%" height="15" fill="rgb(221,226,24)" fg:x="6378" fg:w="2"/><text x="89.3158%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.03%)</title><rect x="89.0658%" y="149" width="0.0279%" height="15" fill="rgb(211,5,48)" fg:x="6378" fg:w="2"/><text x="89.3158%" y="159.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::Spine&lt;B&gt;::apply_fuel (60 samples, 0.84%)</title><rect x="88.2698%" y="213" width="0.8379%" height="15" fill="rgb(219,150,6)" fg:x="6321" fg:w="60"/><text x="88.5198%" y="223.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::Spine&lt;B&gt;::complete_at (3 samples, 0.04%)</title><rect x="89.0658%" y="197" width="0.0419%" height="15" fill="rgb(251,46,16)" fg:x="6378" fg:w="3"/><text x="89.3158%" y="207.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Class,omelette::Class),timely::order::product::Product&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,u64&gt;,isize)&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="89.0658%" y="181" width="0.0419%" height="15" fill="rgb(220,204,40)" fg:x="6378" fg:w="3"/><text x="89.3158%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="89.0937%" y="165" width="0.0140%" height="15" fill="rgb(211,85,2)" fg:x="6380" fg:w="1"/><text x="89.3437%" y="175.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::consolidate_updates (2 samples, 0.03%)</title><rect x="89.1077%" y="165" width="0.0279%" height="15" fill="rgb(229,17,7)" fg:x="6381" fg:w="2"/><text x="89.3577%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (2 samples, 0.03%)</title><rect x="89.1077%" y="149" width="0.0279%" height="15" fill="rgb(239,72,28)" fg:x="6381" fg:w="2"/><text x="89.3577%" y="159.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (1 samples, 0.01%)</title><rect x="89.1356%" y="149" width="0.0140%" height="15" fill="rgb(230,47,54)" fg:x="6383" fg:w="1"/><text x="89.3856%" y="159.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (1 samples, 0.01%)</title><rect x="89.1496%" y="149" width="0.0140%" height="15" fill="rgb(214,50,8)" fg:x="6384" fg:w="1"/><text x="89.3996%" y="159.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt; as differential_dataflow::trace::Merger&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;L&gt;&gt;&gt;::work (5 samples, 0.07%)</title><rect x="89.1077%" y="181" width="0.0698%" height="15" fill="rgb(216,198,43)" fg:x="6381" fg:w="5"/><text x="89.3577%" y="191.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::copy_key (3 samples, 0.04%)</title><rect x="89.1356%" y="165" width="0.0419%" height="15" fill="rgb(234,20,35)" fg:x="6383" fg:w="3"/><text x="89.3856%" y="175.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::stash_updates_for_val (1 samples, 0.01%)</title><rect x="89.1635%" y="149" width="0.0140%" height="15" fill="rgb(254,45,19)" fg:x="6385" fg:w="1"/><text x="89.4135%" y="159.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (1 samples, 0.01%)</title><rect x="89.2194%" y="165" width="0.0140%" height="15" fill="rgb(219,14,44)" fg:x="6389" fg:w="1"/><text x="89.4694%" y="175.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::rc_blanket_impls::RcMerger&lt;B&gt; as differential_dataflow::trace::Merger&lt;alloc::rc::Rc&lt;B&gt;&gt;&gt;::work (5 samples, 0.07%)</title><rect x="89.1775%" y="181" width="0.0698%" height="15" fill="rgb(217,220,26)" fg:x="6386" fg:w="5"/><text x="89.4275%" y="191.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyMerger&lt;L&gt;::consolidate_updates (1 samples, 0.01%)</title><rect x="89.2333%" y="165" width="0.0140%" height="15" fill="rgb(213,158,28)" fg:x="6390" fg:w="1"/><text x="89.4833%" y="175.50"></text></g><g><title>omelette`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.01%)</title><rect x="89.2333%" y="149" width="0.0140%" height="15" fill="rgb(252,51,52)" fg:x="6390" fg:w="1"/><text x="89.4833%" y="159.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="89.2333%" y="133" width="0.0140%" height="15" fill="rgb(246,89,16)" fg:x="6390" fg:w="1"/><text x="89.4833%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.01%)</title><rect x="89.2333%" y="117" width="0.0140%" height="15" fill="rgb(216,158,49)" fg:x="6390" fg:w="1"/><text x="89.4833%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.01%)</title><rect x="89.2333%" y="101" width="0.0140%" height="15" fill="rgb(236,107,19)" fg:x="6390" fg:w="1"/><text x="89.4833%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="89.2333%" y="85" width="0.0140%" height="15" fill="rgb(228,185,30)" fg:x="6390" fg:w="1"/><text x="89.4833%" y="95.50"></text></g><g><title>omelette`&lt;differential_dataflow::operators::arrange::agent::TraceAgent&lt;Tr&gt; as differential_dataflow::trace::TraceReader&gt;::set_physical_compaction (72 samples, 1.01%)</title><rect x="88.2558%" y="261" width="1.0054%" height="15" fill="rgb(246,134,8)" fg:x="6320" fg:w="72"/><text x="88.5058%" y="271.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::Spine&lt;B&gt;::consider_merges (72 samples, 1.01%)</title><rect x="88.2558%" y="245" width="1.0054%" height="15" fill="rgb(214,143,50)" fg:x="6320" fg:w="72"/><text x="88.5058%" y="255.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::Spine&lt;B&gt;::introduce_batch (72 samples, 1.01%)</title><rect x="88.2558%" y="229" width="1.0054%" height="15" fill="rgb(228,75,8)" fg:x="6320" fg:w="72"/><text x="88.5058%" y="239.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::Spine&lt;B&gt;::complete_at (11 samples, 0.15%)</title><rect x="89.1077%" y="213" width="0.1536%" height="15" fill="rgb(207,175,4)" fg:x="6381" fg:w="11"/><text x="89.3577%" y="223.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::spine_fueled::MergeVariant&lt;B&gt;::work (11 samples, 0.15%)</title><rect x="89.1077%" y="197" width="0.1536%" height="15" fill="rgb(205,108,24)" fg:x="6381" fg:w="11"/><text x="89.3577%" y="207.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValMerger&lt;L&gt;::stash_updates_for_val (1 samples, 0.01%)</title><rect x="89.2473%" y="181" width="0.0140%" height="15" fill="rgb(244,120,49)" fg:x="6391" fg:w="1"/><text x="89.4973%" y="191.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (3 samples, 0.04%)</title><rect x="89.4568%" y="245" width="0.0419%" height="15" fill="rgb(223,47,38)" fg:x="6406" fg:w="3"/><text x="89.7068%" y="255.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (2 samples, 0.03%)</title><rect x="89.4987%" y="245" width="0.0279%" height="15" fill="rgb(229,179,11)" fg:x="6409" fg:w="2"/><text x="89.7487%" y="255.50"></text></g><g><title>omelette`differential_dataflow::operators::HistoryReplay&lt;C&gt;::step_while_time_is (3 samples, 0.04%)</title><rect x="89.5266%" y="245" width="0.0419%" height="15" fill="rgb(231,122,1)" fg:x="6411" fg:w="3"/><text x="89.7766%" y="255.50"></text></g><g><title>omelette`differential_dataflow::operators::ValueHistory&lt;C&gt;::replay (1 samples, 0.01%)</title><rect x="89.5685%" y="245" width="0.0140%" height="15" fill="rgb(245,119,9)" fg:x="6414" fg:w="1"/><text x="89.8185%" y="255.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (5 samples, 0.07%)</title><rect x="89.8478%" y="229" width="0.0698%" height="15" fill="rgb(241,163,25)" fg:x="6434" fg:w="5"/><text x="90.0978%" y="239.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (9 samples, 0.13%)</title><rect x="89.9176%" y="229" width="0.1257%" height="15" fill="rgb(217,214,3)" fg:x="6439" fg:w="9"/><text x="90.1676%" y="239.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (1 samples, 0.01%)</title><rect x="90.1550%" y="213" width="0.0140%" height="15" fill="rgb(240,86,28)" fg:x="6456" fg:w="1"/><text x="90.4050%" y="223.50"></text></g><g><title>omelette`differential_dataflow::operators::ValueHistory&lt;C&gt;::replay (10 samples, 0.14%)</title><rect x="90.0433%" y="229" width="0.1396%" height="15" fill="rgb(215,47,9)" fg:x="6448" fg:w="10"/><text x="90.2933%" y="239.50"></text></g><g><title>omelette`core::tuple::_&lt;impl core::cmp::Ord for (W,V,U,T)&gt;::cmp (1 samples, 0.01%)</title><rect x="90.1690%" y="213" width="0.0140%" height="15" fill="rgb(252,25,45)" fg:x="6457" fg:w="1"/><text x="90.4190%" y="223.50"></text></g><g><title>omelette`differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt;::minimize_keys (11 samples, 0.15%)</title><rect x="90.1829%" y="229" width="0.1536%" height="15" fill="rgb(251,164,9)" fg:x="6458" fg:w="11"/><text x="90.4329%" y="239.50"></text></g><g><title>omelette`differential_dataflow::operators::ValueHistory&lt;C&gt;::replay_key (82 samples, 1.15%)</title><rect x="89.5825%" y="245" width="1.1451%" height="15" fill="rgb(233,194,0)" fg:x="6415" fg:w="82"/><text x="89.8325%" y="255.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::containers::BatchContainer::advance (28 samples, 0.39%)</title><rect x="90.3365%" y="229" width="0.3910%" height="15" fill="rgb(249,111,24)" fg:x="6469" fg:w="28"/><text x="90.5865%" y="239.50"></text></g><g><title>omelette`differential_dataflow::operators::reduce::sort_dedup (3 samples, 0.04%)</title><rect x="90.7276%" y="245" width="0.0419%" height="15" fill="rgb(250,223,3)" fg:x="6497" fg:w="3"/><text x="90.9776%" y="255.50"></text></g><g><title>omelette`differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt;::minimize_keys (1 samples, 0.01%)</title><rect x="90.7694%" y="245" width="0.0140%" height="15" fill="rgb(236,178,37)" fg:x="6500" fg:w="1"/><text x="91.0194%" y="255.50"></text></g><g><title>omelette`&lt;differential_dataflow::operators::reduce::history_replay::HistoryReplayer&lt;C1,C2,C3,V&gt; as differential_dataflow::operators::reduce::PerKeyCompute&lt;C1,C2,C3,V&gt;&gt;::compute (114 samples, 1.59%)</title><rect x="89.2613%" y="261" width="1.5920%" height="15" fill="rgb(241,158,50)" fg:x="6392" fg:w="114"/><text x="89.5113%" y="271.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::containers::BatchContainer::advance (5 samples, 0.07%)</title><rect x="90.7834%" y="245" width="0.0698%" height="15" fill="rgb(213,121,41)" fg:x="6501" fg:w="5"/><text x="91.0334%" y="255.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (9 samples, 0.13%)</title><rect x="90.8532%" y="261" width="0.1257%" height="15" fill="rgb(240,92,3)" fg:x="6506" fg:w="9"/><text x="91.1032%" y="271.50"></text></g><g><title>omelette`core::slice::sort::unstable::ipnsort (5 samples, 0.07%)</title><rect x="91.1744%" y="229" width="0.0698%" height="15" fill="rgb(205,123,3)" fg:x="6529" fg:w="5"/><text x="91.4244%" y="239.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (12 samples, 0.17%)</title><rect x="91.5934%" y="213" width="0.1676%" height="15" fill="rgb(205,97,47)" fg:x="6559" fg:w="12"/><text x="91.8434%" y="223.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::choose_pivot (1 samples, 0.01%)</title><rect x="92.4033%" y="197" width="0.0140%" height="15" fill="rgb(247,152,14)" fg:x="6617" fg:w="1"/><text x="92.6533%" y="207.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::median3_rec (1 samples, 0.01%)</title><rect x="92.4033%" y="181" width="0.0140%" height="15" fill="rgb(248,195,53)" fg:x="6617" fg:w="1"/><text x="92.6533%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::median3_rec (1 samples, 0.01%)</title><rect x="92.4033%" y="165" width="0.0140%" height="15" fill="rgb(226,201,16)" fg:x="6617" fg:w="1"/><text x="92.6533%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::median3_rec (1 samples, 0.01%)</title><rect x="92.4173%" y="197" width="0.0140%" height="15" fill="rgb(205,98,0)" fg:x="6618" fg:w="1"/><text x="92.6673%" y="207.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (24 samples, 0.34%)</title><rect x="92.4312%" y="197" width="0.3351%" height="15" fill="rgb(214,191,48)" fg:x="6619" fg:w="24"/><text x="92.6812%" y="207.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::sort4_stable (2 samples, 0.03%)</title><rect x="92.7664%" y="197" width="0.0279%" height="15" fill="rgb(237,112,39)" fg:x="6643" fg:w="2"/><text x="93.0164%" y="207.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::choose_pivot (3 samples, 0.04%)</title><rect x="93.3389%" y="181" width="0.0419%" height="15" fill="rgb(247,203,27)" fg:x="6684" fg:w="3"/><text x="93.5889%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::median3_rec (2 samples, 0.03%)</title><rect x="93.3529%" y="165" width="0.0279%" height="15" fill="rgb(235,124,28)" fg:x="6685" fg:w="2"/><text x="93.6029%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::median3_rec (1 samples, 0.01%)</title><rect x="93.3668%" y="149" width="0.0140%" height="15" fill="rgb(208,207,46)" fg:x="6686" fg:w="1"/><text x="93.6168%" y="159.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::median3_rec (1 samples, 0.01%)</title><rect x="93.3808%" y="181" width="0.0140%" height="15" fill="rgb(234,176,4)" fg:x="6687" fg:w="1"/><text x="93.6308%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (33 samples, 0.46%)</title><rect x="93.3948%" y="181" width="0.4608%" height="15" fill="rgb(230,133,28)" fg:x="6688" fg:w="33"/><text x="93.6448%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::sort4_stable (3 samples, 0.04%)</title><rect x="93.8556%" y="181" width="0.0419%" height="15" fill="rgb(211,137,40)" fg:x="6721" fg:w="3"/><text x="94.1056%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::choose_pivot (1 samples, 0.01%)</title><rect x="94.2187%" y="165" width="0.0140%" height="15" fill="rgb(254,35,13)" fg:x="6747" fg:w="1"/><text x="94.4687%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::median3_rec (1 samples, 0.01%)</title><rect x="94.2187%" y="149" width="0.0140%" height="15" fill="rgb(225,49,51)" fg:x="6747" fg:w="1"/><text x="94.4687%" y="159.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (24 samples, 0.34%)</title><rect x="94.2326%" y="165" width="0.3351%" height="15" fill="rgb(251,10,15)" fg:x="6748" fg:w="24"/><text x="94.4826%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::sort4_stable (2 samples, 0.03%)</title><rect x="94.5678%" y="165" width="0.0279%" height="15" fill="rgb(228,207,15)" fg:x="6772" fg:w="2"/><text x="94.8178%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::choose_pivot (1 samples, 0.01%)</title><rect x="94.6376%" y="149" width="0.0140%" height="15" fill="rgb(241,99,19)" fg:x="6777" fg:w="1"/><text x="94.8876%" y="159.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::chunker::VecChunker&lt;((K,V),T,R)&gt; as timely_container::PushInto&lt;&amp;mut alloc::vec::Vec&lt;((K,V),T,R)&gt;&gt;&gt;::push_into (270 samples, 3.77%)</title><rect x="90.9789%" y="245" width="3.7704%" height="15" fill="rgb(207,104,49)" fg:x="6515" fg:w="270"/><text x="91.2289%" y="255.50">omel..</text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_updates_from (251 samples, 3.51%)</title><rect x="91.2442%" y="229" width="3.5051%" height="15" fill="rgb(234,99,18)" fg:x="6534" fg:w="251"/><text x="91.4942%" y="239.50">ome..</text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (214 samples, 2.99%)</title><rect x="91.7609%" y="213" width="2.9884%" height="15" fill="rgb(213,191,49)" fg:x="6571" fg:w="214"/><text x="92.0109%" y="223.50">ome..</text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (140 samples, 1.96%)</title><rect x="92.7943%" y="197" width="1.9550%" height="15" fill="rgb(210,226,19)" fg:x="6645" fg:w="140"/><text x="93.0443%" y="207.50">o..</text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (61 samples, 0.85%)</title><rect x="93.8975%" y="181" width="0.8518%" height="15" fill="rgb(229,97,18)" fg:x="6724" fg:w="61"/><text x="94.1475%" y="191.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (11 samples, 0.15%)</title><rect x="94.5957%" y="165" width="0.1536%" height="15" fill="rgb(211,167,15)" fg:x="6774" fg:w="11"/><text x="94.8457%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (7 samples, 0.10%)</title><rect x="94.6516%" y="149" width="0.0978%" height="15" fill="rgb(210,169,34)" fg:x="6778" fg:w="7"/><text x="94.9016%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="94.7633%" y="213" width="0.0140%" height="15" fill="rgb(241,121,31)" fg:x="6786" fg:w="1"/><text x="95.0133%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="96.6345%" y="197" width="0.0140%" height="15" fill="rgb(232,40,11)" fg:x="6920" fg:w="1"/><text x="96.8845%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.01%)</title><rect x="96.6485%" y="197" width="0.0140%" height="15" fill="rgb(205,86,26)" fg:x="6921" fg:w="1"/><text x="96.8985%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (1 samples, 0.01%)</title><rect x="96.6485%" y="181" width="0.0140%" height="15" fill="rgb(231,126,28)" fg:x="6921" fg:w="1"/><text x="96.8985%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="96.6485%" y="165" width="0.0140%" height="15" fill="rgb(219,221,18)" fg:x="6921" fg:w="1"/><text x="96.8985%" y="175.50"></text></g><g><title>omelette`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::make_contiguous (1 samples, 0.01%)</title><rect x="96.6625%" y="197" width="0.0140%" height="15" fill="rgb(211,40,0)" fg:x="6922" fg:w="1"/><text x="96.9125%" y="207.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::merge_batcher::MergeBatcher&lt;Input,C,M&gt; as differential_dataflow::trace::Batcher&gt;::push_container (409 samples, 5.71%)</title><rect x="90.9789%" y="261" width="5.7115%" height="15" fill="rgb(239,85,43)" fg:x="6515" fg:w="409"/><text x="91.2289%" y="271.50">omelett..</text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::MergeBatcher&lt;Input,C,M&gt;::insert_chain (139 samples, 1.94%)</title><rect x="94.7493%" y="245" width="1.9411%" height="15" fill="rgb(231,55,21)" fg:x="6785" fg:w="139"/><text x="94.9993%" y="255.50">o..</text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::MergeBatcher&lt;Input,C,M&gt;::merge_by (138 samples, 1.93%)</title><rect x="94.7633%" y="229" width="1.9271%" height="15" fill="rgb(225,184,43)" fg:x="6786" fg:w="138"/><text x="95.0133%" y="239.50">o..</text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::merge_batcher::container::ContainerMerger&lt;MC,CQ&gt; as differential_dataflow::trace::implementations::merge_batcher::Merger&gt;::merge (137 samples, 1.91%)</title><rect x="94.7773%" y="213" width="1.9131%" height="15" fill="rgb(251,158,41)" fg:x="6787" fg:w="137"/><text x="95.0273%" y="223.50">o..</text></g><g><title>omelette`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="96.6764%" y="197" width="0.0140%" height="15" fill="rgb(234,159,37)" fg:x="6923" fg:w="1"/><text x="96.9264%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="96.6764%" y="181" width="0.0140%" height="15" fill="rgb(216,204,22)" fg:x="6923" fg:w="1"/><text x="96.9264%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.03%)</title><rect x="96.6904%" y="245" width="0.0279%" height="15" fill="rgb(214,17,3)" fg:x="6924" fg:w="2"/><text x="96.9404%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (2 samples, 0.03%)</title><rect x="96.6904%" y="229" width="0.0279%" height="15" fill="rgb(212,111,17)" fg:x="6924" fg:w="2"/><text x="96.9404%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.03%)</title><rect x="96.6904%" y="213" width="0.0279%" height="15" fill="rgb(221,157,24)" fg:x="6924" fg:w="2"/><text x="96.9404%" y="223.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::merge_batcher::container::ContainerMerger&lt;MC,CQ&gt; as differential_dataflow::trace::implementations::merge_batcher::Merger&gt;::extract (10 samples, 0.14%)</title><rect x="96.7183%" y="245" width="0.1396%" height="15" fill="rgb(252,16,13)" fg:x="6926" fg:w="10"/><text x="96.9683%" y="255.50"></text></g><g><title>omelette`timely::progress::frontier::Antichain&lt;T&gt;::insert_with (3 samples, 0.04%)</title><rect x="96.8161%" y="229" width="0.0419%" height="15" fill="rgb(221,62,2)" fg:x="6933" fg:w="3"/><text x="97.0661%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.01%)</title><rect x="96.9697%" y="229" width="0.0140%" height="15" fill="rgb(247,87,22)" fg:x="6944" fg:w="1"/><text x="97.2197%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.01%)</title><rect x="96.9697%" y="213" width="0.0140%" height="15" fill="rgb(215,73,9)" fg:x="6944" fg:w="1"/><text x="97.2197%" y="223.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBuilder&lt;L,CI&gt; as differential_dataflow::trace::Builder&gt;::seal (11 samples, 0.15%)</title><rect x="96.8580%" y="245" width="0.1536%" height="15" fill="rgb(207,175,33)" fg:x="6936" fg:w="11"/><text x="97.1080%" y="255.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (2 samples, 0.03%)</title><rect x="96.9837%" y="229" width="0.0279%" height="15" fill="rgb(243,129,54)" fg:x="6945" fg:w="2"/><text x="97.2337%" y="239.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (1 samples, 0.01%)</title><rect x="97.0256%" y="229" width="0.0140%" height="15" fill="rgb(227,119,45)" fg:x="6948" fg:w="1"/><text x="97.2756%" y="239.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as timely_container::PushInto&lt;usize&gt;&gt;::push_into (1 samples, 0.01%)</title><rect x="97.0535%" y="213" width="0.0140%" height="15" fill="rgb(205,109,36)" fg:x="6950" fg:w="1"/><text x="97.3035%" y="223.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::rc_blanket_impls::RcBuilder&lt;B&gt; as differential_dataflow::trace::Builder&gt;::seal (5 samples, 0.07%)</title><rect x="97.0116%" y="245" width="0.0698%" height="15" fill="rgb(205,6,39)" fg:x="6947" fg:w="5"/><text x="97.2616%" y="255.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBuilder&lt;L,CI&gt; as differential_dataflow::trace::Builder&gt;::push (3 samples, 0.04%)</title><rect x="97.0395%" y="229" width="0.0419%" height="15" fill="rgb(221,32,16)" fg:x="6949" fg:w="3"/><text x="97.2895%" y="239.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBuilder&lt;L,CI&gt;::push_update (1 samples, 0.01%)</title><rect x="97.0674%" y="213" width="0.0140%" height="15" fill="rgb(228,144,50)" fg:x="6951" fg:w="1"/><text x="97.3174%" y="223.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::merge_batcher::MergeBatcher&lt;Input,C,M&gt; as differential_dataflow::trace::Batcher&gt;::seal (40 samples, 0.56%)</title><rect x="96.6904%" y="261" width="0.5586%" height="15" fill="rgb(229,201,53)" fg:x="6924" fg:w="40"/><text x="96.9404%" y="271.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::merge_batcher::MergeBatcher&lt;Input,C,M&gt;::merge_by (12 samples, 0.17%)</title><rect x="97.0814%" y="245" width="0.1676%" height="15" fill="rgb(249,153,27)" fg:x="6952" fg:w="12"/><text x="97.3314%" y="255.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::merge_batcher::container::ContainerMerger&lt;MC,CQ&gt; as differential_dataflow::trace::implementations::merge_batcher::Merger&gt;::merge (12 samples, 0.17%)</title><rect x="97.0814%" y="229" width="0.1676%" height="15" fill="rgb(227,106,25)" fg:x="6952" fg:w="12"/><text x="97.3314%" y="239.50"></text></g><g><title>omelette`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="97.2490%" y="261" width="0.0140%" height="15" fill="rgb(230,65,29)" fg:x="6964" fg:w="1"/><text x="97.4990%" y="271.50"></text></g><g><title>omelette`&lt;timely::dataflow::channels::pullers::counter::ConsumedGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="97.2630%" y="261" width="0.0140%" height="15" fill="rgb(221,57,46)" fg:x="6965" fg:w="1"/><text x="97.5130%" y="271.50"></text></g><g><title>omelette`&lt;timely::dataflow::channels::pushers::counter::Counter&lt;T,C,P&gt; as timely_communication::Push&lt;timely::dataflow::channels::Message&lt;T,C&gt;&gt;&gt;::push (1 samples, 0.01%)</title><rect x="97.2769%" y="261" width="0.0140%" height="15" fill="rgb(229,161,17)" fg:x="6966" fg:w="1"/><text x="97.5269%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="97.3188%" y="245" width="0.0140%" height="15" fill="rgb(222,213,11)" fg:x="6969" fg:w="1"/><text x="97.5688%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (2 samples, 0.03%)</title><rect x="97.3467%" y="229" width="0.0279%" height="15" fill="rgb(235,35,13)" fg:x="6971" fg:w="2"/><text x="97.5967%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_reattach_region (1 samples, 0.01%)</title><rect x="97.3747%" y="229" width="0.0140%" height="15" fill="rgb(233,158,34)" fg:x="6973" fg:w="1"/><text x="97.6247%" y="239.50"></text></g><g><title>omelette`&lt;timely_communication::allocator::counters::Puller&lt;T,P&gt; as timely_communication::Pull&lt;T&gt;&gt;::pull (8 samples, 0.11%)</title><rect x="97.2909%" y="261" width="0.1117%" height="15" fill="rgb(215,151,48)" fg:x="6967" fg:w="8"/><text x="97.5409%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.07%)</title><rect x="97.3328%" y="245" width="0.0698%" height="15" fill="rgb(229,84,14)" fg:x="6970" fg:w="5"/><text x="97.5828%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (1 samples, 0.01%)</title><rect x="97.3886%" y="229" width="0.0140%" height="15" fill="rgb(229,68,14)" fg:x="6974" fg:w="1"/><text x="97.6386%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="97.3886%" y="213" width="0.0140%" height="15" fill="rgb(243,106,26)" fg:x="6974" fg:w="1"/><text x="97.6386%" y="223.50"></text></g><g><title>omelette`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.01%)</title><rect x="97.4026%" y="261" width="0.0140%" height="15" fill="rgb(206,45,38)" fg:x="6975" fg:w="1"/><text x="97.6526%" y="271.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="97.4026%" y="245" width="0.0140%" height="15" fill="rgb(226,6,15)" fg:x="6975" fg:w="1"/><text x="97.6526%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.01%)</title><rect x="97.4026%" y="229" width="0.0140%" height="15" fill="rgb(232,22,54)" fg:x="6975" fg:w="1"/><text x="97.6526%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.01%)</title><rect x="97.4026%" y="213" width="0.0140%" height="15" fill="rgb(229,222,32)" fg:x="6975" fg:w="1"/><text x="97.6526%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.01%)</title><rect x="97.4026%" y="197" width="0.0140%" height="15" fill="rgb(228,62,29)" fg:x="6975" fg:w="1"/><text x="97.6526%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (1 samples, 0.01%)</title><rect x="97.4026%" y="181" width="0.0140%" height="15" fill="rgb(251,103,34)" fg:x="6975" fg:w="1"/><text x="97.6526%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1 samples, 0.01%)</title><rect x="97.4026%" y="165" width="0.0140%" height="15" fill="rgb(233,12,30)" fg:x="6975" fg:w="1"/><text x="97.6526%" y="175.50"></text></g><g><title>omelette`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (5 samples, 0.07%)</title><rect x="97.4166%" y="261" width="0.0698%" height="15" fill="rgb(238,52,0)" fg:x="6976" fg:w="5"/><text x="97.6666%" y="271.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (5 samples, 0.07%)</title><rect x="97.4166%" y="245" width="0.0698%" height="15" fill="rgb(223,98,5)" fg:x="6976" fg:w="5"/><text x="97.6666%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.07%)</title><rect x="97.4166%" y="229" width="0.0698%" height="15" fill="rgb(228,75,37)" fg:x="6976" fg:w="5"/><text x="97.6666%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (3 samples, 0.04%)</title><rect x="97.4445%" y="213" width="0.0419%" height="15" fill="rgb(205,115,49)" fg:x="6978" fg:w="3"/><text x="97.6945%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (3 samples, 0.04%)</title><rect x="97.4445%" y="197" width="0.0419%" height="15" fill="rgb(250,154,43)" fg:x="6978" fg:w="3"/><text x="97.6945%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (2 samples, 0.03%)</title><rect x="97.4585%" y="181" width="0.0279%" height="15" fill="rgb(226,43,29)" fg:x="6979" fg:w="2"/><text x="97.7085%" y="191.50"></text></g><g><title>omelette`alloc::vec::Vec&lt;T,A&gt;::dedup_by (2 samples, 0.03%)</title><rect x="97.4864%" y="261" width="0.0279%" height="15" fill="rgb(249,228,39)" fg:x="6981" fg:w="2"/><text x="97.7364%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.01%)</title><rect x="97.5422%" y="181" width="0.0140%" height="15" fill="rgb(216,79,43)" fg:x="6985" fg:w="1"/><text x="97.7922%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="97.5422%" y="165" width="0.0140%" height="15" fill="rgb(228,95,12)" fg:x="6985" fg:w="1"/><text x="97.7922%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="97.5422%" y="149" width="0.0140%" height="15" fill="rgb(249,221,15)" fg:x="6985" fg:w="1"/><text x="97.7922%" y="159.50"></text></g><g><title>omelette`core::iter::traits::iterator::Iterator::partition (4 samples, 0.06%)</title><rect x="97.5143%" y="261" width="0.0559%" height="15" fill="rgb(233,34,13)" fg:x="6983" fg:w="4"/><text x="97.7643%" y="271.50"></text></g><g><title>omelette`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.03%)</title><rect x="97.5422%" y="245" width="0.0279%" height="15" fill="rgb(214,103,39)" fg:x="6985" fg:w="2"/><text x="97.7922%" y="255.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="97.5422%" y="229" width="0.0279%" height="15" fill="rgb(251,126,39)" fg:x="6985" fg:w="2"/><text x="97.7922%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.03%)</title><rect x="97.5422%" y="213" width="0.0279%" height="15" fill="rgb(214,216,36)" fg:x="6985" fg:w="2"/><text x="97.7922%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.03%)</title><rect x="97.5422%" y="197" width="0.0279%" height="15" fill="rgb(220,221,8)" fg:x="6985" fg:w="2"/><text x="97.7922%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="97.5562%" y="181" width="0.0140%" height="15" fill="rgb(240,216,3)" fg:x="6986" fg:w="1"/><text x="97.8062%" y="191.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;timely::dataflow::operators::capability::InputCapability&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,u64&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="97.5702%" y="261" width="0.0279%" height="15" fill="rgb(232,218,17)" fg:x="6987" fg:w="2"/><text x="97.8202%" y="271.50"></text></g><g><title>omelette`&lt;timely::dataflow::channels::pullers::counter::ConsumedGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="97.5702%" y="245" width="0.0279%" height="15" fill="rgb(229,163,45)" fg:x="6987" fg:w="2"/><text x="97.8202%" y="255.50"></text></g><g><title>omelette`timely::progress::change_batch::ChangeBatch&lt;T,_&gt;::compact (1 samples, 0.01%)</title><rect x="97.5841%" y="229" width="0.0140%" height="15" fill="rgb(231,110,42)" fg:x="6988" fg:w="1"/><text x="97.8341%" y="239.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (2 samples, 0.03%)</title><rect x="97.5981%" y="261" width="0.0279%" height="15" fill="rgb(208,170,48)" fg:x="6989" fg:w="2"/><text x="97.8481%" y="271.50"></text></g><g><title>omelette`differential_dataflow::operators::HistoryReplay&lt;C&gt;::step_while_time_is (1 samples, 0.01%)</title><rect x="97.6260%" y="261" width="0.0140%" height="15" fill="rgb(239,116,25)" fg:x="6991" fg:w="1"/><text x="97.8760%" y="271.50"></text></g><g><title>omelette`differential_dataflow::operators::ValueHistory&lt;C&gt;::replay_key (2 samples, 0.03%)</title><rect x="97.6400%" y="261" width="0.0279%" height="15" fill="rgb(219,200,50)" fg:x="6992" fg:w="2"/><text x="97.8900%" y="271.50"></text></g><g><title>omelette`differential_dataflow::operators::arrange::arrangement::Arranged&lt;G,T1&gt;::join_core_internal_unsafe::_{{closure}} (1 samples, 0.01%)</title><rect x="97.6679%" y="261" width="0.0140%" height="15" fill="rgb(245,200,0)" fg:x="6994" fg:w="1"/><text x="97.9179%" y="271.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt; as differential_dataflow::trace::cursor::Cursor&gt;::seek_key (3 samples, 0.04%)</title><rect x="98.0170%" y="245" width="0.0419%" height="15" fill="rgb(245,119,33)" fg:x="7019" fg:w="3"/><text x="98.2670%" y="255.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::containers::BatchContainer::advance (1 samples, 0.01%)</title><rect x="98.0450%" y="229" width="0.0140%" height="15" fill="rgb(231,125,12)" fg:x="7021" fg:w="1"/><text x="98.2950%" y="239.50"></text></g><g><title>omelette`&lt;differential_dataflow::trace::implementations::OffsetList as differential_dataflow::trace::implementations::containers::BatchContainer&gt;::index (8 samples, 0.11%)</title><rect x="98.0589%" y="245" width="0.1117%" height="15" fill="rgb(216,96,41)" fg:x="7022" fg:w="8"/><text x="98.3089%" y="255.50"></text></g><g><title>omelette`&lt;i64 as differential_dataflow::difference::Multiply&gt;::multiply (2 samples, 0.03%)</title><rect x="98.1706%" y="245" width="0.0279%" height="15" fill="rgb(248,43,45)" fg:x="7030" fg:w="2"/><text x="98.4206%" y="255.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::insert_tail (3 samples, 0.04%)</title><rect x="98.1986%" y="245" width="0.0419%" height="15" fill="rgb(217,222,7)" fg:x="7032" fg:w="3"/><text x="98.4486%" y="255.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_from (1 samples, 0.01%)</title><rect x="98.2405%" y="245" width="0.0140%" height="15" fill="rgb(233,28,6)" fg:x="7035" fg:w="1"/><text x="98.4905%" y="255.50"></text></g><g><title>omelette`&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.04%)</title><rect x="98.2544%" y="229" width="0.0419%" height="15" fill="rgb(231,218,15)" fg:x="7036" fg:w="3"/><text x="98.5044%" y="239.50"></text></g><g><title>omelette`&lt;timely_communication::allocator::counters::Pusher&lt;T,P&gt; as timely_communication::Push&lt;T&gt;&gt;::push (1 samples, 0.01%)</title><rect x="98.2963%" y="229" width="0.0140%" height="15" fill="rgb(226,171,48)" fg:x="7039" fg:w="1"/><text x="98.5463%" y="239.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (1 samples, 0.01%)</title><rect x="98.3801%" y="197" width="0.0140%" height="15" fill="rgb(235,201,9)" fg:x="7045" fg:w="1"/><text x="98.6301%" y="207.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::choose_pivot (1 samples, 0.01%)</title><rect x="98.4499%" y="181" width="0.0140%" height="15" fill="rgb(217,80,15)" fg:x="7050" fg:w="1"/><text x="98.6999%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::median3_rec (1 samples, 0.01%)</title><rect x="98.4499%" y="165" width="0.0140%" height="15" fill="rgb(219,152,8)" fg:x="7050" fg:w="1"/><text x="98.6999%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::median3_rec (1 samples, 0.01%)</title><rect x="98.4499%" y="149" width="0.0140%" height="15" fill="rgb(243,107,38)" fg:x="7050" fg:w="1"/><text x="98.6999%" y="159.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (6 samples, 0.08%)</title><rect x="98.4639%" y="181" width="0.0838%" height="15" fill="rgb(231,17,5)" fg:x="7051" fg:w="6"/><text x="98.7139%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::sort4_stable (1 samples, 0.01%)</title><rect x="98.5477%" y="181" width="0.0140%" height="15" fill="rgb(209,25,54)" fg:x="7057" fg:w="1"/><text x="98.7977%" y="191.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::choose_pivot (2 samples, 0.03%)</title><rect x="98.6035%" y="165" width="0.0279%" height="15" fill="rgb(219,0,2)" fg:x="7061" fg:w="2"/><text x="98.8535%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::median3_rec (2 samples, 0.03%)</title><rect x="98.6035%" y="149" width="0.0279%" height="15" fill="rgb(246,9,5)" fg:x="7061" fg:w="2"/><text x="98.8535%" y="159.50"></text></g><g><title>omelette`core::slice::sort::shared::pivot::median3_rec (2 samples, 0.03%)</title><rect x="98.6035%" y="133" width="0.0279%" height="15" fill="rgb(226,159,4)" fg:x="7061" fg:w="2"/><text x="98.8535%" y="143.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (3 samples, 0.04%)</title><rect x="98.6315%" y="165" width="0.0419%" height="15" fill="rgb(219,175,34)" fg:x="7063" fg:w="3"/><text x="98.8815%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::sort4_stable (1 samples, 0.01%)</title><rect x="98.6734%" y="165" width="0.0140%" height="15" fill="rgb(236,10,46)" fg:x="7066" fg:w="1"/><text x="98.9234%" y="175.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (2 samples, 0.03%)</title><rect x="98.6873%" y="149" width="0.0279%" height="15" fill="rgb(240,211,16)" fg:x="7067" fg:w="2"/><text x="98.9373%" y="159.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::sort4_stable (1 samples, 0.01%)</title><rect x="98.7153%" y="149" width="0.0140%" height="15" fill="rgb(205,3,43)" fg:x="7069" fg:w="1"/><text x="98.9653%" y="159.50"></text></g><g><title>omelette`differential_dataflow::operators::arrange::arrangement::Arranged&lt;G,T1&gt;::join_core_internal_unsafe::_{{closure}} (36 samples, 0.50%)</title><rect x="98.2544%" y="245" width="0.5027%" height="15" fill="rgb(245,7,22)" fg:x="7036" fg:w="36"/><text x="98.5044%" y="255.50"></text></g><g><title>omelette`differential_dataflow::consolidation::ConsolidatingContainerBuilder&lt;alloc::vec::Vec&lt;(D,T,R)&gt;&gt;::consolidate_and_flush_through (32 samples, 0.45%)</title><rect x="98.3103%" y="229" width="0.4469%" height="15" fill="rgb(239,132,32)" fg:x="7040" fg:w="32"/><text x="98.5603%" y="239.50"></text></g><g><title>omelette`differential_dataflow::consolidation::consolidate_updates_from (32 samples, 0.45%)</title><rect x="98.3103%" y="213" width="0.4469%" height="15" fill="rgb(228,202,34)" fg:x="7040" fg:w="32"/><text x="98.5603%" y="223.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (26 samples, 0.36%)</title><rect x="98.3941%" y="197" width="0.3631%" height="15" fill="rgb(254,200,22)" fg:x="7046" fg:w="26"/><text x="98.6441%" y="207.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (14 samples, 0.20%)</title><rect x="98.5617%" y="181" width="0.1955%" height="15" fill="rgb(219,10,39)" fg:x="7058" fg:w="14"/><text x="98.8117%" y="191.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (5 samples, 0.07%)</title><rect x="98.6873%" y="165" width="0.0698%" height="15" fill="rgb(226,210,39)" fg:x="7067" fg:w="5"/><text x="98.9373%" y="175.50"></text></g><g><title>omelette`core::slice::sort::unstable::quicksort::quicksort (2 samples, 0.03%)</title><rect x="98.7292%" y="149" width="0.0279%" height="15" fill="rgb(208,219,16)" fg:x="7070" fg:w="2"/><text x="98.9792%" y="159.50"></text></g><g><title>omelette`core::slice::sort::shared::smallsort::small_sort_general (2 samples, 0.03%)</title><rect x="98.7292%" y="133" width="0.0279%" height="15" fill="rgb(216,158,51)" fg:x="7070" fg:w="2"/><text x="98.9792%" y="143.50"></text></g><g><title>omelette`differential_dataflow::operators::join::Deferred&lt;T,C1,C2&gt;::work (84 samples, 1.17%)</title><rect x="97.6819%" y="261" width="1.1730%" height="15" fill="rgb(233,14,44)" fg:x="6995" fg:w="84"/><text x="97.9319%" y="271.50"></text></g><g><title>omelette`differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt;::minimize_vals (7 samples, 0.10%)</title><rect x="98.7572%" y="245" width="0.0978%" height="15" fill="rgb(237,97,39)" fg:x="7072" fg:w="7"/><text x="99.0072%" y="255.50"></text></g><g><title>omelette`differential_dataflow::operators::reduce::sort_dedup (6 samples, 0.08%)</title><rect x="98.8549%" y="261" width="0.0838%" height="15" fill="rgb(218,198,43)" fg:x="7079" fg:w="6"/><text x="99.1049%" y="271.50"></text></g><g><title>omelette`core::slice::sort::stable::driftsort_main (3 samples, 0.04%)</title><rect x="98.8968%" y="245" width="0.0419%" height="15" fill="rgb(231,104,20)" fg:x="7082" fg:w="3"/><text x="99.1468%" y="255.50"></text></g><g><title>omelette`core::slice::sort::stable::drift::sort (3 samples, 0.04%)</title><rect x="98.8968%" y="229" width="0.0419%" height="15" fill="rgb(254,36,13)" fg:x="7082" fg:w="3"/><text x="99.1468%" y="239.50"></text></g><g><title>omelette`core::slice::sort::stable::merge::merge (1 samples, 0.01%)</title><rect x="98.9247%" y="213" width="0.0140%" height="15" fill="rgb(248,14,50)" fg:x="7084" fg:w="1"/><text x="99.1747%" y="223.50"></text></g><g><title>omelette`differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt;::minimize_keys (2 samples, 0.03%)</title><rect x="98.9387%" y="261" width="0.0279%" height="15" fill="rgb(217,107,29)" fg:x="7085" fg:w="2"/><text x="99.1887%" y="271.50"></text></g><g><title>omelette`differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt;::minimize_vals (2 samples, 0.03%)</title><rect x="98.9666%" y="261" width="0.0279%" height="15" fill="rgb(251,169,33)" fg:x="7087" fg:w="2"/><text x="99.2166%" y="271.50"></text></g><g><title>omelette`differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBuilder&lt;L,CI&gt;::push_update (2 samples, 0.03%)</title><rect x="98.9946%" y="261" width="0.0279%" height="15" fill="rgb(217,108,32)" fg:x="7089" fg:w="2"/><text x="99.2446%" y="271.50"></text></g><g><title>omelette`timely::dataflow::channels::pushers::buffer::Buffer&lt;T,CB,P&gt;::extract_and_send (6 samples, 0.08%)</title><rect x="99.0225%" y="261" width="0.0838%" height="15" fill="rgb(219,66,42)" fg:x="7091" fg:w="6"/><text x="99.2725%" y="271.50"></text></g><g><title>omelette`timely::progress::change_batch::ChangeBatch&lt;T,_&gt;::compact (1 samples, 0.01%)</title><rect x="99.0923%" y="245" width="0.0140%" height="15" fill="rgb(206,180,7)" fg:x="7096" fg:w="1"/><text x="99.3423%" y="255.50"></text></g><g><title>omelette`core::slice::sort::stable::driftsort_main (1 samples, 0.01%)</title><rect x="99.0923%" y="229" width="0.0140%" height="15" fill="rgb(208,226,31)" fg:x="7096" fg:w="1"/><text x="99.3423%" y="239.50"></text></g><g><title>omelette`core::slice::sort::stable::drift::sort (1 samples, 0.01%)</title><rect x="99.0923%" y="213" width="0.0140%" height="15" fill="rgb(218,26,49)" fg:x="7096" fg:w="1"/><text x="99.3423%" y="223.50"></text></g><g><title>omelette`timely::dataflow::channels::pushers::buffer::Buffer&lt;T,CB,P&gt;::flush (1 samples, 0.01%)</title><rect x="99.1063%" y="261" width="0.0140%" height="15" fill="rgb(233,197,48)" fg:x="7097" fg:w="1"/><text x="99.3563%" y="271.50"></text></g><g><title>omelette`differential_dataflow::consolidation::ConsolidatingContainerBuilder&lt;alloc::vec::Vec&lt;(D,T,R)&gt;&gt;::consolidate_and_flush_through (1 samples, 0.01%)</title><rect x="99.1063%" y="245" width="0.0140%" height="15" fill="rgb(252,181,51)" fg:x="7097" fg:w="1"/><text x="99.3563%" y="255.50"></text></g><g><title>omelette`core::slice::sort::unstable::ipnsort (1 samples, 0.01%)</title><rect x="99.1063%" y="229" width="0.0140%" height="15" fill="rgb(253,90,19)" fg:x="7097" fg:w="1"/><text x="99.3563%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.07%)</title><rect x="99.1202%" y="245" width="0.0698%" height="15" fill="rgb(215,171,30)" fg:x="7098" fg:w="5"/><text x="99.3702%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="99.1901%" y="213" width="0.0140%" height="15" fill="rgb(214,222,9)" fg:x="7103" fg:w="1"/><text x="99.4401%" y="223.50"></text></g><g><title>omelette`timely::dataflow::channels::pushers::buffer::Buffer&lt;T,timely_container::CapacityContainerBuilder&lt;C&gt;,P&gt;::give_container (8 samples, 0.11%)</title><rect x="99.1202%" y="261" width="0.1117%" height="15" fill="rgb(223,3,22)" fg:x="7098" fg:w="8"/><text x="99.3702%" y="271.50"></text></g><g><title>omelette`&lt;timely::dataflow::channels::pushers::counter::Counter&lt;T,C,P&gt; as timely_communication::Push&lt;timely::dataflow::channels::Message&lt;T,C&gt;&gt;&gt;::push (3 samples, 0.04%)</title><rect x="99.1901%" y="245" width="0.0419%" height="15" fill="rgb(225,196,46)" fg:x="7103" fg:w="3"/><text x="99.4401%" y="255.50"></text></g><g><title>omelette`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (3 samples, 0.04%)</title><rect x="99.1901%" y="229" width="0.0419%" height="15" fill="rgb(209,110,37)" fg:x="7103" fg:w="3"/><text x="99.4401%" y="239.50"></text></g><g><title>omelette`alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="99.2040%" y="213" width="0.0279%" height="15" fill="rgb(249,89,12)" fg:x="7104" fg:w="2"/><text x="99.4540%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.03%)</title><rect x="99.2040%" y="197" width="0.0279%" height="15" fill="rgb(226,27,33)" fg:x="7104" fg:w="2"/><text x="99.4540%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.03%)</title><rect x="99.2040%" y="181" width="0.0279%" height="15" fill="rgb(213,82,22)" fg:x="7104" fg:w="2"/><text x="99.4540%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (2 samples, 0.03%)</title><rect x="99.2040%" y="165" width="0.0279%" height="15" fill="rgb(248,140,0)" fg:x="7104" fg:w="2"/><text x="99.4540%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (2 samples, 0.03%)</title><rect x="99.2040%" y="149" width="0.0279%" height="15" fill="rgb(228,106,3)" fg:x="7104" fg:w="2"/><text x="99.4540%" y="159.50"></text></g><g><title>omelette`timely::dataflow::operators::capability::InputCapability&lt;T&gt;::delayed_for_output (1 samples, 0.01%)</title><rect x="99.2320%" y="261" width="0.0140%" height="15" fill="rgb(209,23,37)" fg:x="7106" fg:w="1"/><text x="99.4820%" y="271.50"></text></g><g><title>omelette`timely::dataflow::operators::capability::Capability&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="99.2320%" y="245" width="0.0140%" height="15" fill="rgb(241,93,50)" fg:x="7106" fg:w="1"/><text x="99.4820%" y="255.50"></text></g><g><title>omelette`timely::progress::change_batch::ChangeBatch&lt;T,_&gt;::compact (1 samples, 0.01%)</title><rect x="99.2320%" y="229" width="0.0140%" height="15" fill="rgb(253,46,43)" fg:x="7106" fg:w="1"/><text x="99.4820%" y="239.50"></text></g><g><title>omelette`timely::dataflow::operators::capability::InputCapability&lt;T&gt;::retain_for_output (1 samples, 0.01%)</title><rect x="99.2459%" y="261" width="0.0140%" height="15" fill="rgb(226,206,43)" fg:x="7107" fg:w="1"/><text x="99.4959%" y="271.50"></text></g><g><title>omelette`timely::dataflow::operators::capability::Capability&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="99.2459%" y="245" width="0.0140%" height="15" fill="rgb(217,54,7)" fg:x="7107" fg:w="1"/><text x="99.4959%" y="255.50"></text></g><g><title>omelette`timely::progress::change_batch::ChangeBatch&lt;T,_&gt;::compact (1 samples, 0.01%)</title><rect x="99.2599%" y="261" width="0.0140%" height="15" fill="rgb(223,5,52)" fg:x="7108" fg:w="1"/><text x="99.5099%" y="271.50"></text></g><g><title>omelette`core::slice::sort::stable::driftsort_main (1 samples, 0.01%)</title><rect x="99.2599%" y="245" width="0.0140%" height="15" fill="rgb(206,52,46)" fg:x="7108" fg:w="1"/><text x="99.5099%" y="255.50"></text></g><g><title>omelette`core::slice::sort::stable::drift::sort (1 samples, 0.01%)</title><rect x="99.2599%" y="229" width="0.0140%" height="15" fill="rgb(253,136,11)" fg:x="7108" fg:w="1"/><text x="99.5099%" y="239.50"></text></g><g><title>omelette`&lt;timely::dataflow::operators::generic::builder_raw::OperatorCore&lt;T,L&gt; as timely::scheduling::Schedule&gt;::schedule (831 samples, 11.60%)</title><rect x="87.6833%" y="277" width="11.6045%" height="15" fill="rgb(208,106,33)" fg:x="6279" fg:w="831"/><text x="87.9333%" y="287.50">omelette`&lt;timely:..</text></g><g><title>omelette`timely::progress::frontier::Antichain&lt;T&gt;::insert (1 samples, 0.01%)</title><rect x="99.2738%" y="261" width="0.0140%" height="15" fill="rgb(206,54,4)" fg:x="7109" fg:w="1"/><text x="99.5238%" y="271.50"></text></g><g><title>omelette`core::ptr::drop_in_place$LT$timely..dataflow..operators..generic..builder_raw..OperatorCore$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$u64$GT$$C$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$timely..order..product..Product$LT$i32$C$u64$GT$$GT$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$GT$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$u64$GT$$GT$$GT$..build_reschedule$LT$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes.% (1 samples, 0.01%)</title><rect x="99.2878%" y="277" width="0.0140%" height="15" fill="rgb(213,3,15)" fg:x="7110" fg:w="1"/><text x="99.5378%" y="287.50"></text></g><g><title>omelette`core::ptr::drop_in_place$LT$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$timely..order..product..Product$LT$i32$C$u64$GT$$GT$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$GT$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$u64$GT$$GT$$GT$..build_reschedule$LT$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$timely..order..% (1 samples, 0.01%)</title><rect x="99.2878%" y="261" width="0.0140%" height="15" fill="rgb(252,211,39)" fg:x="7110" fg:w="1"/><text x="99.5378%" y="271.50"></text></g><g><title>omelette`core::ptr::drop_in_place$LT$timely..dataflow..operators..generic..handles..InputHandleCore$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$u64$GT$$C$alloc..vec..Vec$LT$$LP$$LP$omelette..Class$C$omelette..Class$RP$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$u64$GT$$C$isize$RP$$GT$$C$timely..dataflow..channels..pact..LogPuller$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$u64$GT$$C$alloc..vec..Vec$LT$$LP$$LP$omelette..Class$C$omelette..Class$RP$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$u64$GT$$C$isize$RP$$GT$$C$timely_communication..allocator..counters..Puller$LT$timely..dataflow..channels..Message$LT$timely..order..product..Product$LT$timely..order..product..Pr% (1 samples, 0.01%)</title><rect x="99.2878%" y="245" width="0.0140%" height="15" fill="rgb(223,6,36)" fg:x="7110" fg:w="1"/><text x="99.5378%" y="255.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;core::cell::RefCell&lt;(alloc::collections::vec_deque::VecDeque&lt;timely::dataflow::channels::Message&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,u64&gt;,alloc::vec::Vec&lt;((omelette::Class,omelette::Class),timely::order::product::Product&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;,alloc::collections::vec_deque::VecDeque&lt;timely::dataflow::channels::Message&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,u64&gt;,alloc::vec::Vec&lt;((omelette::Class,omelette::Class),timely::order::product::Product&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="99.2878%" y="229" width="0.0140%" height="15" fill="rgb(252,169,45)" fg:x="7110" fg:w="1"/><text x="99.5378%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="99.2878%" y="213" width="0.0140%" height="15" fill="rgb(212,48,26)" fg:x="7110" fg:w="1"/><text x="99.5378%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="99.2878%" y="197" width="0.0140%" height="15" fill="rgb(251,102,48)" fg:x="7110" fg:w="1"/><text x="99.5378%" y="207.50"></text></g><g><title>omelette`differential_dataflow::operators::reduce::sort_dedup (1 samples, 0.01%)</title><rect x="99.3018%" y="277" width="0.0140%" height="15" fill="rgb(243,208,16)" fg:x="7111" fg:w="1"/><text x="99.5518%" y="287.50"></text></g><g><title>omelette`timely::dataflow::channels::pushers::buffer::Buffer&lt;T,CB,P&gt;::extract_and_send (1 samples, 0.01%)</title><rect x="99.3157%" y="277" width="0.0140%" height="15" fill="rgb(219,96,24)" fg:x="7112" fg:w="1"/><text x="99.5657%" y="287.50"></text></g><g><title>omelette`timely::progress::subgraph::PerOperatorState&lt;T&gt;::extract_progress (1 samples, 0.01%)</title><rect x="99.3297%" y="277" width="0.0140%" height="15" fill="rgb(219,33,29)" fg:x="7113" fg:w="1"/><text x="99.5797%" y="287.50"></text></g><g><title>omelette`&lt;timely::progress::subgraph::Subgraph&lt;TOuter,TInner&gt; as timely::scheduling::Schedule&gt;::schedule (836 samples, 11.67%)</title><rect x="87.6833%" y="293" width="11.6743%" height="15" fill="rgb(223,176,5)" fg:x="6279" fg:w="836"/><text x="87.9333%" y="303.50">omelette`&lt;timely:..</text></g><g><title>omelette`timely::progress::subgraph::Subgraph&lt;TOuter,TInner&gt;::propagate_pointstamps (1 samples, 0.01%)</title><rect x="99.3437%" y="277" width="0.0140%" height="15" fill="rgb(228,140,14)" fg:x="7114" fg:w="1"/><text x="99.5937%" y="287.50"></text></g><g><title>omelette`alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_up (1 samples, 0.01%)</title><rect x="99.3437%" y="261" width="0.0140%" height="15" fill="rgb(217,179,31)" fg:x="7114" fg:w="1"/><text x="99.5937%" y="271.50"></text></g><g><title>omelette`core::ptr::drop_in_place$LT$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$timely..order..product..Product$LT$i32$C$u64$GT$$GT$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$GT$$GT$..build_reschedule$LT$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$timely..order..product..Product$LT$i32$C$u64$GT$$GT$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$GT$$GT$..build$LT$$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child% (1 samples, 0.01%)</title><rect x="99.3576%" y="277" width="0.0140%" height="15" fill="rgb(230,9,30)" fg:x="7115" fg:w="1"/><text x="99.6076%" y="287.50"></text></g><g><title>omelette`core::ptr::drop_in_place$LT$timely..dataflow..operators..generic..handles..InputHandleCore$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$alloc..vec..Vec$LT$$LP$omelette..Node$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$isize$RP$$GT$$C$timely..dataflow..channels..pact..LogPuller$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$alloc..vec..Vec$LT$$LP$omelette..Node$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$isize$RP$$GT$$C$timely_communication..allocator..counters..Puller$LT$timely..dataflow..channels..Message$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$alloc..vec..Vec$LT$$LP$omelette..Node$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$isize$RP$$GT$$GT$$C$timely_communication..allocator..thread..Pu% (1 samples, 0.01%)</title><rect x="99.3576%" y="261" width="0.0140%" height="15" fill="rgb(230,136,20)" fg:x="7115" fg:w="1"/><text x="99.6076%" y="271.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;core::cell::RefCell&lt;(alloc::collections::vec_deque::VecDeque&lt;timely::dataflow::channels::Message&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,alloc::vec::Vec&lt;(omelette::Node,timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;,alloc::collections::vec_deque::VecDeque&lt;timely::dataflow::channels::Message&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,alloc::vec::Vec&lt;(omelette::Node,timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="99.3576%" y="245" width="0.0140%" height="15" fill="rgb(215,210,22)" fg:x="7115" fg:w="1"/><text x="99.6076%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="99.3576%" y="229" width="0.0140%" height="15" fill="rgb(218,43,5)" fg:x="7115" fg:w="1"/><text x="99.6076%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="99.3576%" y="213" width="0.0140%" height="15" fill="rgb(216,11,5)" fg:x="7115" fg:w="1"/><text x="99.6076%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (6 samples, 0.08%)</title><rect x="99.3716%" y="165" width="0.0838%" height="15" fill="rgb(209,82,29)" fg:x="7116" fg:w="6"/><text x="99.6216%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`madvise (6 samples, 0.08%)</title><rect x="99.3716%" y="149" width="0.0838%" height="15" fill="rgb(244,115,12)" fg:x="7116" fg:w="6"/><text x="99.6216%" y="159.50"></text></g><g><title>omelette`core::ptr::drop_in_place$LT$differential_dataflow..operators..reduce..reduce_trace$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$timely..order..product..Product$LT$i32$C$u64$GT$$GT$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$GT$$C$differential_dataflow..operators..arrange..agent..TraceAgent$LT$differential_dataflow..trace..implementations..spine_fueled..Spine$LT$alloc..rc..Rc$LT$differential_dataflow..trace..implementations..ord_neu..key_batch..OrdKeyBatch$LT$differential_dataflow..trace..implementations..Vector$LT$$LP$$LP$omelette..Node$C$$LP$$RP$$RP$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$isize$RP$$GT$$GT$$GT$$GT$$GT$$C$differential_dataflow..trace..rc_blanket_impls..RcBuilder$LT$differential_dataflow..trace..implementations.% (7 samples, 0.10%)</title><rect x="99.3716%" y="261" width="0.0978%" height="15" fill="rgb(222,82,18)" fg:x="7116" fg:w="7"/><text x="99.6216%" y="271.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::operators::arrange::agent::TraceAgent&lt;differential_dataflow::trace::implementations::spine_fueled::Spine&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,()),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt;&gt; (7 samples, 0.10%)</title><rect x="99.3716%" y="245" width="0.0978%" height="15" fill="rgb(249,227,8)" fg:x="7116" fg:w="7"/><text x="99.6216%" y="255.50"></text></g><g><title>omelette`&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.10%)</title><rect x="99.3716%" y="229" width="0.0978%" height="15" fill="rgb(253,141,45)" fg:x="7116" fg:w="7"/><text x="99.6216%" y="239.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::spine_fueled::Spine&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,()),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt; (7 samples, 0.10%)</title><rect x="99.3716%" y="213" width="0.0978%" height="15" fill="rgb(234,184,4)" fg:x="7116" fg:w="7"/><text x="99.6216%" y="223.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::spine_fueled::MergeState&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,()),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt; (7 samples, 0.10%)</title><rect x="99.3716%" y="197" width="0.0978%" height="15" fill="rgb(218,194,23)" fg:x="7116" fg:w="7"/><text x="99.6216%" y="207.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,()),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt; (7 samples, 0.10%)</title><rect x="99.3716%" y="181" width="0.0978%" height="15" fill="rgb(235,66,41)" fg:x="7116" fg:w="7"/><text x="99.6216%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_plat (1 samples, 0.01%)</title><rect x="99.4554%" y="165" width="0.0140%" height="15" fill="rgb(245,217,1)" fg:x="7122" fg:w="1"/><text x="99.7054%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (1 samples, 0.01%)</title><rect x="99.4554%" y="149" width="0.0140%" height="15" fill="rgb(229,91,1)" fg:x="7122" fg:w="1"/><text x="99.7054%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="99.4693%" y="149" width="0.0140%" height="15" fill="rgb(207,101,30)" fg:x="7123" fg:w="1"/><text x="99.7193%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (2 samples, 0.03%)</title><rect x="99.4693%" y="165" width="0.0279%" height="15" fill="rgb(223,82,49)" fg:x="7123" fg:w="2"/><text x="99.7193%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_large (1 samples, 0.01%)</title><rect x="99.4833%" y="149" width="0.0140%" height="15" fill="rgb(218,167,17)" fg:x="7124" fg:w="1"/><text x="99.7333%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_plat (1 samples, 0.01%)</title><rect x="99.4833%" y="133" width="0.0140%" height="15" fill="rgb(208,103,14)" fg:x="7124" fg:w="1"/><text x="99.7333%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (1 samples, 0.01%)</title><rect x="99.4833%" y="117" width="0.0140%" height="15" fill="rgb(238,20,8)" fg:x="7124" fg:w="1"/><text x="99.7333%" y="127.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::operators::arrange::agent::TraceAgent&lt;differential_dataflow::trace::implementations::spine_fueled::Spine&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,(usize,omelette::Class)),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="99.4693%" y="245" width="0.0419%" height="15" fill="rgb(218,80,54)" fg:x="7123" fg:w="3"/><text x="99.7193%" y="255.50"></text></g><g><title>omelette`&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="99.4693%" y="229" width="0.0419%" height="15" fill="rgb(240,144,17)" fg:x="7123" fg:w="3"/><text x="99.7193%" y="239.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::spine_fueled::Spine&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,(usize,omelette::Class)),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="99.4693%" y="213" width="0.0419%" height="15" fill="rgb(245,27,50)" fg:x="7123" fg:w="3"/><text x="99.7193%" y="223.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::spine_fueled::MergeState&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,(usize,omelette::Class)),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="99.4693%" y="197" width="0.0419%" height="15" fill="rgb(251,51,7)" fg:x="7123" fg:w="3"/><text x="99.7193%" y="207.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,(usize,omelette::Class)),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="99.4693%" y="181" width="0.0419%" height="15" fill="rgb(245,217,29)" fg:x="7123" fg:w="3"/><text x="99.7193%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="99.4973%" y="165" width="0.0140%" height="15" fill="rgb(221,176,29)" fg:x="7125" fg:w="1"/><text x="99.7473%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="99.4973%" y="149" width="0.0140%" height="15" fill="rgb(212,180,24)" fg:x="7125" fg:w="1"/><text x="99.7473%" y="159.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::spine_fueled::MergeState&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,omelette::Node),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt; (6 samples, 0.08%)</title><rect x="99.5112%" y="197" width="0.0838%" height="15" fill="rgb(254,24,2)" fg:x="7126" fg:w="6"/><text x="99.7612%" y="207.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,omelette::Node),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt; (6 samples, 0.08%)</title><rect x="99.5112%" y="181" width="0.0838%" height="15" fill="rgb(230,100,2)" fg:x="7126" fg:w="6"/><text x="99.7612%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (6 samples, 0.08%)</title><rect x="99.5112%" y="165" width="0.0838%" height="15" fill="rgb(219,142,25)" fg:x="7126" fg:w="6"/><text x="99.7612%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`madvise (6 samples, 0.08%)</title><rect x="99.5112%" y="149" width="0.0838%" height="15" fill="rgb(240,73,43)" fg:x="7126" fg:w="6"/><text x="99.7612%" y="159.50"></text></g><g><title>omelette`core::ptr::drop_in_place$LT$differential_dataflow..operators..reduce..reduce_trace$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$timely..order..product..Product$LT$i32$C$u64$GT$$GT$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$GT$$C$differential_dataflow..operators..arrange..agent..TraceAgent$LT$differential_dataflow..trace..implementations..spine_fueled..Spine$LT$alloc..rc..Rc$LT$differential_dataflow..trace..implementations..ord_neu..val_batch..OrdValBatch$LT$differential_dataflow..trace..implementations..Vector$LT$$LP$$LP$omelette..Node$C$$LP$usize$C$omelette..Class$RP$$RP$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$isize$RP$$GT$$GT$$GT$$GT$$GT$$C$differential_dataflow..trace..rc_blanket_impls..RcBuilder$LT$differential_dataflow..% (10 samples, 0.14%)</title><rect x="99.4693%" y="261" width="0.1396%" height="15" fill="rgb(214,114,15)" fg:x="7123" fg:w="10"/><text x="99.7193%" y="271.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::operators::arrange::agent::TraceAgent&lt;differential_dataflow::trace::implementations::spine_fueled::Spine&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,omelette::Node),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt;&gt; (7 samples, 0.10%)</title><rect x="99.5112%" y="245" width="0.0978%" height="15" fill="rgb(207,130,4)" fg:x="7126" fg:w="7"/><text x="99.7612%" y="255.50"></text></g><g><title>omelette`&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.10%)</title><rect x="99.5112%" y="229" width="0.0978%" height="15" fill="rgb(221,25,40)" fg:x="7126" fg:w="7"/><text x="99.7612%" y="239.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::spine_fueled::Spine&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,omelette::Node),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt; (7 samples, 0.10%)</title><rect x="99.5112%" y="213" width="0.0978%" height="15" fill="rgb(241,184,7)" fg:x="7126" fg:w="7"/><text x="99.7612%" y="223.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::rc_blanket_impls::RcMerger&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,omelette::Node),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="99.5950%" y="197" width="0.0140%" height="15" fill="rgb(235,159,4)" fg:x="7132" fg:w="1"/><text x="99.8450%" y="207.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValStorage&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,omelette::Node),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="99.5950%" y="181" width="0.0140%" height="15" fill="rgb(214,87,48)" fg:x="7132" fg:w="1"/><text x="99.8450%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="99.5950%" y="165" width="0.0140%" height="15" fill="rgb(246,198,24)" fg:x="7132" fg:w="1"/><text x="99.8450%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="99.5950%" y="149" width="0.0140%" height="15" fill="rgb(209,66,40)" fg:x="7132" fg:w="1"/><text x="99.8450%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="99.6090%" y="149" width="0.0140%" height="15" fill="rgb(233,147,39)" fg:x="7133" fg:w="1"/><text x="99.8590%" y="159.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::operators::arrange::agent::TraceAgent&lt;differential_dataflow::trace::implementations::spine_fueled::Spine&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::term::Term&lt;omelette::Class&gt;,(omelette::Class,omelette::Class)),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="99.6090%" y="245" width="0.0279%" height="15" fill="rgb(231,145,52)" fg:x="7133" fg:w="2"/><text x="99.8590%" y="255.50"></text></g><g><title>omelette`&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="99.6090%" y="229" width="0.0279%" height="15" fill="rgb(206,20,26)" fg:x="7133" fg:w="2"/><text x="99.8590%" y="239.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::spine_fueled::Spine&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::term::Term&lt;omelette::Class&gt;,(omelette::Class,omelette::Class)),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="99.6090%" y="213" width="0.0279%" height="15" fill="rgb(238,220,4)" fg:x="7133" fg:w="2"/><text x="99.8590%" y="223.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::spine_fueled::MergeState&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::term::Term&lt;omelette::Class&gt;,(omelette::Class,omelette::Class)),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="99.6090%" y="197" width="0.0279%" height="15" fill="rgb(252,195,42)" fg:x="7133" fg:w="2"/><text x="99.8590%" y="207.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::term::Term&lt;omelette::Class&gt;,(omelette::Class,omelette::Class)),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="99.6090%" y="181" width="0.0279%" height="15" fill="rgb(209,10,6)" fg:x="7133" fg:w="2"/><text x="99.8590%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (2 samples, 0.03%)</title><rect x="99.6090%" y="165" width="0.0279%" height="15" fill="rgb(229,3,52)" fg:x="7133" fg:w="2"/><text x="99.8590%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`medium_madvise_free_range_no_lock (1 samples, 0.01%)</title><rect x="99.6230%" y="149" width="0.0140%" height="15" fill="rgb(253,49,37)" fg:x="7134" fg:w="1"/><text x="99.8730%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="99.6230%" y="133" width="0.0140%" height="15" fill="rgb(240,103,49)" fg:x="7134" fg:w="1"/><text x="99.8730%" y="143.50"></text></g><g><title>omelette`core::ptr::drop_in_place$LT$differential_dataflow..operators..reduce..reduce_trace$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$timely..order..product..Product$LT$i32$C$u64$GT$$GT$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$GT$$C$differential_dataflow..operators..arrange..agent..TraceAgent$LT$differential_dataflow..trace..implementations..spine_fueled..Spine$LT$alloc..rc..Rc$LT$differential_dataflow..trace..implementations..ord_neu..val_batch..OrdValBatch$LT$differential_dataflow..trace..implementations..Vector$LT$$LP$$LP$omelette..term..Term$LT$omelette..Class$GT$$C$omelette..Class$RP$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$isize$RP$$GT$$GT$$GT$$GT$$GT$$C$differential_dataflow..trace..rc_blanket_impls..RcBuilder$LT$differenti% (3 samples, 0.04%)</title><rect x="99.6090%" y="261" width="0.0419%" height="15" fill="rgb(250,182,30)" fg:x="7133" fg:w="3"/><text x="99.8590%" y="271.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::operators::arrange::agent::TraceAgent&lt;differential_dataflow::trace::implementations::spine_fueled::Spine&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::term::Term&lt;omelette::Class&gt;,omelette::Class),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="99.6369%" y="245" width="0.0140%" height="15" fill="rgb(248,8,30)" fg:x="7135" fg:w="1"/><text x="99.8869%" y="255.50"></text></g><g><title>omelette`&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="99.6369%" y="229" width="0.0140%" height="15" fill="rgb(237,120,30)" fg:x="7135" fg:w="1"/><text x="99.8869%" y="239.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::spine_fueled::Spine&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::term::Term&lt;omelette::Class&gt;,omelette::Class),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="99.6369%" y="213" width="0.0140%" height="15" fill="rgb(221,146,34)" fg:x="7135" fg:w="1"/><text x="99.8869%" y="223.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::spine_fueled::MergeState&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::term::Term&lt;omelette::Class&gt;,omelette::Class),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="99.6369%" y="197" width="0.0140%" height="15" fill="rgb(242,55,13)" fg:x="7135" fg:w="1"/><text x="99.8869%" y="207.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::ord_neu::val_batch::OrdValBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::term::Term&lt;omelette::Class&gt;,omelette::Class),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="99.6369%" y="181" width="0.0140%" height="15" fill="rgb(242,112,31)" fg:x="7135" fg:w="1"/><text x="99.8869%" y="191.50"></text></g><g><title>omelette`core::ptr::drop_in_place$LT$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$timely..order..product..Product$LT$i32$C$u64$GT$$GT$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$GT$$GT$..build$LT$$LT$timely..dataflow..stream..StreamCore$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$timely..order..product..Product$LT$i32$C$u64$GT$$GT$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$GT$$C$alloc..vec..Vec$LT$$LP$$LP$omelette..Node$C$$LP$usize$C$omelette..Class$RP$$RP$$C$timely..order..product..Product$LT$timely..% (1 samples, 0.01%)</title><rect x="99.6509%" y="261" width="0.0140%" height="15" fill="rgb(249,192,27)" fg:x="7136" fg:w="1"/><text x="99.9009%" y="271.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;timely::dataflow::channels::pact::LogPuller&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,u64&gt;,alloc::vec::Vec&lt;((omelette::Class,omelette::Class),timely::order::product::Product&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,u64&gt;,isize)&gt;,alloc::boxed::Box&lt;dyn timely_communication::Pull&lt;timely::dataflow::channels::Message&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,u64&gt;,alloc::vec::Vec&lt;((omelette::Class,omelette::Class),timely::order::product::Product&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="99.6509%" y="245" width="0.0140%" height="15" fill="rgb(208,204,44)" fg:x="7136" fg:w="1"/><text x="99.9009%" y="255.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;timely_communication::allocator::counters::Puller&lt;timely::dataflow::channels::Message&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,alloc::vec::Vec&lt;((omelette::Node,(usize,omelette::Class)),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;,timely_communication::allocator::thread::Puller&lt;timely::dataflow::channels::Message&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,alloc::vec::Vec&lt;((omelette::Node,(usize,omelette::Class)),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="99.6509%" y="229" width="0.0140%" height="15" fill="rgb(208,93,54)" fg:x="7136" fg:w="1"/><text x="99.9009%" y="239.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;core::cell::RefCell&lt;(alloc::collections::vec_deque::VecDeque&lt;timely::dataflow::channels::Message&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,alloc::vec::Vec&lt;((omelette::Node,(usize,omelette::Class)),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;,alloc::collections::vec_deque::VecDeque&lt;timely::dataflow::channels::Message&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,alloc::vec::Vec&lt;((omelette::Node,(usize,omelette::Class)),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="99.6509%" y="213" width="0.0140%" height="15" fill="rgb(242,1,31)" fg:x="7136" fg:w="1"/><text x="99.9009%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="99.6509%" y="197" width="0.0140%" height="15" fill="rgb(241,83,25)" fg:x="7136" fg:w="1"/><text x="99.9009%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="99.6509%" y="181" width="0.0140%" height="15" fill="rgb(205,169,50)" fg:x="7136" fg:w="1"/><text x="99.9009%" y="191.50"></text></g><g><title>omelette`core::ptr::drop_in_place$LT$timely..dataflow..operators..generic..handles..InputHandleCore$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$alloc..vec..Vec$LT$$LP$$LP$omelette..Node$C$omelette..Node$RP$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$isize$RP$$GT$$C$timely..dataflow..channels..pact..LogPuller$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$alloc..vec..Vec$LT$$LP$$LP$omelette..Node$C$omelette..Node$RP$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$isize$RP$$GT$$C$timely_communication..allocator..counters..Puller$LT$timely..dataflow..channels..Message$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$alloc..vec..Vec$LT$$LP$$LP$omelette..Node$C$omelette..Node$RP$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$% (1 samples, 0.01%)</title><rect x="99.6649%" y="261" width="0.0140%" height="15" fill="rgb(239,186,37)" fg:x="7137" fg:w="1"/><text x="99.9149%" y="271.50"></text></g><g><title>omelette`core::ptr::drop_in_place$LT$timely..dataflow..channels..pact..LogPuller$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$alloc..vec..Vec$LT$$LP$$LP$omelette..Node$C$omelette..Node$RP$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$isize$RP$$GT$$C$timely_communication..allocator..counters..Puller$LT$timely..dataflow..channels..Message$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$alloc..vec..Vec$LT$$LP$$LP$omelette..Node$C$omelette..Node$RP$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$isize$RP$$GT$$GT$$C$timely_communication..allocator..thread..Puller$LT$timely..dataflow..channels..Message$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$alloc..vec..Vec$LT$$LP$$LP$omelette..Node$C$omelette..Node$RP$$C$timely..order..product..Product$LT$timely..order..produc% (1 samples, 0.01%)</title><rect x="99.6649%" y="245" width="0.0140%" height="15" fill="rgb(205,221,10)" fg:x="7137" fg:w="1"/><text x="99.9149%" y="255.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;core::cell::RefCell&lt;(alloc::collections::vec_deque::VecDeque&lt;timely::dataflow::channels::Message&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,alloc::vec::Vec&lt;((omelette::Node,omelette::Node),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;,alloc::collections::vec_deque::VecDeque&lt;timely::dataflow::channels::Message&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,alloc::vec::Vec&lt;((omelette::Node,omelette::Node),timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="99.6649%" y="229" width="0.0140%" height="15" fill="rgb(218,196,15)" fg:x="7137" fg:w="1"/><text x="99.9149%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="99.6649%" y="213" width="0.0140%" height="15" fill="rgb(218,196,35)" fg:x="7137" fg:w="1"/><text x="99.9149%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="99.6649%" y="197" width="0.0140%" height="15" fill="rgb(233,63,24)" fg:x="7137" fg:w="1"/><text x="99.9149%" y="207.50"></text></g><g><title>omelette`core::ptr::drop_in_place$LT$timely..dataflow..operators..generic..builder_raw..OperatorCore$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$timely..order..product..Product$LT$i32$C$u64$GT$$GT$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$GT$$GT$..build_reschedule$LT$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$timely..order..product..Product$LT$i32$C$u64$GT$$GT$$C$timely..order..product..Pr% (24 samples, 0.34%)</title><rect x="99.3576%" y="293" width="0.3351%" height="15" fill="rgb(225,8,4)" fg:x="7115" fg:w="24"/><text x="99.6076%" y="303.50"></text></g><g><title>omelette`core::ptr::drop_in_place$LT$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$timely..order..product..Product$LT$i32$C$u64$GT$$GT$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$GT$$GT$..build_reschedule$LT$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$timely..order..product..Product$LT$i32$C$u64$GT$$GT$$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$GT$$GT$..build$LT$$LT$timely..dataflow..stream..StreamCore$LT$timely..dataflow..scopes..child..% (23 samples, 0.32%)</title><rect x="99.3716%" y="277" width="0.3212%" height="15" fill="rgb(234,105,35)" fg:x="7116" fg:w="23"/><text x="99.6216%" y="287.50"></text></g><g><title>omelette`core::ptr::drop_in_place$LT$timely..dataflow..operators..generic..handles..InputHandleCore$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$alloc..vec..Vec$LT$$LP$omelette..Node$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$isize$RP$$GT$$C$timely..dataflow..channels..pact..LogPuller$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$alloc..vec..Vec$LT$$LP$omelette..Node$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$isize$RP$$GT$$C$timely_communication..allocator..counters..Puller$LT$timely..dataflow..channels..Message$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$alloc..vec..Vec$LT$$LP$omelette..Node$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$isize$RP$$GT$$GT$$C$timely_communication..allocator..thread..Pu% (1 samples, 0.01%)</title><rect x="99.6788%" y="261" width="0.0140%" height="15" fill="rgb(236,21,32)" fg:x="7138" fg:w="1"/><text x="99.9288%" y="271.50"></text></g><g><title>omelette`core::ptr::drop_in_place$LT$timely..dataflow..channels..pact..LogPuller$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$alloc..vec..Vec$LT$$LP$omelette..Node$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$isize$RP$$GT$$C$timely_communication..allocator..counters..Puller$LT$timely..dataflow..channels..Message$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$alloc..vec..Vec$LT$$LP$omelette..Node$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$isize$RP$$GT$$GT$$C$timely_communication..allocator..thread..Puller$LT$timely..dataflow..channels..Message$LT$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$alloc..vec..Vec$LT$$LP$omelette..Node$C$timely..order..product..Product$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$u64$GT$$C$isize$RP$$GT$$GT$$GT$$GT$$GT$$GT$::% (1 samples, 0.01%)</title><rect x="99.6788%" y="245" width="0.0140%" height="15" fill="rgb(228,109,6)" fg:x="7138" fg:w="1"/><text x="99.9288%" y="255.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;core::cell::RefCell&lt;(alloc::collections::vec_deque::VecDeque&lt;timely::dataflow::channels::Message&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,alloc::vec::Vec&lt;(omelette::Node,timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;,alloc::collections::vec_deque::VecDeque&lt;timely::dataflow::channels::Message&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,alloc::vec::Vec&lt;(omelette::Node,timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="99.6788%" y="229" width="0.0140%" height="15" fill="rgb(229,215,31)" fg:x="7138" fg:w="1"/><text x="99.9288%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="99.6788%" y="213" width="0.0140%" height="15" fill="rgb(221,52,54)" fg:x="7138" fg:w="1"/><text x="99.9288%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="99.6788%" y="197" width="0.0140%" height="15" fill="rgb(252,129,43)" fg:x="7138" fg:w="1"/><text x="99.9288%" y="207.50"></text></g><g><title>omelette`differential_dataflow::operators::reduce::sort_dedup (1 samples, 0.01%)</title><rect x="99.6928%" y="293" width="0.0140%" height="15" fill="rgb(248,183,27)" fg:x="7139" fg:w="1"/><text x="99.9428%" y="303.50"></text></g><g><title>omelette`differential_dataflow::trace::cursor::cursor_list::CursorList&lt;C&gt;::minimize_keys (1 samples, 0.01%)</title><rect x="99.7067%" y="293" width="0.0140%" height="15" fill="rgb(250,0,22)" fg:x="7140" fg:w="1"/><text x="99.9567%" y="303.50"></text></g><g><title>omelette`timely::dataflow::channels::pushers::buffer::Buffer&lt;T,CB,P&gt;::extract_and_send (2 samples, 0.03%)</title><rect x="99.7207%" y="293" width="0.0279%" height="15" fill="rgb(213,166,10)" fg:x="7141" fg:w="2"/><text x="99.9707%" y="303.50"></text></g><g><title>omelette`&lt;timely::progress::subgraph::Subgraph&lt;TOuter,TInner&gt; as timely::scheduling::Schedule&gt;::schedule (6,163 samples, 86.06%)</title><rect x="13.6992%" y="309" width="86.0634%" height="15" fill="rgb(207,163,36)" fg:x="981" fg:w="6163"/><text x="13.9492%" y="319.50">omelette`&lt;timely::progress::subgraph::Subgraph&lt;TOuter,TInner&gt; as timely::scheduling::Schedule&gt;::schedule</text></g><g><title>omelette`timely::dataflow::channels::pushers::buffer::Buffer&lt;T,CB,P&gt;::flush (1 samples, 0.01%)</title><rect x="99.7486%" y="293" width="0.0140%" height="15" fill="rgb(208,122,22)" fg:x="7143" fg:w="1"/><text x="99.9986%" y="303.50"></text></g><g><title>omelette`&lt;timely_container::CapacityContainerBuilder&lt;C&gt; as timely_container::PushInto&lt;T&gt;&gt;::push_into (2 samples, 0.03%)</title><rect x="99.7626%" y="309" width="0.0279%" height="15" fill="rgb(207,104,49)" fg:x="7144" fg:w="2"/><text x="100.0126%" y="319.50"></text></g><g><title>omelette`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="99.7905%" y="309" width="0.0140%" height="15" fill="rgb(248,211,50)" fg:x="7146" fg:w="1"/><text x="100.0405%" y="319.50"></text></g><g><title>omelette`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="99.8045%" y="309" width="0.0140%" height="15" fill="rgb(217,13,45)" fg:x="7147" fg:w="1"/><text x="100.0545%" y="319.50"></text></g><g><title>omelette`__rdl_alloc (2 samples, 0.03%)</title><rect x="99.8185%" y="309" width="0.0279%" height="15" fill="rgb(211,216,49)" fg:x="7148" fg:w="2"/><text x="100.0685%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="99.8464%" y="181" width="0.0140%" height="15" fill="rgb(221,58,53)" fg:x="7150" fg:w="1"/><text x="100.0964%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="99.8464%" y="165" width="0.0140%" height="15" fill="rgb(220,112,41)" fg:x="7150" fg:w="1"/><text x="100.0964%" y="175.50"></text></g><g><title>omelette`core::ptr::drop_in_place$LT$timely..dataflow..operators..generic..builder_raw..OperatorCore$LT$timely..order..product..Product$LT$i32$C$u64$GT$$C$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$timely..order..product..Product$LT$i32$C$u64$GT$$GT$$GT$..build_reschedule$LT$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$timely..order..product..Product$LT$i32$C$u64$GT$$GT$$GT$..build$LT$$LT$timely..dataflow..stream..StreamCore$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$timely..order..product.% (2 samples, 0.03%)</title><rect x="99.8464%" y="309" width="0.0279%" height="15" fill="rgb(236,38,28)" fg:x="7150" fg:w="2"/><text x="100.0964%" y="319.50"></text></g><g><title>omelette`core::ptr::drop_in_place$LT$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$timely..order..product..Product$LT$i32$C$u64$GT$$GT$$GT$..build_reschedule$LT$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$timely..order..product..Product$LT$i32$C$u64$GT$$GT$$GT$..build$LT$$LT$timely..dataflow..stream..StreamCore$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$timely..order..product..Product$LT$i32$C$u64$GT$$GT$$C$alloc..vec..Vec$LT$alloc..rc..Rc$LT$differential_dataflow..trace..implementations..ord% (2 samples, 0.03%)</title><rect x="99.8464%" y="293" width="0.0279%" height="15" fill="rgb(227,195,22)" fg:x="7150" fg:w="2"/><text x="100.0964%" y="303.50"></text></g><g><title>omelette`core::ptr::drop_in_place$LT$differential_dataflow..operators..reduce..reduce_trace$LT$timely..dataflow..scopes..child..Child$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$timely..order..product..Product$LT$i32$C$u64$GT$$GT$$C$differential_dataflow..operators..arrange..agent..TraceAgent$LT$differential_dataflow..trace..implementations..spine_fueled..Spine$LT$alloc..rc..Rc$LT$differential_dataflow..trace..implementations..ord_neu..key_batch..OrdKeyBatch$LT$differential_dataflow..trace..implementations..Vector$LT$$LP$$LP$omelette..Node$C$$LP$$RP$$RP$$C$timely..order..product..Product$LT$i32$C$u64$GT$$C$isize$RP$$GT$$GT$$GT$$GT$$GT$$C$differential_dataflow..trace..rc_blanket_impls..RcBuilder$LT$differential_dataflow..trace..implementations..ord_neu..key_batch..OrdKeyBuilder$LT$differential_dataflow..trace..implementations..Vector$LT$$LP$$LP$omelette..Node$C$$LP$$RP$$RP$$C$timely..order..product..Product$LT$i32$C$u64$GT$$C$i% (2 samples, 0.03%)</title><rect x="99.8464%" y="277" width="0.0279%" height="15" fill="rgb(214,55,33)" fg:x="7150" fg:w="2"/><text x="100.0964%" y="287.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::operators::arrange::agent::TraceAgent&lt;differential_dataflow::trace::implementations::spine_fueled::Spine&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,()),timely::order::product::Product&lt;i32,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="99.8464%" y="261" width="0.0279%" height="15" fill="rgb(248,80,13)" fg:x="7150" fg:w="2"/><text x="100.0964%" y="271.50"></text></g><g><title>omelette`&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="99.8464%" y="245" width="0.0279%" height="15" fill="rgb(238,52,6)" fg:x="7150" fg:w="2"/><text x="100.0964%" y="255.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::spine_fueled::Spine&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,()),timely::order::product::Product&lt;i32,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="99.8464%" y="229" width="0.0279%" height="15" fill="rgb(224,198,47)" fg:x="7150" fg:w="2"/><text x="100.0964%" y="239.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::spine_fueled::MergeState&lt;alloc::rc::Rc&lt;differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,()),timely::order::product::Product&lt;i32,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="99.8464%" y="213" width="0.0279%" height="15" fill="rgb(233,171,20)" fg:x="7150" fg:w="2"/><text x="100.0964%" y="223.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;differential_dataflow::trace::implementations::ord_neu::key_batch::OrdKeyBatch&lt;differential_dataflow::trace::implementations::Vector&lt;((omelette::Node,()),timely::order::product::Product&lt;i32,u64&gt;,isize)&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="99.8464%" y="197" width="0.0279%" height="15" fill="rgb(241,30,25)" fg:x="7150" fg:w="2"/><text x="100.0964%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="99.8604%" y="181" width="0.0140%" height="15" fill="rgb(207,171,38)" fg:x="7151" fg:w="1"/><text x="100.1104%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="99.8604%" y="165" width="0.0140%" height="15" fill="rgb(234,70,1)" fg:x="7151" fg:w="1"/><text x="100.1104%" y="175.50"></text></g><g><title>omelette`omelette::collect_created_terms (1 samples, 0.01%)</title><rect x="99.8743%" y="309" width="0.0140%" height="15" fill="rgb(232,178,18)" fg:x="7152" fg:w="1"/><text x="100.1243%" y="319.50"></text></g><g><title>omelette`timely::dataflow::channels::pushers::buffer::Buffer&lt;T,CB,P&gt;::extract_and_send (2 samples, 0.03%)</title><rect x="99.8883%" y="309" width="0.0279%" height="15" fill="rgb(241,78,40)" fg:x="7153" fg:w="2"/><text x="100.1383%" y="319.50"></text></g><g><title>omelette`timely::progress::frontier::Antichain&lt;T&gt;::insert (1 samples, 0.01%)</title><rect x="99.9162%" y="309" width="0.0140%" height="15" fill="rgb(222,35,25)" fg:x="7155" fg:w="1"/><text x="100.1662%" y="319.50"></text></g><g><title>omelette`&lt;timely::progress::subgraph::Subgraph&lt;TOuter,TInner&gt; as timely::scheduling::Schedule&gt;::schedule (7,071 samples, 98.74%)</title><rect x="1.2009%" y="325" width="98.7432%" height="15" fill="rgb(207,92,16)" fg:x="86" fg:w="7071"/><text x="1.4509%" y="335.50">omelette`&lt;timely::progress::subgraph::Subgraph&lt;TOuter,TInner&gt; as timely::scheduling::Schedule&gt;::schedule</text></g><g><title>omelette`timely::progress::subgraph::Subgraph&lt;TOuter,TInner&gt;::propagate_pointstamps (1 samples, 0.01%)</title><rect x="99.9302%" y="309" width="0.0140%" height="15" fill="rgb(216,59,51)" fg:x="7156" fg:w="1"/><text x="100.1802%" y="319.50"></text></g><g><title>omelette`timely::progress::reachability::Tracker&lt;T&gt;::propagate_all (1 samples, 0.01%)</title><rect x="99.9302%" y="293" width="0.0140%" height="15" fill="rgb(213,80,28)" fg:x="7156" fg:w="1"/><text x="100.1802%" y="303.50"></text></g><g><title>omelette`&lt;timely_container::CapacityContainerBuilder&lt;C&gt; as timely_container::PushInto&lt;T&gt;&gt;::push_into (1 samples, 0.01%)</title><rect x="99.9441%" y="325" width="0.0140%" height="15" fill="rgb(220,93,7)" fg:x="7157" fg:w="1"/><text x="100.1941%" y="335.50"></text></g><g><title>omelette`core::ptr::drop_in_place$LT$timely..dataflow..operators..generic..builder_raw..OperatorCore$LT$i32$C$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$GT$..build_reschedule$LT$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$GT$..build$LT$$LT$timely..dataflow..stream..StreamCore$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$alloc..vec..Vec$LT$$LP$$LP$omelette..Node$C$$LP$$RP$$RP$$C$i32$C$isize$RP$$GT$$GT$$u20$as$u20$timely..dataflow..operators..generic..operator..Operator$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$alloc..vec..Vec$% (1 samples, 0.01%)</title><rect x="99.9581%" y="325" width="0.0140%" height="15" fill="rgb(225,24,44)" fg:x="7158" fg:w="1"/><text x="100.2081%" y="335.50"></text></g><g><title>omelette`core::ptr::drop_in_place$LT$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$GT$..build_reschedule$LT$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$GT$..build$LT$$LT$timely..dataflow..stream..StreamCore$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$alloc..vec..Vec$LT$$LP$$LP$omelette..Node$C$$LP$$RP$$RP$$C$i32$C$isize$RP$$GT$$GT$$u20$as$u20$timely..dataflow..operators..generic..operator..Operator$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$alloc..vec..Vec$LT$$LP$$LP$omelette..Node$C$$LP$$RP$$RP$$C$i32$C$isize$RP$$GT$$GT$$GT$..u% (1 samples, 0.01%)</title><rect x="99.9581%" y="309" width="0.0140%" height="15" fill="rgb(243,74,40)" fg:x="7158" fg:w="1"/><text x="100.2081%" y="319.50"></text></g><g><title>omelette`core::ptr::drop_in_place$LT$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$GT$..build$LT$$LT$timely..dataflow..stream..StreamCore$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$alloc..vec..Vec$LT$$LP$$LP$omelette..Node$C$$LP$$RP$$RP$$C$i32$C$isize$RP$$GT$$GT$$u20$as$u20$timely..dataflow..operators..generic..operator..Operator$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$alloc..vec..Vec$LT$$LP$$LP$omelette..Node$C$$LP$$RP$$RP$$C$i32$C$isize$RP$$GT$$GT$$GT$..unary_frontier$LT$timely_container..CapacityContainerBuilder$LT$alloc..vec..Vec$LT$alloc..rc..Rc$LT$differential_dataflow..trace..implementations..ord_neu..key_batch..OrdKeyBatch$LT$differential_dataflow..trace..implementations% (1 samples, 0.01%)</title><rect x="99.9581%" y="293" width="0.0140%" height="15" fill="rgb(228,39,7)" fg:x="7158" fg:w="1"/><text x="100.2081%" y="303.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;timely::dataflow::channels::pact::LogPuller&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,u64&gt;,alloc::vec::Vec&lt;((omelette::Class,omelette::Class),timely::order::product::Product&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,u64&gt;,isize)&gt;,alloc::boxed::Box&lt;dyn timely_communication::Pull&lt;timely::dataflow::channels::Message&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,u64&gt;,alloc::vec::Vec&lt;((omelette::Class,omelette::Class),timely::order::product::Product&lt;timely::order::product::Product&lt;timely::order::product::Product&lt;i32,u64&gt;,u64&gt;,u64&gt;,isize)&gt;&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="99.9581%" y="277" width="0.0140%" height="15" fill="rgb(227,79,8)" fg:x="7158" fg:w="1"/><text x="100.2081%" y="287.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;timely_communication::allocator::counters::Puller&lt;timely::dataflow::channels::Message&lt;i32,alloc::vec::Vec&lt;((omelette::Node,()),i32,isize)&gt;&gt;,timely_communication::allocator::thread::Puller&lt;timely::dataflow::channels::Message&lt;i32,alloc::vec::Vec&lt;((omelette::Node,()),i32,isize)&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="99.9581%" y="261" width="0.0140%" height="15" fill="rgb(236,58,11)" fg:x="7158" fg:w="1"/><text x="100.2081%" y="271.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;core::cell::RefCell&lt;(alloc::collections::vec_deque::VecDeque&lt;timely::dataflow::channels::Message&lt;i32,alloc::vec::Vec&lt;((omelette::Node,()),i32,isize)&gt;&gt;&gt;,alloc::collections::vec_deque::VecDeque&lt;timely::dataflow::channels::Message&lt;i32,alloc::vec::Vec&lt;((omelette::Node,()),i32,isize)&gt;&gt;&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="99.9581%" y="245" width="0.0140%" height="15" fill="rgb(249,63,35)" fg:x="7158" fg:w="1"/><text x="100.2081%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="99.9581%" y="229" width="0.0140%" height="15" fill="rgb(252,114,16)" fg:x="7158" fg:w="1"/><text x="100.2081%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="99.9581%" y="213" width="0.0140%" height="15" fill="rgb(254,151,24)" fg:x="7158" fg:w="1"/><text x="100.2081%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (7,128 samples, 99.54%)</title><rect x="0.4469%" y="453" width="99.5392%" height="15" fill="rgb(253,54,39)" fg:x="32" fg:w="7128"/><text x="0.6969%" y="463.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (7,128 samples, 99.54%)</title><rect x="0.4469%" y="437" width="99.5392%" height="15" fill="rgb(243,25,45)" fg:x="32" fg:w="7128"/><text x="0.6969%" y="447.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>omelette`std::sys::pal::unix::thread::Thread::new::thread_start (7,128 samples, 99.54%)</title><rect x="0.4469%" y="421" width="99.5392%" height="15" fill="rgb(234,134,9)" fg:x="32" fg:w="7128"/><text x="0.6969%" y="431.50">omelette`std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>omelette`core::ops::function::FnOnce::call_once{{vtable.shim}} (7,128 samples, 99.54%)</title><rect x="0.4469%" y="405" width="99.5392%" height="15" fill="rgb(227,166,31)" fg:x="32" fg:w="7128"/><text x="0.6969%" y="415.50">omelette`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>omelette`std::sys::backtrace::__rust_begin_short_backtrace (7,128 samples, 99.54%)</title><rect x="0.4469%" y="389" width="99.5392%" height="15" fill="rgb(245,143,41)" fg:x="32" fg:w="7128"/><text x="0.6969%" y="399.50">omelette`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>omelette`timely::worker::Worker&lt;A&gt;::step_or_park (7,126 samples, 99.51%)</title><rect x="0.4748%" y="373" width="99.5112%" height="15" fill="rgb(238,181,32)" fg:x="34" fg:w="7126"/><text x="0.7248%" y="383.50">omelette`timely::worker::Worker&lt;A&gt;::step_or_park</text></g><g><title>omelette`timely::worker::Wrapper::step (7,123 samples, 99.47%)</title><rect x="0.5167%" y="357" width="99.4693%" height="15" fill="rgb(224,113,18)" fg:x="37" fg:w="7123"/><text x="0.7667%" y="367.50">omelette`timely::worker::Wrapper::step</text></g><g><title>omelette`&lt;timely::progress::subgraph::Subgraph&lt;TOuter,TInner&gt; as timely::scheduling::Schedule&gt;::schedule (7,123 samples, 99.47%)</title><rect x="0.5167%" y="341" width="99.4693%" height="15" fill="rgb(240,229,28)" fg:x="37" fg:w="7123"/><text x="0.7667%" y="351.50">omelette`&lt;timely::progress::subgraph::Subgraph&lt;TOuter,TInner&gt; as timely::scheduling::Schedule&gt;::schedule</text></g><g><title>omelette`core::ptr::drop_in_place$LT$timely..dataflow..operators..generic..builder_raw..OperatorCore$LT$i32$C$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$GT$..build_reschedule$LT$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$GT$..build$LT$$LT$timely..dataflow..stream..StreamCore$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$alloc..vec..Vec$LT$$LP$omelette..Node$C$i32$C$isize$RP$$GT$$GT$$u20$as$u20$timely..dataflow..operators..generic..operator..Operator$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$alloc..vec..Vec$LT$$LP$omelette..No% (1 samples, 0.01%)</title><rect x="99.9721%" y="325" width="0.0140%" height="15" fill="rgb(250,185,3)" fg:x="7159" fg:w="1"/><text x="100.2221%" y="335.50"></text></g><g><title>omelette`core::ptr::drop_in_place$LT$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$GT$..build_reschedule$LT$timely..dataflow..operators..generic..builder_rc..OperatorBuilder$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$GT$..build$LT$$LT$timely..dataflow..stream..StreamCore$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$alloc..vec..Vec$LT$$LP$omelette..Node$C$i32$C$isize$RP$$GT$$GT$$u20$as$u20$timely..dataflow..operators..generic..operator..Operator$LT$timely..dataflow..scopes..child..Child$LT$timely..worker..Worker$LT$timely_communication..allocator..generic..Generic$GT$$C$i32$GT$$C$alloc..vec..Vec$LT$$LP$omelette..Node$C$i32$C$isize$RP$$GT$$GT$$GT$..unary$LT$timely_container..CapacityCont% (1 samples, 0.01%)</title><rect x="99.9721%" y="309" width="0.0140%" height="15" fill="rgb(212,59,25)" fg:x="7159" fg:w="1"/><text x="100.2221%" y="319.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;timely::dataflow::operators::generic::handles::InputHandleCore&lt;i32,alloc::vec::Vec&lt;(omelette::Node,i32,isize)&gt;,timely::dataflow::channels::pact::LogPuller&lt;i32,alloc::vec::Vec&lt;(omelette::Node,i32,isize)&gt;,timely_communication::allocator::counters::Puller&lt;timely::dataflow::channels::Message&lt;i32,alloc::vec::Vec&lt;(omelette::Node,i32,isize)&gt;&gt;,timely_communication::allocator::thread::Puller&lt;timely::dataflow::channels::Message&lt;i32,alloc::vec::Vec&lt;(omelette::Node,i32,isize)&gt;&gt;&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="99.9721%" y="293" width="0.0140%" height="15" fill="rgb(221,87,20)" fg:x="7159" fg:w="1"/><text x="100.2221%" y="303.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;timely::dataflow::channels::pact::LogPuller&lt;i32,alloc::vec::Vec&lt;(omelette::Node,i32,isize)&gt;,timely_communication::allocator::counters::Puller&lt;timely::dataflow::channels::Message&lt;i32,alloc::vec::Vec&lt;(omelette::Node,i32,isize)&gt;&gt;,timely_communication::allocator::thread::Puller&lt;timely::dataflow::channels::Message&lt;i32,alloc::vec::Vec&lt;(omelette::Node,i32,isize)&gt;&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="99.9721%" y="277" width="0.0140%" height="15" fill="rgb(213,74,28)" fg:x="7159" fg:w="1"/><text x="100.2221%" y="287.50"></text></g><g><title>omelette`core::ptr::drop_in_place&lt;core::cell::RefCell&lt;(alloc::collections::vec_deque::VecDeque&lt;timely::dataflow::channels::Message&lt;i32,alloc::vec::Vec&lt;(omelette::Node,i32,isize)&gt;&gt;&gt;,alloc::collections::vec_deque::VecDeque&lt;timely::dataflow::channels::Message&lt;i32,alloc::vec::Vec&lt;(omelette::Node,i32,isize)&gt;&gt;&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="99.9721%" y="261" width="0.0140%" height="15" fill="rgb(224,132,34)" fg:x="7159" fg:w="1"/><text x="100.2221%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="99.9721%" y="245" width="0.0140%" height="15" fill="rgb(222,101,24)" fg:x="7159" fg:w="1"/><text x="100.2221%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="99.9721%" y="229" width="0.0140%" height="15" fill="rgb(254,142,4)" fg:x="7159" fg:w="1"/><text x="100.2221%" y="239.50"></text></g><g><title>all (7,161 samples, 100%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(230,229,49)" fg:x="0" fg:w="7161"/><text x="0.2500%" y="479.50"></text></g><g><title>omelette`main (1 samples, 0.01%)</title><rect x="99.9860%" y="453" width="0.0140%" height="15" fill="rgb(238,70,47)" fg:x="7160" fg:w="1"/><text x="100.2360%" y="463.50"></text></g></svg></svg>